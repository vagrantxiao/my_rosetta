-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_rasterization1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    triangle_2d_x0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_x1_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y1_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_x2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_z_V : IN STD_LOGIC_VECTOR (7 downto 0);
    max_min_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    max_min_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    max_min_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    max_min_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    max_min_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_x0_s : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_y0_s : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_x1_s : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_y1_s : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_x2_s : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_y2_s : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_z_V : IN STD_LOGIC_VECTOR (7 downto 0);
    max_index_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of a0_rasterization1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_s_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_656 : STD_LOGIC_VECTOR (0 downto 0);
    signal triangle_2d_y0_V_tri_fu_238_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_y0_V_tri_reg_674 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_x0_V_tri_fu_246_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_x0_V_tri_reg_685 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_y1_V_tri_fu_254_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_y1_V_tri_reg_696 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_x1_V_tri_fu_262_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_x1_V_tri_reg_707 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal lhs_V_18_fu_170_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_14_fu_174_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_23_fu_178_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_601_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal lhs_V_21_fu_199_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_15_fu_188_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_26_fu_203_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_611_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_fu_196_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_fu_217_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_29_fu_220_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of r_V_29_fu_220_p2 : signal is "no";
    signal tmp_12_fu_230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_11_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in0_V_in2_V_i_fu_278_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal in1_V_in2_V_i_fu_288_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i1_12_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_i_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in0_V_in2_V_i1_fu_310_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal in1_V_in2_V_i1_fu_320_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i2_13_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_i1_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in0_V_in2_V_i2_fu_342_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal in1_V_in2_V_i2_fu_352_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i3_14_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_i1_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i3_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in0_V_in2_V_i3_fu_374_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal in1_V_in2_V_i3_fu_384_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_i1_fu_326_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_i_fu_294_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_fu_404_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_408_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal agg_result_V_i3_fu_390_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_i2_fu_358_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_412_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal max_min_V_4_fu_398_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_621_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_result_V_fu_514_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal triangle_2d_same_x0_1_fu_495_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_same_y0_1_fu_483_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_same_x1_1_fu_471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_same_y1_1_fu_477_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_same_x2_1_fu_489_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_same_y2_1_fu_501_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_same_z_V_1_fu_507_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_min_V_fu_464_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_min_V_1_fu_451_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_min_V_2_fu_437_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_min_3_V_write_a_fu_430_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_min_4_V_write_a_fu_444_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_index_0_V_write_fu_458_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_601_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_601_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_611_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_611_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_621_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_621_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_12_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_return_13_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_601_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_611_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_621_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_621_p10 : STD_LOGIC_VECTOR (8 downto 0);

    component a0_rendering_am_submbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component a0_rendering_am_submcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    rendering_am_submbkb_U10 : component a0_rendering_am_submbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_601_p0,
        din1 => grp_fu_601_p1,
        din2 => r_V_23_fu_178_p2,
        dout => grp_fu_601_p3);

    rendering_am_submbkb_U11 : component a0_rendering_am_submbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_611_p0,
        din1 => grp_fu_611_p1,
        din2 => r_V_26_fu_203_p2,
        dout => grp_fu_611_p3);

    rendering_am_submcud_U12 : component a0_rendering_am_submcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 16)
    port map (
        din0 => grp_fu_621_p0,
        din1 => grp_fu_621_p1,
        din2 => r_V_fu_412_p2,
        dout => grp_fu_621_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg(0) <= '0';
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                                        ap_return_0_preg(0) <= agg_result_V_fu_514_p1(0);
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_10_preg <= max_min_V_2_fu_437_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_11_preg <= max_min_3_V_write_a_fu_430_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_12_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_12_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_12_preg <= max_min_4_V_write_a_fu_444_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_13_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_13_preg <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_13_preg <= max_index_0_V_write_fu_458_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_1_preg <= triangle_2d_same_x0_1_fu_495_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_2_preg <= triangle_2d_same_y0_1_fu_483_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_3_preg <= triangle_2d_same_x1_1_fu_471_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_4_preg <= triangle_2d_same_y1_1_fu_477_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_5_preg <= triangle_2d_same_x2_1_fu_489_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_6_preg <= triangle_2d_same_y2_1_fu_501_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_7_preg <= triangle_2d_same_z_V_1_fu_507_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_8_preg <= max_min_V_fu_464_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv8_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_return_9_preg <= max_min_V_1_fu_451_p3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_s_reg_656 <= tmp_s_fu_224_p2;
                triangle_2d_x0_V_tri_reg_685 <= triangle_2d_x0_V_tri_fu_246_p3;
                triangle_2d_x1_V_tri_reg_707 <= triangle_2d_x1_V_tri_fu_262_p3;
                triangle_2d_y0_V_tri_reg_674 <= triangle_2d_y0_V_tri_fu_238_p3;
                triangle_2d_y1_V_tri_reg_696 <= triangle_2d_y1_V_tri_fu_254_p3;
            end if;
        end if;
    end process;
    ap_return_0_preg(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    agg_result_V_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_reg_656),2));
    agg_result_V_i1_fu_326_p3 <= 
        in0_V_in2_V_i1_fu_310_p3 when (tmp_i1_fu_302_p2(0) = '1') else 
        in1_V_in2_V_i1_fu_320_p3;
    agg_result_V_i2_fu_358_p3 <= 
        in0_V_in2_V_i2_fu_342_p3 when (tmp_i2_fu_334_p2(0) = '1') else 
        in1_V_in2_V_i2_fu_352_p3;
    agg_result_V_i3_fu_390_p3 <= 
        in0_V_in2_V_i3_fu_374_p3 when (tmp_i3_fu_366_p2(0) = '1') else 
        in1_V_in2_V_i3_fu_384_p3;
    agg_result_V_i_fu_294_p3 <= 
        in0_V_in2_V_i_fu_278_p3 when (tmp_i_fu_270_p2(0) = '1') else 
        in1_V_in2_V_i_fu_288_p3;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_state2, agg_result_V_fu_514_p1, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_0 <= agg_result_V_fu_514_p1;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state2, triangle_2d_same_x0_1_fu_495_p3, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_1 <= triangle_2d_same_x0_1_fu_495_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_CS_fsm_state2, max_min_V_2_fu_437_p3, ap_return_10_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_10 <= max_min_V_2_fu_437_p3;
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_CS_fsm_state2, max_min_3_V_write_a_fu_430_p3, ap_return_11_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_11 <= max_min_3_V_write_a_fu_430_p3;
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_12_assign_proc : process(ap_CS_fsm_state2, max_min_4_V_write_a_fu_444_p3, ap_return_12_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_12 <= max_min_4_V_write_a_fu_444_p3;
        else 
            ap_return_12 <= ap_return_12_preg;
        end if; 
    end process;


    ap_return_13_assign_proc : process(ap_CS_fsm_state2, max_index_0_V_write_fu_458_p3, ap_return_13_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_13 <= max_index_0_V_write_fu_458_p3;
        else 
            ap_return_13 <= ap_return_13_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_CS_fsm_state2, triangle_2d_same_y0_1_fu_483_p3, ap_return_2_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_2 <= triangle_2d_same_y0_1_fu_483_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_state2, triangle_2d_same_x1_1_fu_471_p3, ap_return_3_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_3 <= triangle_2d_same_x1_1_fu_471_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_CS_fsm_state2, triangle_2d_same_y1_1_fu_477_p3, ap_return_4_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_4 <= triangle_2d_same_y1_1_fu_477_p3;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_CS_fsm_state2, triangle_2d_same_x2_1_fu_489_p3, ap_return_5_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_5 <= triangle_2d_same_x2_1_fu_489_p3;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_CS_fsm_state2, triangle_2d_same_y2_1_fu_501_p3, ap_return_6_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_6 <= triangle_2d_same_y2_1_fu_501_p3;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_CS_fsm_state2, triangle_2d_same_z_V_1_fu_507_p3, ap_return_7_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_7 <= triangle_2d_same_z_V_1_fu_507_p3;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_CS_fsm_state2, max_min_V_fu_464_p3, ap_return_8_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_8 <= max_min_V_fu_464_p3;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_CS_fsm_state2, max_min_V_1_fu_451_p3, ap_return_9_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_return_9 <= max_min_V_1_fu_451_p3;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    grp_fu_601_p0 <= grp_fu_601_p00(8 - 1 downto 0);
    grp_fu_601_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_y1_V),9));
    grp_fu_601_p1 <= rhs_V_15_fu_188_p1(8 - 1 downto 0);
    grp_fu_611_p0 <= grp_fu_611_p00(8 - 1 downto 0);
    grp_fu_611_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_x1_V),9));
    grp_fu_611_p1 <= rhs_V_14_fu_174_p1(8 - 1 downto 0);
    grp_fu_621_p0 <= grp_fu_621_p00(8 - 1 downto 0);
    grp_fu_621_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_i3_fu_390_p3),9));
    grp_fu_621_p1 <= grp_fu_621_p10(8 - 1 downto 0);
    grp_fu_621_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_i2_fu_358_p3),9));
    in0_V_in2_V_i1_fu_310_p3 <= 
        triangle_2d_x1_V_tri_reg_707 when (tmp_i1_12_fu_306_p2(0) = '1') else 
        triangle_2d_x2_V;
    in0_V_in2_V_i2_fu_342_p3 <= 
        triangle_2d_y1_V_tri_reg_696 when (tmp_i2_13_fu_338_p2(0) = '1') else 
        triangle_2d_y2_V;
    in0_V_in2_V_i3_fu_374_p3 <= 
        triangle_2d_y1_V_tri_reg_696 when (tmp_i3_14_fu_370_p2(0) = '1') else 
        triangle_2d_y2_V;
    in0_V_in2_V_i_fu_278_p3 <= 
        triangle_2d_x1_V_tri_reg_707 when (tmp_i_11_fu_274_p2(0) = '1') else 
        triangle_2d_x2_V;
    in1_V_in2_V_i1_fu_320_p3 <= 
        triangle_2d_x0_V_tri_reg_685 when (tmp_20_i_fu_316_p2(0) = '1') else 
        triangle_2d_x2_V;
    in1_V_in2_V_i2_fu_352_p3 <= 
        triangle_2d_y0_V_tri_reg_674 when (tmp_19_i1_fu_348_p2(0) = '1') else 
        triangle_2d_y2_V;
    in1_V_in2_V_i3_fu_384_p3 <= 
        triangle_2d_y0_V_tri_reg_674 when (tmp_20_i1_fu_380_p2(0) = '1') else 
        triangle_2d_y2_V;
    in1_V_in2_V_i_fu_288_p3 <= 
        triangle_2d_x0_V_tri_reg_685 when (tmp_19_i_fu_284_p2(0) = '1') else 
        triangle_2d_x2_V;
    lhs_V_18_fu_170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_x2_V),9));
    lhs_V_21_fu_199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_y2_V),9));
    lhs_V_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_i1_fu_326_p3),9));
    max_index_0_V_write_fu_458_p3 <= 
        max_index_0_V_read when (tmp_s_reg_656(0) = '1') else 
        grp_fu_621_p3;
    max_min_3_V_write_a_fu_430_p3 <= 
        max_min_3_V_read when (tmp_s_reg_656(0) = '1') else 
        agg_result_V_i3_fu_390_p3;
    max_min_4_V_write_a_fu_444_p3 <= 
        max_min_4_V_read when (tmp_s_reg_656(0) = '1') else 
        max_min_V_4_fu_398_p2;
    max_min_V_1_fu_451_p3 <= 
        max_min_1_V_read when (tmp_s_reg_656(0) = '1') else 
        agg_result_V_i1_fu_326_p3;
    max_min_V_2_fu_437_p3 <= 
        max_min_2_V_read when (tmp_s_reg_656(0) = '1') else 
        agg_result_V_i2_fu_358_p3;
    max_min_V_4_fu_398_p2 <= std_logic_vector(unsigned(agg_result_V_i1_fu_326_p3) - unsigned(agg_result_V_i_fu_294_p3));
    max_min_V_fu_464_p3 <= 
        max_min_0_V_read when (tmp_s_reg_656(0) = '1') else 
        agg_result_V_i_fu_294_p3;
    r_V_23_fu_178_p2 <= std_logic_vector(unsigned(lhs_V_18_fu_170_p1) - unsigned(rhs_V_14_fu_174_p1));
    r_V_26_fu_203_p2 <= std_logic_vector(unsigned(lhs_V_21_fu_199_p1) - unsigned(rhs_V_15_fu_188_p1));
    r_V_29_fu_220_p2 <= std_logic_vector(signed(grp_fu_601_p3) - signed(grp_fu_611_p3));
    r_V_fu_412_p2 <= std_logic_vector(unsigned(lhs_V_fu_404_p1) - unsigned(rhs_V_fu_408_p1));
    rhs_V_14_fu_174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_x0_V),9));
    rhs_V_15_fu_188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_y0_V),9));
    rhs_V_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_i_fu_294_p3),9));
    tmp_11_fu_217_p1 <= grp_fu_611_p3(17 - 1 downto 0);
    tmp_12_fu_230_p3 <= r_V_29_fu_220_p2(17 downto 17);
    tmp_19_i1_fu_348_p2 <= "1" when (unsigned(triangle_2d_y0_V_tri_reg_674) < unsigned(triangle_2d_y2_V)) else "0";
    tmp_19_i_fu_284_p2 <= "1" when (unsigned(triangle_2d_x0_V_tri_reg_685) < unsigned(triangle_2d_x2_V)) else "0";
    tmp_20_i1_fu_380_p2 <= "1" when (unsigned(triangle_2d_y0_V_tri_reg_674) > unsigned(triangle_2d_y2_V)) else "0";
    tmp_20_i_fu_316_p2 <= "1" when (unsigned(triangle_2d_x0_V_tri_reg_685) > unsigned(triangle_2d_x2_V)) else "0";
    tmp_fu_196_p1 <= grp_fu_601_p3(17 - 1 downto 0);
    tmp_i1_12_fu_306_p2 <= "1" when (unsigned(triangle_2d_x1_V_tri_reg_707) > unsigned(triangle_2d_x2_V)) else "0";
    tmp_i1_fu_302_p2 <= "1" when (unsigned(triangle_2d_x1_V_tri_reg_707) > unsigned(triangle_2d_x0_V_tri_reg_685)) else "0";
    tmp_i2_13_fu_338_p2 <= "1" when (unsigned(triangle_2d_y1_V_tri_reg_696) < unsigned(triangle_2d_y2_V)) else "0";
    tmp_i2_fu_334_p2 <= "1" when (unsigned(triangle_2d_y1_V_tri_reg_696) < unsigned(triangle_2d_y0_V_tri_reg_674)) else "0";
    tmp_i3_14_fu_370_p2 <= "1" when (unsigned(triangle_2d_y1_V_tri_reg_696) > unsigned(triangle_2d_y2_V)) else "0";
    tmp_i3_fu_366_p2 <= "1" when (unsigned(triangle_2d_y1_V_tri_reg_696) > unsigned(triangle_2d_y0_V_tri_reg_674)) else "0";
    tmp_i_11_fu_274_p2 <= "1" when (unsigned(triangle_2d_x1_V_tri_reg_707) < unsigned(triangle_2d_x2_V)) else "0";
    tmp_i_fu_270_p2 <= "1" when (unsigned(triangle_2d_x1_V_tri_reg_707) < unsigned(triangle_2d_x0_V_tri_reg_685)) else "0";
    tmp_s_fu_224_p2 <= "1" when (tmp_fu_196_p1 = tmp_11_fu_217_p1) else "0";
    triangle_2d_same_x0_1_fu_495_p3 <= 
        triangle_2d_same_x0_s when (tmp_s_reg_656(0) = '1') else 
        triangle_2d_x1_V_tri_reg_707;
    triangle_2d_same_x1_1_fu_471_p3 <= 
        triangle_2d_same_x1_s when (tmp_s_reg_656(0) = '1') else 
        triangle_2d_x0_V_tri_reg_685;
    triangle_2d_same_x2_1_fu_489_p3 <= 
        triangle_2d_same_x2_s when (tmp_s_reg_656(0) = '1') else 
        triangle_2d_x2_V;
    triangle_2d_same_y0_1_fu_483_p3 <= 
        triangle_2d_same_y0_s when (tmp_s_reg_656(0) = '1') else 
        triangle_2d_y1_V_tri_reg_696;
    triangle_2d_same_y1_1_fu_477_p3 <= 
        triangle_2d_same_y1_s when (tmp_s_reg_656(0) = '1') else 
        triangle_2d_y0_V_tri_reg_674;
    triangle_2d_same_y2_1_fu_501_p3 <= 
        triangle_2d_same_y2_s when (tmp_s_reg_656(0) = '1') else 
        triangle_2d_y2_V;
    triangle_2d_same_z_V_1_fu_507_p3 <= 
        triangle_2d_same_z_V when (tmp_s_reg_656(0) = '1') else 
        triangle_2d_z_V;
    triangle_2d_x0_V_tri_fu_246_p3 <= 
        triangle_2d_x0_V when (tmp_12_fu_230_p3(0) = '1') else 
        triangle_2d_x1_V;
    triangle_2d_x1_V_tri_fu_262_p3 <= 
        triangle_2d_x1_V when (tmp_12_fu_230_p3(0) = '1') else 
        triangle_2d_x0_V;
    triangle_2d_y0_V_tri_fu_238_p3 <= 
        triangle_2d_y0_V when (tmp_12_fu_230_p3(0) = '1') else 
        triangle_2d_y1_V;
    triangle_2d_y1_V_tri_fu_254_p3 <= 
        triangle_2d_y1_V when (tmp_12_fu_230_p3(0) = '1') else 
        triangle_2d_y0_V;
end behav;
