-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_projection is
port (
    ap_ready : OUT STD_LOGIC;
    triangle_2d_x0_V_wri : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y0_V_wri : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_3d_z0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_x1_V_wri : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y1_V_wri : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_3d_z1_V : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_x2_V_wri : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y2_V_wri : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_3d_z2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of a0_projection is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv18_156 : STD_LOGIC_VECTOR (17 downto 0) := "000000000101010110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal mul5_fu_88_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul5_fu_88_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul2_fu_108_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul2_fu_108_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_fu_128_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_fu_128_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal div1_fu_94_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal div3_fu_134_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_144_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal div2_fu_114_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal triangle_2d_z_V_writ_fu_150_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul2_fu_108_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul5_fu_88_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_fu_128_p00 : STD_LOGIC_VECTOR (17 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= triangle_2d_x0_V_wri;
    ap_return_1 <= triangle_2d_y0_V_wri;
    ap_return_2 <= triangle_2d_x1_V_wri;
    ap_return_3 <= triangle_2d_y1_V_wri;
    ap_return_4 <= triangle_2d_x2_V_wri;
    ap_return_5 <= triangle_2d_y2_V_wri;
    ap_return_6 <= triangle_2d_z_V_writ_fu_150_p2;
    div1_fu_94_p4 <= mul5_fu_88_p2(17 downto 10);
    div2_fu_114_p4 <= mul2_fu_108_p2(17 downto 10);
    div3_fu_134_p4 <= mul_fu_128_p2(17 downto 10);
    mul2_fu_108_p0 <= mul2_fu_108_p00(8 - 1 downto 0);
    mul2_fu_108_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_3d_z1_V),18));
    mul2_fu_108_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul2_fu_108_p0) * unsigned(ap_const_lv18_156), 18));
    mul5_fu_88_p0 <= mul5_fu_88_p00(8 - 1 downto 0);
    mul5_fu_88_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_3d_z0_V),18));
    mul5_fu_88_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul5_fu_88_p0) * unsigned(ap_const_lv18_156), 18));
    mul_fu_128_p0 <= mul_fu_128_p00(8 - 1 downto 0);
    mul_fu_128_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_3d_z2_V),18));
    mul_fu_128_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_fu_128_p0) * unsigned(ap_const_lv18_156), 18));
    tmp_fu_144_p2 <= std_logic_vector(unsigned(div1_fu_94_p4) + unsigned(div3_fu_134_p4));
    triangle_2d_z_V_writ_fu_150_p2 <= std_logic_vector(unsigned(tmp_fu_144_p2) + unsigned(div2_fu_114_p4));
end behav;
