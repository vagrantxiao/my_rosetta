// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_projection.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_projection::ap_const_logic_1 = sc_dt::Log_1;
const bool a0_projection::ap_const_boolean_1 = true;
const sc_lv<18> a0_projection::ap_const_lv18_156 = "101010110";
const sc_lv<32> a0_projection::ap_const_lv32_A = "1010";
const sc_lv<32> a0_projection::ap_const_lv32_11 = "10001";
const sc_logic a0_projection::ap_const_logic_0 = sc_dt::Log_0;

a0_projection::a0_projection(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return_0);
    sensitive << ( triangle_2d_x0_V_wri );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( triangle_2d_y0_V_wri );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( triangle_2d_x1_V_wri );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( triangle_2d_y1_V_wri );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( triangle_2d_x2_V_wri );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( triangle_2d_y2_V_wri );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( triangle_2d_z_V_writ_fu_150_p2 );

    SC_METHOD(thread_div1_fu_94_p4);
    sensitive << ( mul5_fu_88_p2 );

    SC_METHOD(thread_div2_fu_114_p4);
    sensitive << ( mul2_fu_108_p2 );

    SC_METHOD(thread_div3_fu_134_p4);
    sensitive << ( mul_fu_128_p2 );

    SC_METHOD(thread_mul2_fu_108_p0);
    sensitive << ( mul2_fu_108_p00 );

    SC_METHOD(thread_mul2_fu_108_p00);
    sensitive << ( triangle_3d_z1_V );

    SC_METHOD(thread_mul2_fu_108_p2);
    sensitive << ( mul2_fu_108_p0 );

    SC_METHOD(thread_mul5_fu_88_p0);
    sensitive << ( mul5_fu_88_p00 );

    SC_METHOD(thread_mul5_fu_88_p00);
    sensitive << ( triangle_3d_z0_V );

    SC_METHOD(thread_mul5_fu_88_p2);
    sensitive << ( mul5_fu_88_p0 );

    SC_METHOD(thread_mul_fu_128_p0);
    sensitive << ( mul_fu_128_p00 );

    SC_METHOD(thread_mul_fu_128_p00);
    sensitive << ( triangle_3d_z2_V );

    SC_METHOD(thread_mul_fu_128_p2);
    sensitive << ( mul_fu_128_p0 );

    SC_METHOD(thread_tmp_fu_144_p2);
    sensitive << ( div1_fu_94_p4 );
    sensitive << ( div3_fu_134_p4 );

    SC_METHOD(thread_triangle_2d_z_V_writ_fu_150_p2);
    sensitive << ( tmp_fu_144_p2 );
    sensitive << ( div2_fu_114_p4 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_projection_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, triangle_2d_x0_V_wri, "(port)triangle_2d_x0_V_wri");
    sc_trace(mVcdFile, triangle_2d_y0_V_wri, "(port)triangle_2d_y0_V_wri");
    sc_trace(mVcdFile, triangle_3d_z0_V, "(port)triangle_3d_z0_V");
    sc_trace(mVcdFile, triangle_2d_x1_V_wri, "(port)triangle_2d_x1_V_wri");
    sc_trace(mVcdFile, triangle_2d_y1_V_wri, "(port)triangle_2d_y1_V_wri");
    sc_trace(mVcdFile, triangle_3d_z1_V, "(port)triangle_3d_z1_V");
    sc_trace(mVcdFile, triangle_2d_x2_V_wri, "(port)triangle_2d_x2_V_wri");
    sc_trace(mVcdFile, triangle_2d_y2_V_wri, "(port)triangle_2d_y2_V_wri");
    sc_trace(mVcdFile, triangle_3d_z2_V, "(port)triangle_3d_z2_V");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, mul5_fu_88_p0, "mul5_fu_88_p0");
    sc_trace(mVcdFile, mul5_fu_88_p2, "mul5_fu_88_p2");
    sc_trace(mVcdFile, mul2_fu_108_p0, "mul2_fu_108_p0");
    sc_trace(mVcdFile, mul2_fu_108_p2, "mul2_fu_108_p2");
    sc_trace(mVcdFile, mul_fu_128_p0, "mul_fu_128_p0");
    sc_trace(mVcdFile, mul_fu_128_p2, "mul_fu_128_p2");
    sc_trace(mVcdFile, div1_fu_94_p4, "div1_fu_94_p4");
    sc_trace(mVcdFile, div3_fu_134_p4, "div3_fu_134_p4");
    sc_trace(mVcdFile, tmp_fu_144_p2, "tmp_fu_144_p2");
    sc_trace(mVcdFile, div2_fu_114_p4, "div2_fu_114_p4");
    sc_trace(mVcdFile, triangle_2d_z_V_writ_fu_150_p2, "triangle_2d_z_V_writ_fu_150_p2");
    sc_trace(mVcdFile, mul2_fu_108_p00, "mul2_fu_108_p00");
    sc_trace(mVcdFile, mul5_fu_88_p00, "mul5_fu_88_p00");
    sc_trace(mVcdFile, mul_fu_128_p00, "mul_fu_128_p00");
#endif

    }
}

a0_projection::~a0_projection() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void a0_projection::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void a0_projection::thread_ap_return_0() {
    ap_return_0 = triangle_2d_x0_V_wri.read();
}

void a0_projection::thread_ap_return_1() {
    ap_return_1 = triangle_2d_y0_V_wri.read();
}

void a0_projection::thread_ap_return_2() {
    ap_return_2 = triangle_2d_x1_V_wri.read();
}

void a0_projection::thread_ap_return_3() {
    ap_return_3 = triangle_2d_y1_V_wri.read();
}

void a0_projection::thread_ap_return_4() {
    ap_return_4 = triangle_2d_x2_V_wri.read();
}

void a0_projection::thread_ap_return_5() {
    ap_return_5 = triangle_2d_y2_V_wri.read();
}

void a0_projection::thread_ap_return_6() {
    ap_return_6 = triangle_2d_z_V_writ_fu_150_p2.read();
}

void a0_projection::thread_div1_fu_94_p4() {
    div1_fu_94_p4 = mul5_fu_88_p2.read().range(17, 10);
}

void a0_projection::thread_div2_fu_114_p4() {
    div2_fu_114_p4 = mul2_fu_108_p2.read().range(17, 10);
}

void a0_projection::thread_div3_fu_134_p4() {
    div3_fu_134_p4 = mul_fu_128_p2.read().range(17, 10);
}

void a0_projection::thread_mul2_fu_108_p0() {
    mul2_fu_108_p0 =  (sc_lv<8>) (mul2_fu_108_p00.read());
}

void a0_projection::thread_mul2_fu_108_p00() {
    mul2_fu_108_p00 = esl_zext<18,8>(triangle_3d_z1_V.read());
}

void a0_projection::thread_mul2_fu_108_p2() {
    mul2_fu_108_p2 = (!mul2_fu_108_p0.read().is_01() || !ap_const_lv18_156.is_01())? sc_lv<18>(): sc_biguint<8>(mul2_fu_108_p0.read()) * sc_biguint<18>(ap_const_lv18_156);
}

void a0_projection::thread_mul5_fu_88_p0() {
    mul5_fu_88_p0 =  (sc_lv<8>) (mul5_fu_88_p00.read());
}

void a0_projection::thread_mul5_fu_88_p00() {
    mul5_fu_88_p00 = esl_zext<18,8>(triangle_3d_z0_V.read());
}

void a0_projection::thread_mul5_fu_88_p2() {
    mul5_fu_88_p2 = (!mul5_fu_88_p0.read().is_01() || !ap_const_lv18_156.is_01())? sc_lv<18>(): sc_biguint<8>(mul5_fu_88_p0.read()) * sc_biguint<18>(ap_const_lv18_156);
}

void a0_projection::thread_mul_fu_128_p0() {
    mul_fu_128_p0 =  (sc_lv<8>) (mul_fu_128_p00.read());
}

void a0_projection::thread_mul_fu_128_p00() {
    mul_fu_128_p00 = esl_zext<18,8>(triangle_3d_z2_V.read());
}

void a0_projection::thread_mul_fu_128_p2() {
    mul_fu_128_p2 = (!mul_fu_128_p0.read().is_01() || !ap_const_lv18_156.is_01())? sc_lv<18>(): sc_biguint<8>(mul_fu_128_p0.read()) * sc_biguint<18>(ap_const_lv18_156);
}

void a0_projection::thread_tmp_fu_144_p2() {
    tmp_fu_144_p2 = (!div1_fu_94_p4.read().is_01() || !div3_fu_134_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(div1_fu_94_p4.read()) + sc_biguint<8>(div3_fu_134_p4.read()));
}

void a0_projection::thread_triangle_2d_z_V_writ_fu_150_p2() {
    triangle_2d_z_V_writ_fu_150_p2 = (!tmp_fu_144_p2.read().is_01() || !div2_fu_114_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_fu_144_p2.read()) + sc_biguint<8>(div2_fu_114_p4.read()));
}

}

