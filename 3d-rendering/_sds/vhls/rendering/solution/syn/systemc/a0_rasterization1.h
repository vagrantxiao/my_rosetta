// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_rasterization1_HH_
#define _a0_rasterization1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "a0_rendering_am_submbkb.h"
#include "a0_rendering_am_submcud.h"

namespace ap_rtl {

struct a0_rasterization1 : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > triangle_2d_x0_V;
    sc_in< sc_lv<8> > triangle_2d_y0_V;
    sc_in< sc_lv<8> > triangle_2d_x1_V;
    sc_in< sc_lv<8> > triangle_2d_y1_V;
    sc_in< sc_lv<8> > triangle_2d_x2_V;
    sc_in< sc_lv<8> > triangle_2d_y2_V;
    sc_in< sc_lv<8> > triangle_2d_z_V;
    sc_in< sc_lv<8> > max_min_0_V_read;
    sc_in< sc_lv<8> > max_min_1_V_read;
    sc_in< sc_lv<8> > max_min_2_V_read;
    sc_in< sc_lv<8> > max_min_3_V_read;
    sc_in< sc_lv<8> > max_min_4_V_read;
    sc_in< sc_lv<8> > triangle_2d_same_x0_s;
    sc_in< sc_lv<8> > triangle_2d_same_y0_s;
    sc_in< sc_lv<8> > triangle_2d_same_x1_s;
    sc_in< sc_lv<8> > triangle_2d_same_y1_s;
    sc_in< sc_lv<8> > triangle_2d_same_x2_s;
    sc_in< sc_lv<8> > triangle_2d_same_y2_s;
    sc_in< sc_lv<8> > triangle_2d_same_z_V;
    sc_in< sc_lv<16> > max_index_0_V_read;
    sc_out< sc_lv<2> > ap_return_0;
    sc_out< sc_lv<8> > ap_return_1;
    sc_out< sc_lv<8> > ap_return_2;
    sc_out< sc_lv<8> > ap_return_3;
    sc_out< sc_lv<8> > ap_return_4;
    sc_out< sc_lv<8> > ap_return_5;
    sc_out< sc_lv<8> > ap_return_6;
    sc_out< sc_lv<8> > ap_return_7;
    sc_out< sc_lv<8> > ap_return_8;
    sc_out< sc_lv<8> > ap_return_9;
    sc_out< sc_lv<8> > ap_return_10;
    sc_out< sc_lv<8> > ap_return_11;
    sc_out< sc_lv<8> > ap_return_12;
    sc_out< sc_lv<16> > ap_return_13;


    // Module declarations
    a0_rasterization1(sc_module_name name);
    SC_HAS_PROCESS(a0_rasterization1);

    ~a0_rasterization1();

    sc_trace_file* mVcdFile;

    a0_rendering_am_submbkb<1,1,8,8,9,18>* rendering_am_submbkb_U10;
    a0_rendering_am_submbkb<1,1,8,8,9,18>* rendering_am_submbkb_U11;
    a0_rendering_am_submcud<1,1,8,8,9,16>* rendering_am_submcud_U12;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_s_fu_224_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_656;
    sc_signal< sc_lv<8> > triangle_2d_y0_V_tri_fu_238_p3;
    sc_signal< sc_lv<8> > triangle_2d_y0_V_tri_reg_674;
    sc_signal< sc_lv<8> > triangle_2d_x0_V_tri_fu_246_p3;
    sc_signal< sc_lv<8> > triangle_2d_x0_V_tri_reg_685;
    sc_signal< sc_lv<8> > triangle_2d_y1_V_tri_fu_254_p3;
    sc_signal< sc_lv<8> > triangle_2d_y1_V_tri_reg_696;
    sc_signal< sc_lv<8> > triangle_2d_x1_V_tri_fu_262_p3;
    sc_signal< sc_lv<8> > triangle_2d_x1_V_tri_reg_707;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > lhs_V_18_fu_170_p1;
    sc_signal< sc_lv<9> > rhs_V_14_fu_174_p1;
    sc_signal< sc_lv<9> > r_V_23_fu_178_p2;
    sc_signal< sc_lv<18> > grp_fu_601_p3;
    sc_signal< sc_lv<9> > lhs_V_21_fu_199_p1;
    sc_signal< sc_lv<9> > rhs_V_15_fu_188_p1;
    sc_signal< sc_lv<9> > r_V_26_fu_203_p2;
    sc_signal< sc_lv<18> > grp_fu_611_p3;
    sc_signal< sc_lv<17> > tmp_fu_196_p1;
    sc_signal< sc_lv<17> > tmp_11_fu_217_p1;
    sc_signal< sc_lv<18> > r_V_29_fu_220_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_230_p3;
    sc_signal< sc_lv<1> > tmp_i_11_fu_274_p2;
    sc_signal< sc_lv<1> > tmp_19_i_fu_284_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_270_p2;
    sc_signal< sc_lv<8> > in0_V_in2_V_i_fu_278_p3;
    sc_signal< sc_lv<8> > in1_V_in2_V_i_fu_288_p3;
    sc_signal< sc_lv<1> > tmp_i1_12_fu_306_p2;
    sc_signal< sc_lv<1> > tmp_20_i_fu_316_p2;
    sc_signal< sc_lv<1> > tmp_i1_fu_302_p2;
    sc_signal< sc_lv<8> > in0_V_in2_V_i1_fu_310_p3;
    sc_signal< sc_lv<8> > in1_V_in2_V_i1_fu_320_p3;
    sc_signal< sc_lv<1> > tmp_i2_13_fu_338_p2;
    sc_signal< sc_lv<1> > tmp_19_i1_fu_348_p2;
    sc_signal< sc_lv<1> > tmp_i2_fu_334_p2;
    sc_signal< sc_lv<8> > in0_V_in2_V_i2_fu_342_p3;
    sc_signal< sc_lv<8> > in1_V_in2_V_i2_fu_352_p3;
    sc_signal< sc_lv<1> > tmp_i3_14_fu_370_p2;
    sc_signal< sc_lv<1> > tmp_20_i1_fu_380_p2;
    sc_signal< sc_lv<1> > tmp_i3_fu_366_p2;
    sc_signal< sc_lv<8> > in0_V_in2_V_i3_fu_374_p3;
    sc_signal< sc_lv<8> > in1_V_in2_V_i3_fu_384_p3;
    sc_signal< sc_lv<8> > agg_result_V_i1_fu_326_p3;
    sc_signal< sc_lv<8> > agg_result_V_i_fu_294_p3;
    sc_signal< sc_lv<9> > lhs_V_fu_404_p1;
    sc_signal< sc_lv<9> > rhs_V_fu_408_p1;
    sc_signal< sc_lv<8> > agg_result_V_i3_fu_390_p3;
    sc_signal< sc_lv<8> > agg_result_V_i2_fu_358_p3;
    sc_signal< sc_lv<9> > r_V_fu_412_p2;
    sc_signal< sc_lv<8> > max_min_V_4_fu_398_p2;
    sc_signal< sc_lv<16> > grp_fu_621_p3;
    sc_signal< sc_lv<2> > agg_result_V_fu_514_p1;
    sc_signal< sc_lv<8> > triangle_2d_same_x0_1_fu_495_p3;
    sc_signal< sc_lv<8> > triangle_2d_same_y0_1_fu_483_p3;
    sc_signal< sc_lv<8> > triangle_2d_same_x1_1_fu_471_p3;
    sc_signal< sc_lv<8> > triangle_2d_same_y1_1_fu_477_p3;
    sc_signal< sc_lv<8> > triangle_2d_same_x2_1_fu_489_p3;
    sc_signal< sc_lv<8> > triangle_2d_same_y2_1_fu_501_p3;
    sc_signal< sc_lv<8> > triangle_2d_same_z_V_1_fu_507_p3;
    sc_signal< sc_lv<8> > max_min_V_fu_464_p3;
    sc_signal< sc_lv<8> > max_min_V_1_fu_451_p3;
    sc_signal< sc_lv<8> > max_min_V_2_fu_437_p3;
    sc_signal< sc_lv<8> > max_min_3_V_write_a_fu_430_p3;
    sc_signal< sc_lv<8> > max_min_4_V_write_a_fu_444_p3;
    sc_signal< sc_lv<16> > max_index_0_V_write_fu_458_p3;
    sc_signal< sc_lv<8> > grp_fu_601_p0;
    sc_signal< sc_lv<8> > grp_fu_601_p1;
    sc_signal< sc_lv<8> > grp_fu_611_p0;
    sc_signal< sc_lv<8> > grp_fu_611_p1;
    sc_signal< sc_lv<8> > grp_fu_621_p0;
    sc_signal< sc_lv<8> > grp_fu_621_p1;
    sc_signal< sc_lv<2> > ap_return_0_preg;
    sc_signal< sc_lv<8> > ap_return_1_preg;
    sc_signal< sc_lv<8> > ap_return_2_preg;
    sc_signal< sc_lv<8> > ap_return_3_preg;
    sc_signal< sc_lv<8> > ap_return_4_preg;
    sc_signal< sc_lv<8> > ap_return_5_preg;
    sc_signal< sc_lv<8> > ap_return_6_preg;
    sc_signal< sc_lv<8> > ap_return_7_preg;
    sc_signal< sc_lv<8> > ap_return_8_preg;
    sc_signal< sc_lv<8> > ap_return_9_preg;
    sc_signal< sc_lv<8> > ap_return_10_preg;
    sc_signal< sc_lv<8> > ap_return_11_preg;
    sc_signal< sc_lv<8> > ap_return_12_preg;
    sc_signal< sc_lv<16> > ap_return_13_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_lv<9> > grp_fu_601_p00;
    sc_signal< sc_lv<9> > grp_fu_611_p00;
    sc_signal< sc_lv<9> > grp_fu_621_p00;
    sc_signal< sc_lv<9> > grp_fu_621_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_agg_result_V_fu_514_p1();
    void thread_agg_result_V_i1_fu_326_p3();
    void thread_agg_result_V_i2_fu_358_p3();
    void thread_agg_result_V_i3_fu_390_p3();
    void thread_agg_result_V_i_fu_294_p3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_12();
    void thread_ap_return_13();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_grp_fu_601_p0();
    void thread_grp_fu_601_p00();
    void thread_grp_fu_601_p1();
    void thread_grp_fu_611_p0();
    void thread_grp_fu_611_p00();
    void thread_grp_fu_611_p1();
    void thread_grp_fu_621_p0();
    void thread_grp_fu_621_p00();
    void thread_grp_fu_621_p1();
    void thread_grp_fu_621_p10();
    void thread_in0_V_in2_V_i1_fu_310_p3();
    void thread_in0_V_in2_V_i2_fu_342_p3();
    void thread_in0_V_in2_V_i3_fu_374_p3();
    void thread_in0_V_in2_V_i_fu_278_p3();
    void thread_in1_V_in2_V_i1_fu_320_p3();
    void thread_in1_V_in2_V_i2_fu_352_p3();
    void thread_in1_V_in2_V_i3_fu_384_p3();
    void thread_in1_V_in2_V_i_fu_288_p3();
    void thread_lhs_V_18_fu_170_p1();
    void thread_lhs_V_21_fu_199_p1();
    void thread_lhs_V_fu_404_p1();
    void thread_max_index_0_V_write_fu_458_p3();
    void thread_max_min_3_V_write_a_fu_430_p3();
    void thread_max_min_4_V_write_a_fu_444_p3();
    void thread_max_min_V_1_fu_451_p3();
    void thread_max_min_V_2_fu_437_p3();
    void thread_max_min_V_4_fu_398_p2();
    void thread_max_min_V_fu_464_p3();
    void thread_r_V_23_fu_178_p2();
    void thread_r_V_26_fu_203_p2();
    void thread_r_V_29_fu_220_p2();
    void thread_r_V_fu_412_p2();
    void thread_rhs_V_14_fu_174_p1();
    void thread_rhs_V_15_fu_188_p1();
    void thread_rhs_V_fu_408_p1();
    void thread_tmp_11_fu_217_p1();
    void thread_tmp_12_fu_230_p3();
    void thread_tmp_19_i1_fu_348_p2();
    void thread_tmp_19_i_fu_284_p2();
    void thread_tmp_20_i1_fu_380_p2();
    void thread_tmp_20_i_fu_316_p2();
    void thread_tmp_fu_196_p1();
    void thread_tmp_i1_12_fu_306_p2();
    void thread_tmp_i1_fu_302_p2();
    void thread_tmp_i2_13_fu_338_p2();
    void thread_tmp_i2_fu_334_p2();
    void thread_tmp_i3_14_fu_370_p2();
    void thread_tmp_i3_fu_366_p2();
    void thread_tmp_i_11_fu_274_p2();
    void thread_tmp_i_fu_270_p2();
    void thread_tmp_s_fu_224_p2();
    void thread_triangle_2d_same_x0_1_fu_495_p3();
    void thread_triangle_2d_same_x1_1_fu_471_p3();
    void thread_triangle_2d_same_x2_1_fu_489_p3();
    void thread_triangle_2d_same_y0_1_fu_483_p3();
    void thread_triangle_2d_same_y1_1_fu_477_p3();
    void thread_triangle_2d_same_y2_1_fu_501_p3();
    void thread_triangle_2d_same_z_V_1_fu_507_p3();
    void thread_triangle_2d_x0_V_tri_fu_246_p3();
    void thread_triangle_2d_x1_V_tri_fu_262_p3();
    void thread_triangle_2d_y0_V_tri_fu_238_p3();
    void thread_triangle_2d_y1_V_tri_fu_254_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
