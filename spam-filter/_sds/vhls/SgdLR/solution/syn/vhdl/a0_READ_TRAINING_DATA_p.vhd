-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_READ_TRAINING_DATA_p is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    data_V_empty_n : IN STD_LOGIC;
    data_V_read : OUT STD_LOGIC;
    training_instance_V_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_0_ce0 : OUT STD_LOGIC;
    training_instance_V_0_we0 : OUT STD_LOGIC;
    training_instance_V_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_1_ce0 : OUT STD_LOGIC;
    training_instance_V_1_we0 : OUT STD_LOGIC;
    training_instance_V_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_10_ce0 : OUT STD_LOGIC;
    training_instance_V_10_we0 : OUT STD_LOGIC;
    training_instance_V_10_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_11_ce0 : OUT STD_LOGIC;
    training_instance_V_11_we0 : OUT STD_LOGIC;
    training_instance_V_11_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_12_ce0 : OUT STD_LOGIC;
    training_instance_V_12_we0 : OUT STD_LOGIC;
    training_instance_V_12_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_13_ce0 : OUT STD_LOGIC;
    training_instance_V_13_we0 : OUT STD_LOGIC;
    training_instance_V_13_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_14_ce0 : OUT STD_LOGIC;
    training_instance_V_14_we0 : OUT STD_LOGIC;
    training_instance_V_14_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_15_ce0 : OUT STD_LOGIC;
    training_instance_V_15_we0 : OUT STD_LOGIC;
    training_instance_V_15_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_16_ce0 : OUT STD_LOGIC;
    training_instance_V_16_we0 : OUT STD_LOGIC;
    training_instance_V_16_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_17_ce0 : OUT STD_LOGIC;
    training_instance_V_17_we0 : OUT STD_LOGIC;
    training_instance_V_17_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_18_ce0 : OUT STD_LOGIC;
    training_instance_V_18_we0 : OUT STD_LOGIC;
    training_instance_V_18_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_19_ce0 : OUT STD_LOGIC;
    training_instance_V_19_we0 : OUT STD_LOGIC;
    training_instance_V_19_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_2_ce0 : OUT STD_LOGIC;
    training_instance_V_2_we0 : OUT STD_LOGIC;
    training_instance_V_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_20_ce0 : OUT STD_LOGIC;
    training_instance_V_20_we0 : OUT STD_LOGIC;
    training_instance_V_20_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_21_ce0 : OUT STD_LOGIC;
    training_instance_V_21_we0 : OUT STD_LOGIC;
    training_instance_V_21_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_22_ce0 : OUT STD_LOGIC;
    training_instance_V_22_we0 : OUT STD_LOGIC;
    training_instance_V_22_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_23_ce0 : OUT STD_LOGIC;
    training_instance_V_23_we0 : OUT STD_LOGIC;
    training_instance_V_23_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_24_ce0 : OUT STD_LOGIC;
    training_instance_V_24_we0 : OUT STD_LOGIC;
    training_instance_V_24_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_25_ce0 : OUT STD_LOGIC;
    training_instance_V_25_we0 : OUT STD_LOGIC;
    training_instance_V_25_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_26_ce0 : OUT STD_LOGIC;
    training_instance_V_26_we0 : OUT STD_LOGIC;
    training_instance_V_26_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_27_ce0 : OUT STD_LOGIC;
    training_instance_V_27_we0 : OUT STD_LOGIC;
    training_instance_V_27_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_28_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_28_ce0 : OUT STD_LOGIC;
    training_instance_V_28_we0 : OUT STD_LOGIC;
    training_instance_V_28_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_29_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_29_ce0 : OUT STD_LOGIC;
    training_instance_V_29_we0 : OUT STD_LOGIC;
    training_instance_V_29_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_3_ce0 : OUT STD_LOGIC;
    training_instance_V_3_we0 : OUT STD_LOGIC;
    training_instance_V_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_30_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_30_ce0 : OUT STD_LOGIC;
    training_instance_V_30_we0 : OUT STD_LOGIC;
    training_instance_V_30_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_31_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_31_ce0 : OUT STD_LOGIC;
    training_instance_V_31_we0 : OUT STD_LOGIC;
    training_instance_V_31_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_4_ce0 : OUT STD_LOGIC;
    training_instance_V_4_we0 : OUT STD_LOGIC;
    training_instance_V_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_5_ce0 : OUT STD_LOGIC;
    training_instance_V_5_we0 : OUT STD_LOGIC;
    training_instance_V_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_6_ce0 : OUT STD_LOGIC;
    training_instance_V_6_we0 : OUT STD_LOGIC;
    training_instance_V_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_7_ce0 : OUT STD_LOGIC;
    training_instance_V_7_we0 : OUT STD_LOGIC;
    training_instance_V_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_8_ce0 : OUT STD_LOGIC;
    training_instance_V_8_we0 : OUT STD_LOGIC;
    training_instance_V_8_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    training_instance_V_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    training_instance_V_9_ce0 : OUT STD_LOGIC;
    training_instance_V_9_we0 : OUT STD_LOGIC;
    training_instance_V_9_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of a0_READ_TRAINING_DATA_p is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_0_i_i_i_i_reg_556 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_i_i_i_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_573_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal newIndex3_i_i_i_reg_703 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_33_fu_589_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_reg_708 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal newIndex3_cast_i_i_i_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_593_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_i_i_i_reg_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_18_i_i_i_fu_567_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_i_i_i_i_reg_556 <= i_fu_573_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_i_i_i_reg_556 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_18_i_i_i_fu_567_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                newIndex3_i_i_i_reg_703 <= i_0_i_i_i_i_reg_556(7 downto 3);
                tmp_33_reg_708 <= tmp_33_fu_589_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, tmp_18_i_i_i_fu_567_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_18_i_i_i_fu_567_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_18_i_i_i_fu_567_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(data_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(data_V_empty_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(data_V_empty_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (data_V_empty_n = ap_const_logic_0);
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_18_i_i_i_fu_567_p2)
    begin
        if ((tmp_18_i_i_i_fu_567_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_V_blk_n_assign_proc : process(data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_blk_n <= data_V_empty_n;
        else 
            data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_V_read <= ap_const_logic_1;
        else 
            data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_573_p2 <= std_logic_vector(unsigned(i_0_i_i_i_i_reg_556) + unsigned(ap_const_lv9_1));
    newIndex3_cast_i_i_i_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex3_i_i_i_reg_703),64));
    tmp_18_i_i_i_fu_567_p2 <= "1" when (i_0_i_i_i_i_reg_556 = ap_const_lv9_100) else "0";
    tmp_33_fu_589_p1 <= i_0_i_i_i_i_reg_556(3 - 1 downto 0);
    tmp_fu_593_p1 <= data_V_dout(16 - 1 downto 0);
    training_instance_V_0_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_0_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_0_d0 <= tmp_fu_593_p1;

    training_instance_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_0_we0 <= ap_const_logic_1;
        else 
            training_instance_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_10_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_10_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_10_d0 <= data_V_dout(47 downto 32);

    training_instance_V_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_10_we0 <= ap_const_logic_1;
        else 
            training_instance_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_11_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_11_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_11_d0 <= data_V_dout(63 downto 48);

    training_instance_V_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_11_we0 <= ap_const_logic_1;
        else 
            training_instance_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_12_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_12_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_12_d0 <= tmp_fu_593_p1;

    training_instance_V_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_12_we0 <= ap_const_logic_1;
        else 
            training_instance_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_13_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_13_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_13_d0 <= data_V_dout(31 downto 16);

    training_instance_V_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_13_we0 <= ap_const_logic_1;
        else 
            training_instance_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_14_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_14_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_14_d0 <= data_V_dout(47 downto 32);

    training_instance_V_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_14_we0 <= ap_const_logic_1;
        else 
            training_instance_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_15_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_15_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_15_d0 <= data_V_dout(63 downto 48);

    training_instance_V_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_15_we0 <= ap_const_logic_1;
        else 
            training_instance_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_16_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_16_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_16_d0 <= tmp_fu_593_p1;

    training_instance_V_16_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_16_we0 <= ap_const_logic_1;
        else 
            training_instance_V_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_17_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_17_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_17_d0 <= data_V_dout(31 downto 16);

    training_instance_V_17_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_17_we0 <= ap_const_logic_1;
        else 
            training_instance_V_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_18_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_18_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_18_d0 <= data_V_dout(47 downto 32);

    training_instance_V_18_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_18_we0 <= ap_const_logic_1;
        else 
            training_instance_V_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_19_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_19_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_19_d0 <= data_V_dout(63 downto 48);

    training_instance_V_19_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_19_we0 <= ap_const_logic_1;
        else 
            training_instance_V_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_1_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_1_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_1_d0 <= data_V_dout(31 downto 16);

    training_instance_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_1_we0 <= ap_const_logic_1;
        else 
            training_instance_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_20_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_20_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_20_d0 <= tmp_fu_593_p1;

    training_instance_V_20_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_20_we0 <= ap_const_logic_1;
        else 
            training_instance_V_20_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_21_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_21_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_21_d0 <= data_V_dout(31 downto 16);

    training_instance_V_21_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_21_we0 <= ap_const_logic_1;
        else 
            training_instance_V_21_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_22_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_22_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_22_d0 <= data_V_dout(47 downto 32);

    training_instance_V_22_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_22_we0 <= ap_const_logic_1;
        else 
            training_instance_V_22_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_23_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_23_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_23_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_23_d0 <= data_V_dout(63 downto 48);

    training_instance_V_23_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_23_we0 <= ap_const_logic_1;
        else 
            training_instance_V_23_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_24_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_24_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_24_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_24_d0 <= tmp_fu_593_p1;

    training_instance_V_24_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_24_we0 <= ap_const_logic_1;
        else 
            training_instance_V_24_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_25_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_25_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_25_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_25_d0 <= data_V_dout(31 downto 16);

    training_instance_V_25_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_25_we0 <= ap_const_logic_1;
        else 
            training_instance_V_25_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_26_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_26_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_26_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_26_d0 <= data_V_dout(47 downto 32);

    training_instance_V_26_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_26_we0 <= ap_const_logic_1;
        else 
            training_instance_V_26_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_27_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_27_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_27_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_27_d0 <= data_V_dout(63 downto 48);

    training_instance_V_27_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_27_we0 <= ap_const_logic_1;
        else 
            training_instance_V_27_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_28_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_28_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_28_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_28_d0 <= tmp_fu_593_p1;

    training_instance_V_28_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_28_we0 <= ap_const_logic_1;
        else 
            training_instance_V_28_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_29_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_29_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_29_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_29_d0 <= data_V_dout(31 downto 16);

    training_instance_V_29_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_29_we0 <= ap_const_logic_1;
        else 
            training_instance_V_29_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_2_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_2_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_2_d0 <= data_V_dout(47 downto 32);

    training_instance_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_2_we0 <= ap_const_logic_1;
        else 
            training_instance_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_30_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_30_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_30_d0 <= data_V_dout(47 downto 32);

    training_instance_V_30_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_30_we0 <= ap_const_logic_1;
        else 
            training_instance_V_30_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_31_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_31_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_31_d0 <= data_V_dout(63 downto 48);

    training_instance_V_31_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_31_we0 <= ap_const_logic_1;
        else 
            training_instance_V_31_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_3_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_3_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_3_d0 <= data_V_dout(63 downto 48);

    training_instance_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_3_we0 <= ap_const_logic_1;
        else 
            training_instance_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_4_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_4_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_4_d0 <= tmp_fu_593_p1;

    training_instance_V_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_4_we0 <= ap_const_logic_1;
        else 
            training_instance_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_5_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_5_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_5_d0 <= data_V_dout(31 downto 16);

    training_instance_V_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_5_we0 <= ap_const_logic_1;
        else 
            training_instance_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_6_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_6_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_6_d0 <= data_V_dout(47 downto 32);

    training_instance_V_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_6_we0 <= ap_const_logic_1;
        else 
            training_instance_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_7_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_7_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_7_d0 <= data_V_dout(63 downto 48);

    training_instance_V_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_7_we0 <= ap_const_logic_1;
        else 
            training_instance_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_8_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_8_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_8_d0 <= tmp_fu_593_p1;

    training_instance_V_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_8_we0 <= ap_const_logic_1;
        else 
            training_instance_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_9_address0 <= newIndex3_cast_i_i_i_fu_605_p1(5 - 1 downto 0);

    training_instance_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_9_ce0 <= ap_const_logic_1;
        else 
            training_instance_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    training_instance_V_9_d0 <= data_V_dout(31 downto 16);

    training_instance_V_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, tmp_33_reg_708)
    begin
        if (((tmp_33_reg_708 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            training_instance_V_9_we0 <= ap_const_logic_1;
        else 
            training_instance_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
