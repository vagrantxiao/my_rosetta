// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_READ_TRAINING_DATA_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V_dout,
        data_V_empty_n,
        data_V_read,
        training_instance_V_0_address0,
        training_instance_V_0_ce0,
        training_instance_V_0_we0,
        training_instance_V_0_d0,
        training_instance_V_1_address0,
        training_instance_V_1_ce0,
        training_instance_V_1_we0,
        training_instance_V_1_d0,
        training_instance_V_10_address0,
        training_instance_V_10_ce0,
        training_instance_V_10_we0,
        training_instance_V_10_d0,
        training_instance_V_11_address0,
        training_instance_V_11_ce0,
        training_instance_V_11_we0,
        training_instance_V_11_d0,
        training_instance_V_12_address0,
        training_instance_V_12_ce0,
        training_instance_V_12_we0,
        training_instance_V_12_d0,
        training_instance_V_13_address0,
        training_instance_V_13_ce0,
        training_instance_V_13_we0,
        training_instance_V_13_d0,
        training_instance_V_14_address0,
        training_instance_V_14_ce0,
        training_instance_V_14_we0,
        training_instance_V_14_d0,
        training_instance_V_15_address0,
        training_instance_V_15_ce0,
        training_instance_V_15_we0,
        training_instance_V_15_d0,
        training_instance_V_16_address0,
        training_instance_V_16_ce0,
        training_instance_V_16_we0,
        training_instance_V_16_d0,
        training_instance_V_17_address0,
        training_instance_V_17_ce0,
        training_instance_V_17_we0,
        training_instance_V_17_d0,
        training_instance_V_18_address0,
        training_instance_V_18_ce0,
        training_instance_V_18_we0,
        training_instance_V_18_d0,
        training_instance_V_19_address0,
        training_instance_V_19_ce0,
        training_instance_V_19_we0,
        training_instance_V_19_d0,
        training_instance_V_2_address0,
        training_instance_V_2_ce0,
        training_instance_V_2_we0,
        training_instance_V_2_d0,
        training_instance_V_20_address0,
        training_instance_V_20_ce0,
        training_instance_V_20_we0,
        training_instance_V_20_d0,
        training_instance_V_21_address0,
        training_instance_V_21_ce0,
        training_instance_V_21_we0,
        training_instance_V_21_d0,
        training_instance_V_22_address0,
        training_instance_V_22_ce0,
        training_instance_V_22_we0,
        training_instance_V_22_d0,
        training_instance_V_23_address0,
        training_instance_V_23_ce0,
        training_instance_V_23_we0,
        training_instance_V_23_d0,
        training_instance_V_24_address0,
        training_instance_V_24_ce0,
        training_instance_V_24_we0,
        training_instance_V_24_d0,
        training_instance_V_25_address0,
        training_instance_V_25_ce0,
        training_instance_V_25_we0,
        training_instance_V_25_d0,
        training_instance_V_26_address0,
        training_instance_V_26_ce0,
        training_instance_V_26_we0,
        training_instance_V_26_d0,
        training_instance_V_27_address0,
        training_instance_V_27_ce0,
        training_instance_V_27_we0,
        training_instance_V_27_d0,
        training_instance_V_28_address0,
        training_instance_V_28_ce0,
        training_instance_V_28_we0,
        training_instance_V_28_d0,
        training_instance_V_29_address0,
        training_instance_V_29_ce0,
        training_instance_V_29_we0,
        training_instance_V_29_d0,
        training_instance_V_3_address0,
        training_instance_V_3_ce0,
        training_instance_V_3_we0,
        training_instance_V_3_d0,
        training_instance_V_30_address0,
        training_instance_V_30_ce0,
        training_instance_V_30_we0,
        training_instance_V_30_d0,
        training_instance_V_31_address0,
        training_instance_V_31_ce0,
        training_instance_V_31_we0,
        training_instance_V_31_d0,
        training_instance_V_4_address0,
        training_instance_V_4_ce0,
        training_instance_V_4_we0,
        training_instance_V_4_d0,
        training_instance_V_5_address0,
        training_instance_V_5_ce0,
        training_instance_V_5_we0,
        training_instance_V_5_d0,
        training_instance_V_6_address0,
        training_instance_V_6_ce0,
        training_instance_V_6_we0,
        training_instance_V_6_d0,
        training_instance_V_7_address0,
        training_instance_V_7_ce0,
        training_instance_V_7_we0,
        training_instance_V_7_d0,
        training_instance_V_8_address0,
        training_instance_V_8_ce0,
        training_instance_V_8_we0,
        training_instance_V_8_d0,
        training_instance_V_9_address0,
        training_instance_V_9_ce0,
        training_instance_V_9_we0,
        training_instance_V_9_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] data_V_dout;
input   data_V_empty_n;
output   data_V_read;
output  [4:0] training_instance_V_0_address0;
output   training_instance_V_0_ce0;
output   training_instance_V_0_we0;
output  [15:0] training_instance_V_0_d0;
output  [4:0] training_instance_V_1_address0;
output   training_instance_V_1_ce0;
output   training_instance_V_1_we0;
output  [15:0] training_instance_V_1_d0;
output  [4:0] training_instance_V_10_address0;
output   training_instance_V_10_ce0;
output   training_instance_V_10_we0;
output  [15:0] training_instance_V_10_d0;
output  [4:0] training_instance_V_11_address0;
output   training_instance_V_11_ce0;
output   training_instance_V_11_we0;
output  [15:0] training_instance_V_11_d0;
output  [4:0] training_instance_V_12_address0;
output   training_instance_V_12_ce0;
output   training_instance_V_12_we0;
output  [15:0] training_instance_V_12_d0;
output  [4:0] training_instance_V_13_address0;
output   training_instance_V_13_ce0;
output   training_instance_V_13_we0;
output  [15:0] training_instance_V_13_d0;
output  [4:0] training_instance_V_14_address0;
output   training_instance_V_14_ce0;
output   training_instance_V_14_we0;
output  [15:0] training_instance_V_14_d0;
output  [4:0] training_instance_V_15_address0;
output   training_instance_V_15_ce0;
output   training_instance_V_15_we0;
output  [15:0] training_instance_V_15_d0;
output  [4:0] training_instance_V_16_address0;
output   training_instance_V_16_ce0;
output   training_instance_V_16_we0;
output  [15:0] training_instance_V_16_d0;
output  [4:0] training_instance_V_17_address0;
output   training_instance_V_17_ce0;
output   training_instance_V_17_we0;
output  [15:0] training_instance_V_17_d0;
output  [4:0] training_instance_V_18_address0;
output   training_instance_V_18_ce0;
output   training_instance_V_18_we0;
output  [15:0] training_instance_V_18_d0;
output  [4:0] training_instance_V_19_address0;
output   training_instance_V_19_ce0;
output   training_instance_V_19_we0;
output  [15:0] training_instance_V_19_d0;
output  [4:0] training_instance_V_2_address0;
output   training_instance_V_2_ce0;
output   training_instance_V_2_we0;
output  [15:0] training_instance_V_2_d0;
output  [4:0] training_instance_V_20_address0;
output   training_instance_V_20_ce0;
output   training_instance_V_20_we0;
output  [15:0] training_instance_V_20_d0;
output  [4:0] training_instance_V_21_address0;
output   training_instance_V_21_ce0;
output   training_instance_V_21_we0;
output  [15:0] training_instance_V_21_d0;
output  [4:0] training_instance_V_22_address0;
output   training_instance_V_22_ce0;
output   training_instance_V_22_we0;
output  [15:0] training_instance_V_22_d0;
output  [4:0] training_instance_V_23_address0;
output   training_instance_V_23_ce0;
output   training_instance_V_23_we0;
output  [15:0] training_instance_V_23_d0;
output  [4:0] training_instance_V_24_address0;
output   training_instance_V_24_ce0;
output   training_instance_V_24_we0;
output  [15:0] training_instance_V_24_d0;
output  [4:0] training_instance_V_25_address0;
output   training_instance_V_25_ce0;
output   training_instance_V_25_we0;
output  [15:0] training_instance_V_25_d0;
output  [4:0] training_instance_V_26_address0;
output   training_instance_V_26_ce0;
output   training_instance_V_26_we0;
output  [15:0] training_instance_V_26_d0;
output  [4:0] training_instance_V_27_address0;
output   training_instance_V_27_ce0;
output   training_instance_V_27_we0;
output  [15:0] training_instance_V_27_d0;
output  [4:0] training_instance_V_28_address0;
output   training_instance_V_28_ce0;
output   training_instance_V_28_we0;
output  [15:0] training_instance_V_28_d0;
output  [4:0] training_instance_V_29_address0;
output   training_instance_V_29_ce0;
output   training_instance_V_29_we0;
output  [15:0] training_instance_V_29_d0;
output  [4:0] training_instance_V_3_address0;
output   training_instance_V_3_ce0;
output   training_instance_V_3_we0;
output  [15:0] training_instance_V_3_d0;
output  [4:0] training_instance_V_30_address0;
output   training_instance_V_30_ce0;
output   training_instance_V_30_we0;
output  [15:0] training_instance_V_30_d0;
output  [4:0] training_instance_V_31_address0;
output   training_instance_V_31_ce0;
output   training_instance_V_31_we0;
output  [15:0] training_instance_V_31_d0;
output  [4:0] training_instance_V_4_address0;
output   training_instance_V_4_ce0;
output   training_instance_V_4_we0;
output  [15:0] training_instance_V_4_d0;
output  [4:0] training_instance_V_5_address0;
output   training_instance_V_5_ce0;
output   training_instance_V_5_we0;
output  [15:0] training_instance_V_5_d0;
output  [4:0] training_instance_V_6_address0;
output   training_instance_V_6_ce0;
output   training_instance_V_6_we0;
output  [15:0] training_instance_V_6_d0;
output  [4:0] training_instance_V_7_address0;
output   training_instance_V_7_ce0;
output   training_instance_V_7_we0;
output  [15:0] training_instance_V_7_d0;
output  [4:0] training_instance_V_8_address0;
output   training_instance_V_8_ce0;
output   training_instance_V_8_we0;
output  [15:0] training_instance_V_8_d0;
output  [4:0] training_instance_V_9_address0;
output   training_instance_V_9_ce0;
output   training_instance_V_9_we0;
output  [15:0] training_instance_V_9_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_read;
reg training_instance_V_0_ce0;
reg training_instance_V_0_we0;
reg training_instance_V_1_ce0;
reg training_instance_V_1_we0;
reg training_instance_V_10_ce0;
reg training_instance_V_10_we0;
reg training_instance_V_11_ce0;
reg training_instance_V_11_we0;
reg training_instance_V_12_ce0;
reg training_instance_V_12_we0;
reg training_instance_V_13_ce0;
reg training_instance_V_13_we0;
reg training_instance_V_14_ce0;
reg training_instance_V_14_we0;
reg training_instance_V_15_ce0;
reg training_instance_V_15_we0;
reg training_instance_V_16_ce0;
reg training_instance_V_16_we0;
reg training_instance_V_17_ce0;
reg training_instance_V_17_we0;
reg training_instance_V_18_ce0;
reg training_instance_V_18_we0;
reg training_instance_V_19_ce0;
reg training_instance_V_19_we0;
reg training_instance_V_2_ce0;
reg training_instance_V_2_we0;
reg training_instance_V_20_ce0;
reg training_instance_V_20_we0;
reg training_instance_V_21_ce0;
reg training_instance_V_21_we0;
reg training_instance_V_22_ce0;
reg training_instance_V_22_we0;
reg training_instance_V_23_ce0;
reg training_instance_V_23_we0;
reg training_instance_V_24_ce0;
reg training_instance_V_24_we0;
reg training_instance_V_25_ce0;
reg training_instance_V_25_we0;
reg training_instance_V_26_ce0;
reg training_instance_V_26_we0;
reg training_instance_V_27_ce0;
reg training_instance_V_27_we0;
reg training_instance_V_28_ce0;
reg training_instance_V_28_we0;
reg training_instance_V_29_ce0;
reg training_instance_V_29_we0;
reg training_instance_V_3_ce0;
reg training_instance_V_3_we0;
reg training_instance_V_30_ce0;
reg training_instance_V_30_we0;
reg training_instance_V_31_ce0;
reg training_instance_V_31_we0;
reg training_instance_V_4_ce0;
reg training_instance_V_4_we0;
reg training_instance_V_5_ce0;
reg training_instance_V_5_we0;
reg training_instance_V_6_ce0;
reg training_instance_V_6_we0;
reg training_instance_V_7_ce0;
reg training_instance_V_7_we0;
reg training_instance_V_8_ce0;
reg training_instance_V_8_we0;
reg training_instance_V_9_ce0;
reg training_instance_V_9_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [8:0] i_0_i_i_i_i_reg_556;
wire   [0:0] tmp_18_i_i_i_fu_567_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] i_fu_573_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [4:0] newIndex3_i_i_i_reg_703;
wire   [2:0] tmp_33_fu_589_p1;
reg   [2:0] tmp_33_reg_708;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire   [63:0] newIndex3_cast_i_i_i_fu_605_p1;
wire   [15:0] tmp_fu_593_p1;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_18_i_i_i_fu_567_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_i_i_i_reg_556 <= i_fu_573_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_i_i_reg_556 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_18_i_i_i_fu_567_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        newIndex3_i_i_i_reg_703 <= {{i_0_i_i_i_i_reg_556[7:3]}};
        tmp_33_reg_708 <= tmp_33_fu_589_p1;
    end
end

always @ (*) begin
    if ((tmp_18_i_i_i_fu_567_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_blk_n = data_V_empty_n;
    end else begin
        data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_read = 1'b1;
    end else begin
        data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_0_ce0 = 1'b1;
    end else begin
        training_instance_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_0_we0 = 1'b1;
    end else begin
        training_instance_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_10_ce0 = 1'b1;
    end else begin
        training_instance_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_10_we0 = 1'b1;
    end else begin
        training_instance_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_11_ce0 = 1'b1;
    end else begin
        training_instance_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_11_we0 = 1'b1;
    end else begin
        training_instance_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_12_ce0 = 1'b1;
    end else begin
        training_instance_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_12_we0 = 1'b1;
    end else begin
        training_instance_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_13_ce0 = 1'b1;
    end else begin
        training_instance_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_13_we0 = 1'b1;
    end else begin
        training_instance_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_14_ce0 = 1'b1;
    end else begin
        training_instance_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_14_we0 = 1'b1;
    end else begin
        training_instance_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_15_ce0 = 1'b1;
    end else begin
        training_instance_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_15_we0 = 1'b1;
    end else begin
        training_instance_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_16_ce0 = 1'b1;
    end else begin
        training_instance_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_16_we0 = 1'b1;
    end else begin
        training_instance_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_17_ce0 = 1'b1;
    end else begin
        training_instance_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_17_we0 = 1'b1;
    end else begin
        training_instance_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_18_ce0 = 1'b1;
    end else begin
        training_instance_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_18_we0 = 1'b1;
    end else begin
        training_instance_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_19_ce0 = 1'b1;
    end else begin
        training_instance_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_19_we0 = 1'b1;
    end else begin
        training_instance_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_1_ce0 = 1'b1;
    end else begin
        training_instance_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_1_we0 = 1'b1;
    end else begin
        training_instance_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_20_ce0 = 1'b1;
    end else begin
        training_instance_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_20_we0 = 1'b1;
    end else begin
        training_instance_V_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_21_ce0 = 1'b1;
    end else begin
        training_instance_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_21_we0 = 1'b1;
    end else begin
        training_instance_V_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_22_ce0 = 1'b1;
    end else begin
        training_instance_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_22_we0 = 1'b1;
    end else begin
        training_instance_V_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_23_ce0 = 1'b1;
    end else begin
        training_instance_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_23_we0 = 1'b1;
    end else begin
        training_instance_V_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_24_ce0 = 1'b1;
    end else begin
        training_instance_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_24_we0 = 1'b1;
    end else begin
        training_instance_V_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_25_ce0 = 1'b1;
    end else begin
        training_instance_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_25_we0 = 1'b1;
    end else begin
        training_instance_V_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_26_ce0 = 1'b1;
    end else begin
        training_instance_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_26_we0 = 1'b1;
    end else begin
        training_instance_V_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_27_ce0 = 1'b1;
    end else begin
        training_instance_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_27_we0 = 1'b1;
    end else begin
        training_instance_V_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_28_ce0 = 1'b1;
    end else begin
        training_instance_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_28_we0 = 1'b1;
    end else begin
        training_instance_V_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_29_ce0 = 1'b1;
    end else begin
        training_instance_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_29_we0 = 1'b1;
    end else begin
        training_instance_V_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_2_ce0 = 1'b1;
    end else begin
        training_instance_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_2_we0 = 1'b1;
    end else begin
        training_instance_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_30_ce0 = 1'b1;
    end else begin
        training_instance_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_30_we0 = 1'b1;
    end else begin
        training_instance_V_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_31_ce0 = 1'b1;
    end else begin
        training_instance_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_31_we0 = 1'b1;
    end else begin
        training_instance_V_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_3_ce0 = 1'b1;
    end else begin
        training_instance_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_3_we0 = 1'b1;
    end else begin
        training_instance_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_4_ce0 = 1'b1;
    end else begin
        training_instance_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_4_we0 = 1'b1;
    end else begin
        training_instance_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_5_ce0 = 1'b1;
    end else begin
        training_instance_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_5_we0 = 1'b1;
    end else begin
        training_instance_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_6_ce0 = 1'b1;
    end else begin
        training_instance_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_6_we0 = 1'b1;
    end else begin
        training_instance_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_7_ce0 = 1'b1;
    end else begin
        training_instance_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_7_we0 = 1'b1;
    end else begin
        training_instance_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_8_ce0 = 1'b1;
    end else begin
        training_instance_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_8_we0 = 1'b1;
    end else begin
        training_instance_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_9_ce0 = 1'b1;
    end else begin
        training_instance_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_33_reg_708 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        training_instance_V_9_we0 = 1'b1;
    end else begin
        training_instance_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_18_i_i_i_fu_567_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_18_i_i_i_fu_567_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (data_V_empty_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_fu_573_p2 = (i_0_i_i_i_i_reg_556 + 9'd1);

assign newIndex3_cast_i_i_i_fu_605_p1 = newIndex3_i_i_i_reg_703;

assign tmp_18_i_i_i_fu_567_p2 = ((i_0_i_i_i_i_reg_556 == 9'd256) ? 1'b1 : 1'b0);

assign tmp_33_fu_589_p1 = i_0_i_i_i_i_reg_556[2:0];

assign tmp_fu_593_p1 = data_V_dout[15:0];

assign training_instance_V_0_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_0_d0 = tmp_fu_593_p1;

assign training_instance_V_10_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_10_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_11_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_11_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_12_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_12_d0 = tmp_fu_593_p1;

assign training_instance_V_13_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_13_d0 = {{data_V_dout[31:16]}};

assign training_instance_V_14_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_14_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_15_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_15_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_16_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_16_d0 = tmp_fu_593_p1;

assign training_instance_V_17_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_17_d0 = {{data_V_dout[31:16]}};

assign training_instance_V_18_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_18_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_19_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_19_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_1_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_1_d0 = {{data_V_dout[31:16]}};

assign training_instance_V_20_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_20_d0 = tmp_fu_593_p1;

assign training_instance_V_21_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_21_d0 = {{data_V_dout[31:16]}};

assign training_instance_V_22_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_22_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_23_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_23_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_24_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_24_d0 = tmp_fu_593_p1;

assign training_instance_V_25_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_25_d0 = {{data_V_dout[31:16]}};

assign training_instance_V_26_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_26_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_27_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_27_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_28_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_28_d0 = tmp_fu_593_p1;

assign training_instance_V_29_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_29_d0 = {{data_V_dout[31:16]}};

assign training_instance_V_2_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_2_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_30_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_30_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_31_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_31_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_3_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_3_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_4_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_4_d0 = tmp_fu_593_p1;

assign training_instance_V_5_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_5_d0 = {{data_V_dout[31:16]}};

assign training_instance_V_6_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_6_d0 = {{data_V_dout[47:32]}};

assign training_instance_V_7_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_7_d0 = {{data_V_dout[63:48]}};

assign training_instance_V_8_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_8_d0 = tmp_fu_593_p1;

assign training_instance_V_9_address0 = newIndex3_cast_i_i_i_fu_605_p1;

assign training_instance_V_9_d0 = {{data_V_dout[31:16]}};

endmodule //a0_READ_TRAINING_DATA_p
