// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_gradient_z_calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        frame1_a_dout,
        frame1_a_empty_n,
        frame1_a_read,
        frame2_a_dout,
        frame2_a_empty_n,
        frame2_a_read,
        frame3_b_dout,
        frame3_b_empty_n,
        frame3_b_read,
        frame4_a_dout,
        frame4_a_empty_n,
        frame4_a_read,
        frame5_a_dout,
        frame5_a_empty_n,
        frame5_a_read,
        gradient_z_din,
        gradient_z_full_n,
        gradient_z_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state33 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] frame1_a_dout;
input   frame1_a_empty_n;
output   frame1_a_read;
input  [31:0] frame2_a_dout;
input   frame2_a_empty_n;
output   frame2_a_read;
input  [31:0] frame3_b_dout;
input   frame3_b_empty_n;
output   frame3_b_read;
input  [31:0] frame4_a_dout;
input   frame4_a_empty_n;
output   frame4_a_read;
input  [31:0] frame5_a_dout;
input   frame5_a_empty_n;
output   frame5_a_read;
output  [31:0] gradient_z_din;
input   gradient_z_full_n;
output   gradient_z_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg frame1_a_read;
reg frame2_a_read;
reg frame3_b_read;
reg frame4_a_read;
reg frame5_a_read;
reg gradient_z_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    frame1_a_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_164;
reg    frame2_a_blk_n;
reg    frame3_b_blk_n;
reg    frame4_a_blk_n;
reg    frame5_a_blk_n;
reg    gradient_z_blk_n;
reg    ap_enable_reg_pp0_iter30;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter29_reg;
reg   [18:0] indvar_flatten_reg_91;
wire   [0:0] exitcond_flatten_fu_138_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
reg    ap_block_state32_pp0_stage0_iter30;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter5_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter6_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter7_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter8_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter9_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter10_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter11_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter12_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter13_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter14_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter15_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter16_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter17_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter18_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter19_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter20_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter21_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter22_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter23_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter24_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter25_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter26_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter27_reg;
reg   [0:0] exitcond_flatten_reg_164_pp0_iter28_reg;
wire   [18:0] indvar_flatten_next_fu_144_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] frame1_a_read_reg_173;
reg   [31:0] frame1_a_read_reg_173_pp0_iter2_reg;
reg   [31:0] frame1_a_read_reg_173_pp0_iter3_reg;
reg   [31:0] frame1_a_read_reg_173_pp0_iter4_reg;
reg   [31:0] frame2_a_read_reg_178;
reg   [31:0] frame3_b_read_reg_183;
reg   [31:0] frame3_b_read_reg_183_pp0_iter2_reg;
reg   [31:0] frame3_b_read_reg_183_pp0_iter3_reg;
reg   [31:0] frame3_b_read_reg_183_pp0_iter4_reg;
reg   [31:0] frame3_b_read_reg_183_pp0_iter5_reg;
reg   [31:0] frame4_a_read_reg_188;
reg   [31:0] frame4_a_read_reg_188_pp0_iter2_reg;
reg   [31:0] frame4_a_read_reg_188_pp0_iter3_reg;
reg   [31:0] frame4_a_read_reg_188_pp0_iter4_reg;
reg   [31:0] frame4_a_read_reg_188_pp0_iter5_reg;
reg   [31:0] frame4_a_read_reg_188_pp0_iter6_reg;
reg   [31:0] frame4_a_read_reg_188_pp0_iter7_reg;
reg   [31:0] frame4_a_read_reg_188_pp0_iter8_reg;
reg   [31:0] frame4_a_read_reg_188_pp0_iter9_reg;
reg   [31:0] frame5_a_read_reg_193;
reg   [31:0] frame5_a_read_reg_193_pp0_iter2_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter3_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter4_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter5_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter6_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter7_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter8_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter9_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter10_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter11_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter12_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter13_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter14_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter15_reg;
reg   [31:0] frame5_a_read_reg_193_pp0_iter16_reg;
wire   [31:0] grp_fu_118_p2;
reg   [31:0] tmp_13_reg_198;
wire   [31:0] grp_fu_102_p2;
reg   [31:0] tmp_14_reg_203;
wire   [31:0] grp_fu_123_p2;
reg   [31:0] tmp_15_reg_208;
wire   [31:0] grp_fu_106_p2;
reg   [31:0] tmp_16_reg_213;
wire   [31:0] grp_fu_128_p2;
reg   [31:0] tmp_17_reg_218;
wire   [31:0] grp_fu_110_p2;
reg   [31:0] tmp_18_reg_223;
wire   [31:0] grp_fu_114_p2;
reg   [31:0] tmp_20_reg_233;
wire   [31:0] grp_fu_133_p2;
reg   [31:0] tmp_21_reg_238;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_114_p1;
wire   [31:0] tmp_62_to_int_fu_150_p1;
wire   [31:0] tmp_62_neg_fu_153_p2;
reg    grp_fu_102_ce;
reg    grp_fu_106_ce;
reg    grp_fu_110_ce;
reg    grp_fu_114_ce;
reg    grp_fu_118_ce;
reg    grp_fu_123_ce;
reg    grp_fu_128_ce;
reg    grp_fu_133_ce;
wire    ap_CS_fsm_state33;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
end

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(frame1_a_read_reg_173_pp0_iter4_reg),
    .din1(tmp_13_reg_198),
    .ce(grp_fu_102_ce),
    .dout(grp_fu_102_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_14_reg_203),
    .din1(tmp_15_reg_208),
    .ce(grp_fu_106_ce),
    .dout(grp_fu_106_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_16_reg_213),
    .din1(tmp_17_reg_218),
    .ce(grp_fu_110_ce),
    .dout(grp_fu_110_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_18_reg_223),
    .din1(grp_fu_114_p1),
    .ce(grp_fu_114_ce),
    .dout(grp_fu_114_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(frame2_a_read_reg_178),
    .din1(32'd3238002688),
    .ce(grp_fu_118_ce),
    .dout(grp_fu_118_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(frame3_b_read_reg_183_pp0_iter5_reg),
    .din1(32'd0),
    .ce(grp_fu_123_ce),
    .dout(grp_fu_123_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(frame4_a_read_reg_188_pp0_iter9_reg),
    .din1(32'd1090519040),
    .ce(grp_fu_128_ce),
    .dout(grp_fu_128_p2)
);

a0_optical_flow_fdivbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fdivbkb_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_20_reg_233),
    .din1(32'd1094713344),
    .ce(grp_fu_133_ce),
    .dout(grp_fu_133_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state33)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter30 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_91 <= indvar_flatten_next_fu_144_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_91 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_164 <= exitcond_flatten_fu_138_p2;
        exitcond_flatten_reg_164_pp0_iter1_reg <= exitcond_flatten_reg_164;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_164_pp0_iter10_reg <= exitcond_flatten_reg_164_pp0_iter9_reg;
        exitcond_flatten_reg_164_pp0_iter11_reg <= exitcond_flatten_reg_164_pp0_iter10_reg;
        exitcond_flatten_reg_164_pp0_iter12_reg <= exitcond_flatten_reg_164_pp0_iter11_reg;
        exitcond_flatten_reg_164_pp0_iter13_reg <= exitcond_flatten_reg_164_pp0_iter12_reg;
        exitcond_flatten_reg_164_pp0_iter14_reg <= exitcond_flatten_reg_164_pp0_iter13_reg;
        exitcond_flatten_reg_164_pp0_iter15_reg <= exitcond_flatten_reg_164_pp0_iter14_reg;
        exitcond_flatten_reg_164_pp0_iter16_reg <= exitcond_flatten_reg_164_pp0_iter15_reg;
        exitcond_flatten_reg_164_pp0_iter17_reg <= exitcond_flatten_reg_164_pp0_iter16_reg;
        exitcond_flatten_reg_164_pp0_iter18_reg <= exitcond_flatten_reg_164_pp0_iter17_reg;
        exitcond_flatten_reg_164_pp0_iter19_reg <= exitcond_flatten_reg_164_pp0_iter18_reg;
        exitcond_flatten_reg_164_pp0_iter20_reg <= exitcond_flatten_reg_164_pp0_iter19_reg;
        exitcond_flatten_reg_164_pp0_iter21_reg <= exitcond_flatten_reg_164_pp0_iter20_reg;
        exitcond_flatten_reg_164_pp0_iter22_reg <= exitcond_flatten_reg_164_pp0_iter21_reg;
        exitcond_flatten_reg_164_pp0_iter23_reg <= exitcond_flatten_reg_164_pp0_iter22_reg;
        exitcond_flatten_reg_164_pp0_iter24_reg <= exitcond_flatten_reg_164_pp0_iter23_reg;
        exitcond_flatten_reg_164_pp0_iter25_reg <= exitcond_flatten_reg_164_pp0_iter24_reg;
        exitcond_flatten_reg_164_pp0_iter26_reg <= exitcond_flatten_reg_164_pp0_iter25_reg;
        exitcond_flatten_reg_164_pp0_iter27_reg <= exitcond_flatten_reg_164_pp0_iter26_reg;
        exitcond_flatten_reg_164_pp0_iter28_reg <= exitcond_flatten_reg_164_pp0_iter27_reg;
        exitcond_flatten_reg_164_pp0_iter29_reg <= exitcond_flatten_reg_164_pp0_iter28_reg;
        exitcond_flatten_reg_164_pp0_iter2_reg <= exitcond_flatten_reg_164_pp0_iter1_reg;
        exitcond_flatten_reg_164_pp0_iter3_reg <= exitcond_flatten_reg_164_pp0_iter2_reg;
        exitcond_flatten_reg_164_pp0_iter4_reg <= exitcond_flatten_reg_164_pp0_iter3_reg;
        exitcond_flatten_reg_164_pp0_iter5_reg <= exitcond_flatten_reg_164_pp0_iter4_reg;
        exitcond_flatten_reg_164_pp0_iter6_reg <= exitcond_flatten_reg_164_pp0_iter5_reg;
        exitcond_flatten_reg_164_pp0_iter7_reg <= exitcond_flatten_reg_164_pp0_iter6_reg;
        exitcond_flatten_reg_164_pp0_iter8_reg <= exitcond_flatten_reg_164_pp0_iter7_reg;
        exitcond_flatten_reg_164_pp0_iter9_reg <= exitcond_flatten_reg_164_pp0_iter8_reg;
        frame1_a_read_reg_173_pp0_iter2_reg <= frame1_a_read_reg_173;
        frame1_a_read_reg_173_pp0_iter3_reg <= frame1_a_read_reg_173_pp0_iter2_reg;
        frame1_a_read_reg_173_pp0_iter4_reg <= frame1_a_read_reg_173_pp0_iter3_reg;
        frame3_b_read_reg_183_pp0_iter2_reg <= frame3_b_read_reg_183;
        frame3_b_read_reg_183_pp0_iter3_reg <= frame3_b_read_reg_183_pp0_iter2_reg;
        frame3_b_read_reg_183_pp0_iter4_reg <= frame3_b_read_reg_183_pp0_iter3_reg;
        frame3_b_read_reg_183_pp0_iter5_reg <= frame3_b_read_reg_183_pp0_iter4_reg;
        frame4_a_read_reg_188_pp0_iter2_reg <= frame4_a_read_reg_188;
        frame4_a_read_reg_188_pp0_iter3_reg <= frame4_a_read_reg_188_pp0_iter2_reg;
        frame4_a_read_reg_188_pp0_iter4_reg <= frame4_a_read_reg_188_pp0_iter3_reg;
        frame4_a_read_reg_188_pp0_iter5_reg <= frame4_a_read_reg_188_pp0_iter4_reg;
        frame4_a_read_reg_188_pp0_iter6_reg <= frame4_a_read_reg_188_pp0_iter5_reg;
        frame4_a_read_reg_188_pp0_iter7_reg <= frame4_a_read_reg_188_pp0_iter6_reg;
        frame4_a_read_reg_188_pp0_iter8_reg <= frame4_a_read_reg_188_pp0_iter7_reg;
        frame4_a_read_reg_188_pp0_iter9_reg <= frame4_a_read_reg_188_pp0_iter8_reg;
        frame5_a_read_reg_193_pp0_iter10_reg <= frame5_a_read_reg_193_pp0_iter9_reg;
        frame5_a_read_reg_193_pp0_iter11_reg <= frame5_a_read_reg_193_pp0_iter10_reg;
        frame5_a_read_reg_193_pp0_iter12_reg <= frame5_a_read_reg_193_pp0_iter11_reg;
        frame5_a_read_reg_193_pp0_iter13_reg <= frame5_a_read_reg_193_pp0_iter12_reg;
        frame5_a_read_reg_193_pp0_iter14_reg <= frame5_a_read_reg_193_pp0_iter13_reg;
        frame5_a_read_reg_193_pp0_iter15_reg <= frame5_a_read_reg_193_pp0_iter14_reg;
        frame5_a_read_reg_193_pp0_iter16_reg <= frame5_a_read_reg_193_pp0_iter15_reg;
        frame5_a_read_reg_193_pp0_iter2_reg <= frame5_a_read_reg_193;
        frame5_a_read_reg_193_pp0_iter3_reg <= frame5_a_read_reg_193_pp0_iter2_reg;
        frame5_a_read_reg_193_pp0_iter4_reg <= frame5_a_read_reg_193_pp0_iter3_reg;
        frame5_a_read_reg_193_pp0_iter5_reg <= frame5_a_read_reg_193_pp0_iter4_reg;
        frame5_a_read_reg_193_pp0_iter6_reg <= frame5_a_read_reg_193_pp0_iter5_reg;
        frame5_a_read_reg_193_pp0_iter7_reg <= frame5_a_read_reg_193_pp0_iter6_reg;
        frame5_a_read_reg_193_pp0_iter8_reg <= frame5_a_read_reg_193_pp0_iter7_reg;
        frame5_a_read_reg_193_pp0_iter9_reg <= frame5_a_read_reg_193_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        frame1_a_read_reg_173 <= frame1_a_dout;
        frame2_a_read_reg_178 <= frame2_a_dout;
        frame3_b_read_reg_183 <= frame3_b_dout;
        frame4_a_read_reg_188 <= frame4_a_dout;
        frame5_a_read_reg_193 <= frame5_a_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_164_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_13_reg_198 <= grp_fu_118_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_164_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_14_reg_203 <= grp_fu_102_p2;
        tmp_15_reg_208 <= grp_fu_123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_164_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_16_reg_213 <= grp_fu_106_p2;
        tmp_17_reg_218 <= grp_fu_128_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_164_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_18_reg_223 <= grp_fu_110_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_164_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_20_reg_233 <= grp_fu_114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_164_pp0_iter28_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_21_reg_238 <= grp_fu_133_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_138_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        frame1_a_blk_n = frame1_a_empty_n;
    end else begin
        frame1_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        frame1_a_read = 1'b1;
    end else begin
        frame1_a_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        frame2_a_blk_n = frame2_a_empty_n;
    end else begin
        frame2_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        frame2_a_read = 1'b1;
    end else begin
        frame2_a_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        frame3_b_blk_n = frame3_b_empty_n;
    end else begin
        frame3_b_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        frame3_b_read = 1'b1;
    end else begin
        frame3_b_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        frame4_a_blk_n = frame4_a_empty_n;
    end else begin
        frame4_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        frame4_a_read = 1'b1;
    end else begin
        frame4_a_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        frame5_a_blk_n = frame5_a_empty_n;
    end else begin
        frame5_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        frame5_a_read = 1'b1;
    end else begin
        frame5_a_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        gradient_z_blk_n = gradient_z_full_n;
    end else begin
        gradient_z_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_164_pp0_iter29_reg == 1'd0) & (ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gradient_z_write = 1'b1;
    end else begin
        gradient_z_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_102_ce = 1'b1;
    end else begin
        grp_fu_102_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_106_ce = 1'b1;
    end else begin
        grp_fu_106_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_110_ce = 1'b1;
    end else begin
        grp_fu_110_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_114_ce = 1'b1;
    end else begin
        grp_fu_114_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_118_ce = 1'b1;
    end else begin
        grp_fu_118_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_123_ce = 1'b1;
    end else begin
        grp_fu_123_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_128_ce = 1'b1;
    end else begin
        grp_fu_128_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_133_ce = 1'b1;
    end else begin
        grp_fu_133_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_138_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter29 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter30 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter29 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((exitcond_flatten_fu_138_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((exitcond_flatten_reg_164_pp0_iter29_reg == 1'd0) & (gradient_z_full_n == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_flatten_reg_164 == 1'd0) & (frame5_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame4_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame3_b_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame2_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame1_a_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((exitcond_flatten_reg_164_pp0_iter29_reg == 1'd0) & (gradient_z_full_n == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_flatten_reg_164 == 1'd0) & (frame5_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame4_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame3_b_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame2_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame1_a_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((exitcond_flatten_reg_164_pp0_iter29_reg == 1'd0) & (gradient_z_full_n == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_flatten_reg_164 == 1'd0) & (frame5_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame4_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame3_b_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame2_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame1_a_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter30 = ((exitcond_flatten_reg_164_pp0_iter29_reg == 1'd0) & (gradient_z_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((exitcond_flatten_reg_164 == 1'd0) & (frame5_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame4_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame3_b_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame2_a_empty_n == 1'b0)) | ((exitcond_flatten_reg_164 == 1'd0) & (frame1_a_empty_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_flatten_fu_138_p2 = ((indvar_flatten_reg_91 == 19'd446464) ? 1'b1 : 1'b0);

assign gradient_z_din = tmp_21_reg_238;

assign grp_fu_114_p1 = tmp_62_neg_fu_153_p2;

assign indvar_flatten_next_fu_144_p2 = (indvar_flatten_reg_91 + 19'd1);

assign tmp_62_neg_fu_153_p2 = (tmp_62_to_int_fu_150_p1 ^ 32'd2147483648);

assign tmp_62_to_int_fu_150_p1 = frame5_a_read_reg_193_pp0_iter16_reg;

endmodule //a0_gradient_z_calc
