-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_gradient_weight_x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    y_filtered_x_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_x_empty_n : IN STD_LOGIC;
    y_filtered_x_read : OUT STD_LOGIC;
    y_filtered_y_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_y_empty_n : IN STD_LOGIC;
    y_filtered_y_read : OUT STD_LOGIC;
    y_filtered_z_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_z_empty_n : IN STD_LOGIC;
    y_filtered_z_read : OUT STD_LOGIC;
    filtered_gradient_x_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_x_full_n : IN STD_LOGIC;
    filtered_gradient_x_write : OUT STD_LOGIC;
    filtered_gradient_y_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_y_full_n : IN STD_LOGIC;
    filtered_gradient_y_write : OUT STD_LOGIC;
    filtered_gradient_z_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_z_full_n : IN STD_LOGIC;
    filtered_gradient_z_write : OUT STD_LOGIC );
end;


architecture behav of a0_gradient_weight_x is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3D9A9FBE : STD_LOGIC_VECTOR (31 downto 0) := "00111101100110101001111110111110";
    constant ap_const_lv32_3E083127 : STD_LOGIC_VECTOR (31 downto 0) := "00111110000010000011000100100111";
    constant ap_const_lv32_3E3F62B7 : STD_LOGIC_VECTOR (31 downto 0) := "00111110001111110110001010110111";
    constant ap_const_lv32_3E94A234 : STD_LOGIC_VECTOR (31 downto 0) := "00111110100101001010001000110100";
    constant ap_const_lv19_6D51C : STD_LOGIC_VECTOR (18 downto 0) := "1101101010100011100";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv11_403 : STD_LOGIC_VECTOR (10 downto 0) := "10000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal y_filtered_x_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_771 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_780 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_filtered_y_blk_n : STD_LOGIC;
    signal y_filtered_z_blk_n : STD_LOGIC;
    signal filtered_gradient_x_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal or_cond_reg_784 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal filtered_gradient_y_blk_n : STD_LOGIC;
    signal filtered_gradient_z_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_184 : STD_LOGIC_VECTOR (18 downto 0);
    signal c_reg_195 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_val_z_load_3_6_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op107_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter31 : BOOLEAN;
    signal ap_predicate_op271_write_state34 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal buf_val_z_load_3_6_reg_206_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_6_reg_206_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_6_reg_219_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_6_reg_232_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_446_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_fu_466_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_784_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_788_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c_3_fu_498_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_val_x_load_1_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_1_reg_812_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_1_reg_812_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_1_reg_812_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_1_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_1_reg_817_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_1_reg_817_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_1_reg_817_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_1_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_1_reg_822_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_1_reg_822_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_1_reg_822_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_2_reg_827_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_2_reg_832_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_2_reg_837_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_reg_842_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_reg_847_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_reg_852_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_4_reg_857_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_4_reg_862_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_4_reg_867_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_load_1_reg_872_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_load_1_reg_877_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_load_1_reg_882_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_reg_887 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_342_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_reg_907 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_reg_912 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_347_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_145_1_reg_917 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_1_reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_1_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_260_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_1_reg_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_264_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_1_reg_937 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_1_reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_145_2_reg_947 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_367_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_2_reg_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_2_reg_957 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_2_reg_962 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_2_reg_967 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_2_reg_972 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_145_3_reg_977 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_3_reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_3_reg_987 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_3_reg_992 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_3_reg_997 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_292_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_3_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_145_4_reg_1007 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_4_reg_1012 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_4_reg_1017 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_4_reg_1022 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_300_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_4_reg_1027 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_4_reg_1032 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_145_5_reg_1037 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_5_reg_1042 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_417_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_5_reg_1047 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_5_reg_1052 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_5_reg_1057 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_316_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_5_reg_1062 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_145_6_reg_1067 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_428_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_6_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_6_reg_1077 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_6_reg_1082 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_6_reg_1087 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_6_reg_1092 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_z_load_3_6_reg_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_y_load_3_6_reg_219 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_x_load_3_6_reg_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal buf_val_x_load_6_fu_70 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_6_fu_74 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_6_fu_78 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_1_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_1_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_1_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_2_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_2_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_2_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_3_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_3_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_3_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_load_3_4_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_load_3_4_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_load_3_4_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_1_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_1_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_1_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_mid2_fu_458_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_44_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_245_ce : STD_LOGIC;
    signal grp_fu_250_ce : STD_LOGIC;
    signal grp_fu_255_ce : STD_LOGIC;
    signal grp_fu_260_ce : STD_LOGIC;
    signal grp_fu_264_ce : STD_LOGIC;
    signal grp_fu_268_ce : STD_LOGIC;
    signal grp_fu_272_ce : STD_LOGIC;
    signal grp_fu_276_ce : STD_LOGIC;
    signal grp_fu_280_ce : STD_LOGIC;
    signal grp_fu_284_ce : STD_LOGIC;
    signal grp_fu_288_ce : STD_LOGIC;
    signal grp_fu_292_ce : STD_LOGIC;
    signal grp_fu_296_ce : STD_LOGIC;
    signal grp_fu_300_ce : STD_LOGIC;
    signal grp_fu_304_ce : STD_LOGIC;
    signal grp_fu_308_ce : STD_LOGIC;
    signal grp_fu_312_ce : STD_LOGIC;
    signal grp_fu_316_ce : STD_LOGIC;
    signal grp_fu_320_ce : STD_LOGIC;
    signal grp_fu_324_ce : STD_LOGIC;
    signal grp_fu_328_ce : STD_LOGIC;
    signal grp_fu_332_ce : STD_LOGIC;
    signal grp_fu_337_ce : STD_LOGIC;
    signal grp_fu_342_ce : STD_LOGIC;
    signal grp_fu_347_ce : STD_LOGIC;
    signal grp_fu_352_ce : STD_LOGIC;
    signal grp_fu_357_ce : STD_LOGIC;
    signal grp_fu_362_ce : STD_LOGIC;
    signal grp_fu_367_ce : STD_LOGIC;
    signal grp_fu_372_ce : STD_LOGIC;
    signal grp_fu_377_ce : STD_LOGIC;
    signal grp_fu_382_ce : STD_LOGIC;
    signal grp_fu_387_ce : STD_LOGIC;
    signal grp_fu_392_ce : STD_LOGIC;
    signal grp_fu_397_ce : STD_LOGIC;
    signal grp_fu_402_ce : STD_LOGIC;
    signal grp_fu_407_ce : STD_LOGIC;
    signal grp_fu_412_ce : STD_LOGIC;
    signal grp_fu_417_ce : STD_LOGIC;
    signal grp_fu_422_ce : STD_LOGIC;
    signal grp_fu_428_ce : STD_LOGIC;
    signal grp_fu_434_ce : STD_LOGIC;
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_293 : BOOLEAN;
    signal ap_condition_962 : BOOLEAN;

    component a0_optical_flow_faddhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component a0_optical_flow_fmulibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    optical_flow_faddhbi_U106 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_78_reg_887,
        din1 => ap_const_lv32_0,
        ce => grp_fu_245_ce,
        dout => grp_fu_245_p2);

    optical_flow_faddhbi_U107 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_79_reg_892,
        din1 => ap_const_lv32_0,
        ce => grp_fu_250_ce,
        dout => grp_fu_250_p2);

    optical_flow_faddhbi_U108 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_80_reg_897,
        din1 => ap_const_lv32_0,
        ce => grp_fu_255_ce,
        dout => grp_fu_255_p2);

    optical_flow_faddhbi_U109 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_reg_902,
        din1 => tmp_145_1_reg_917,
        ce => grp_fu_260_ce,
        dout => grp_fu_260_p2);

    optical_flow_faddhbi_U110 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_reg_907,
        din1 => tmp_146_1_reg_922,
        ce => grp_fu_264_ce,
        dout => grp_fu_264_p2);

    optical_flow_faddhbi_U111 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_reg_912,
        din1 => tmp_147_1_reg_927,
        ce => grp_fu_268_ce,
        dout => grp_fu_268_p2);

    optical_flow_faddhbi_U112 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_1_reg_932,
        din1 => tmp_145_2_reg_947,
        ce => grp_fu_272_ce,
        dout => grp_fu_272_p2);

    optical_flow_faddhbi_U113 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_1_reg_937,
        din1 => tmp_146_2_reg_952,
        ce => grp_fu_276_ce,
        dout => grp_fu_276_p2);

    optical_flow_faddhbi_U114 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_1_reg_942,
        din1 => tmp_147_2_reg_957,
        ce => grp_fu_280_ce,
        dout => grp_fu_280_p2);

    optical_flow_faddhbi_U115 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_2_reg_962,
        din1 => tmp_145_3_reg_977,
        ce => grp_fu_284_ce,
        dout => grp_fu_284_p2);

    optical_flow_faddhbi_U116 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_2_reg_967,
        din1 => tmp_146_3_reg_982,
        ce => grp_fu_288_ce,
        dout => grp_fu_288_p2);

    optical_flow_faddhbi_U117 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_2_reg_972,
        din1 => tmp_147_3_reg_987,
        ce => grp_fu_292_ce,
        dout => grp_fu_292_p2);

    optical_flow_faddhbi_U118 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_3_reg_992,
        din1 => tmp_145_4_reg_1007,
        ce => grp_fu_296_ce,
        dout => grp_fu_296_p2);

    optical_flow_faddhbi_U119 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_3_reg_997,
        din1 => tmp_146_4_reg_1012,
        ce => grp_fu_300_ce,
        dout => grp_fu_300_p2);

    optical_flow_faddhbi_U120 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_3_reg_1002,
        din1 => tmp_147_4_reg_1017,
        ce => grp_fu_304_ce,
        dout => grp_fu_304_p2);

    optical_flow_faddhbi_U121 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_4_reg_1022,
        din1 => tmp_145_5_reg_1037,
        ce => grp_fu_308_ce,
        dout => grp_fu_308_p2);

    optical_flow_faddhbi_U122 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_4_reg_1027,
        din1 => tmp_146_5_reg_1042,
        ce => grp_fu_312_ce,
        dout => grp_fu_312_p2);

    optical_flow_faddhbi_U123 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_4_reg_1032,
        din1 => tmp_147_5_reg_1047,
        ce => grp_fu_316_ce,
        dout => grp_fu_316_p2);

    optical_flow_faddhbi_U124 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_5_reg_1052,
        din1 => tmp_145_6_reg_1067,
        ce => grp_fu_320_ce,
        dout => grp_fu_320_p2);

    optical_flow_faddhbi_U125 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_5_reg_1057,
        din1 => tmp_146_6_reg_1072,
        ce => grp_fu_324_ce,
        dout => grp_fu_324_p2);

    optical_flow_faddhbi_U126 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_5_reg_1062,
        din1 => tmp_147_6_reg_1077,
        ce => grp_fu_328_ce,
        dout => grp_fu_328_p2);

    optical_flow_fmulibs_U127 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_x_load_6_fu_70,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_332_ce,
        dout => grp_fu_332_p2);

    optical_flow_fmulibs_U128 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_y_load_6_fu_74,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_337_ce,
        dout => grp_fu_337_p2);

    optical_flow_fmulibs_U129 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_z_load_6_fu_78,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_342_ce,
        dout => grp_fu_342_p2);

    optical_flow_fmulibs_U130 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_x_load_1_reg_812_pp0_iter4_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_347_ce,
        dout => grp_fu_347_p2);

    optical_flow_fmulibs_U131 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_y_load_1_reg_817_pp0_iter4_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_352_ce,
        dout => grp_fu_352_p2);

    optical_flow_fmulibs_U132 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_z_load_1_reg_822_pp0_iter4_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_357_ce,
        dout => grp_fu_357_p2);

    optical_flow_fmulibs_U133 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_x_load_2_reg_827_pp0_iter8_reg,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_362_ce,
        dout => grp_fu_362_p2);

    optical_flow_fmulibs_U134 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_y_load_2_reg_832_pp0_iter8_reg,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_367_ce,
        dout => grp_fu_367_p2);

    optical_flow_fmulibs_U135 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_z_load_2_reg_837_pp0_iter8_reg,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_372_ce,
        dout => grp_fu_372_p2);

    optical_flow_fmulibs_U136 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_x_load_3_reg_842_pp0_iter12_reg,
        din1 => ap_const_lv32_3E94A234,
        ce => grp_fu_377_ce,
        dout => grp_fu_377_p2);

    optical_flow_fmulibs_U137 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_y_load_3_reg_847_pp0_iter12_reg,
        din1 => ap_const_lv32_3E94A234,
        ce => grp_fu_382_ce,
        dout => grp_fu_382_p2);

    optical_flow_fmulibs_U138 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_z_load_3_reg_852_pp0_iter12_reg,
        din1 => ap_const_lv32_3E94A234,
        ce => grp_fu_387_ce,
        dout => grp_fu_387_p2);

    optical_flow_fmulibs_U139 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_x_load_4_reg_857_pp0_iter16_reg,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_392_ce,
        dout => grp_fu_392_p2);

    optical_flow_fmulibs_U140 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_y_load_4_reg_862_pp0_iter16_reg,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_397_ce,
        dout => grp_fu_397_p2);

    optical_flow_fmulibs_U141 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_z_load_4_reg_867_pp0_iter16_reg,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_402_ce,
        dout => grp_fu_402_p2);

    optical_flow_fmulibs_U142 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_x_1_load_1_reg_872_pp0_iter20_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_407_ce,
        dout => grp_fu_407_p2);

    optical_flow_fmulibs_U143 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_y_1_load_1_reg_877_pp0_iter20_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_412_ce,
        dout => grp_fu_412_p2);

    optical_flow_fmulibs_U144 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_z_1_load_1_reg_882_pp0_iter20_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_417_ce,
        dout => grp_fu_417_p2);

    optical_flow_fmulibs_U145 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_x_load_3_6_reg_232_pp0_iter24_reg,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_422_ce,
        dout => grp_fu_422_p2);

    optical_flow_fmulibs_U146 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_y_load_3_6_reg_219_pp0_iter24_reg,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_428_ce,
        dout => grp_fu_428_p2);

    optical_flow_fmulibs_U147 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_z_load_3_6_reg_206_pp0_iter24_reg,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_434_ce,
        dout => grp_fu_434_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_fu_440_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state3)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_293)) then
                if (((tmp_fu_466_p3 = ap_const_lv1_1) and (exitcond_flatten_fu_440_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232 <= ap_phi_reg_pp0_iter0_buf_val_x_load_3_6_reg_232;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_293)) then
                if (((tmp_fu_466_p3 = ap_const_lv1_1) and (exitcond_flatten_fu_440_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219 <= ap_phi_reg_pp0_iter0_buf_val_y_load_3_6_reg_219;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_293)) then
                if (((tmp_fu_466_p3 = ap_const_lv1_1) and (exitcond_flatten_fu_440_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206 <= ap_phi_reg_pp0_iter0_buf_val_z_load_3_6_reg_206;
                end if;
            end if; 
        end if;
    end process;

    buf_val_x_load_3_6_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_962)) then
                if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0))) then 
                    buf_val_x_load_3_6_reg_232 <= y_filtered_x_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_x_load_3_6_reg_232 <= ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232;
                end if;
            end if; 
        end if;
    end process;

    buf_val_y_load_3_6_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_962)) then
                if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0))) then 
                    buf_val_y_load_3_6_reg_219 <= y_filtered_y_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_y_load_3_6_reg_219 <= ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219;
                end if;
            end if; 
        end if;
    end process;

    buf_val_z_load_3_6_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_962)) then
                if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0))) then 
                    buf_val_z_load_3_6_reg_206 <= y_filtered_z_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_z_load_3_6_reg_206 <= ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206;
                end if;
            end if; 
        end if;
    end process;

    c_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                c_reg_195 <= c_3_fu_498_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_reg_195 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_184 <= indvar_flatten_next_fu_446_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_184 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_1_reg_932 <= grp_fu_260_p2;
                acc_y_1_reg_937 <= grp_fu_264_p2;
                acc_z_1_reg_942 <= grp_fu_268_p2;
                tmp_145_2_reg_947 <= grp_fu_362_p2;
                tmp_146_2_reg_952 <= grp_fu_367_p2;
                tmp_147_2_reg_957 <= grp_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter14_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_2_reg_962 <= grp_fu_272_p2;
                acc_y_2_reg_967 <= grp_fu_276_p2;
                acc_z_2_reg_972 <= grp_fu_280_p2;
                tmp_145_3_reg_977 <= grp_fu_377_p2;
                tmp_146_3_reg_982 <= grp_fu_382_p2;
                tmp_147_3_reg_987 <= grp_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter18_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_3_reg_992 <= grp_fu_284_p2;
                acc_y_3_reg_997 <= grp_fu_288_p2;
                acc_z_3_reg_1002 <= grp_fu_292_p2;
                tmp_145_4_reg_1007 <= grp_fu_392_p2;
                tmp_146_4_reg_1012 <= grp_fu_397_p2;
                tmp_147_4_reg_1017 <= grp_fu_402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter22_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_4_reg_1022 <= grp_fu_296_p2;
                acc_y_4_reg_1027 <= grp_fu_300_p2;
                acc_z_4_reg_1032 <= grp_fu_304_p2;
                tmp_145_5_reg_1037 <= grp_fu_407_p2;
                tmp_146_5_reg_1042 <= grp_fu_412_p2;
                tmp_147_5_reg_1047 <= grp_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter26_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_5_reg_1052 <= grp_fu_308_p2;
                acc_y_5_reg_1057 <= grp_fu_312_p2;
                acc_z_5_reg_1062 <= grp_fu_316_p2;
                tmp_145_6_reg_1067 <= grp_fu_422_p2;
                tmp_146_6_reg_1072 <= grp_fu_428_p2;
                tmp_147_6_reg_1077 <= grp_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter30_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_6_reg_1082 <= grp_fu_320_p2;
                acc_y_6_reg_1087 <= grp_fu_324_p2;
                acc_z_6_reg_1092 <= grp_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_reg_902 <= grp_fu_245_p2;
                acc_y_reg_907 <= grp_fu_250_p2;
                acc_z_reg_912 <= grp_fu_255_p2;
                tmp_145_1_reg_917 <= grp_fu_347_p2;
                tmp_146_1_reg_922 <= grp_fu_352_p2;
                tmp_147_1_reg_927 <= grp_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_x_load_1_reg_812 <= buf_val_x_load_3_1_fu_82;
                buf_val_x_load_2_reg_827 <= buf_val_x_load_3_2_fu_94;
                buf_val_x_load_3_reg_842 <= buf_val_x_load_3_3_fu_106;
                buf_val_x_load_4_reg_857 <= buf_val_x_load_3_4_fu_118;
                buf_val_y_load_1_reg_817 <= buf_val_y_load_3_1_fu_86;
                buf_val_y_load_2_reg_832 <= buf_val_y_load_3_2_fu_98;
                buf_val_y_load_3_reg_847 <= buf_val_y_load_3_3_fu_110;
                buf_val_y_load_4_reg_862 <= buf_val_y_load_3_4_fu_122;
                buf_val_z_load_1_reg_822 <= buf_val_z_load_3_1_fu_90;
                buf_val_z_load_2_reg_837 <= buf_val_z_load_3_2_fu_102;
                buf_val_z_load_3_reg_852 <= buf_val_z_load_3_3_fu_114;
                buf_val_z_load_4_reg_867 <= buf_val_z_load_3_4_fu_126;
                exitcond_flatten_reg_771 <= exitcond_flatten_fu_440_p2;
                or_cond_reg_784_pp0_iter1_reg <= or_cond_reg_784;
                tmp_47_reg_788_pp0_iter1_reg <= tmp_47_reg_788;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                buf_val_x_load_1_reg_812_pp0_iter2_reg <= buf_val_x_load_1_reg_812;
                buf_val_x_load_1_reg_812_pp0_iter3_reg <= buf_val_x_load_1_reg_812_pp0_iter2_reg;
                buf_val_x_load_1_reg_812_pp0_iter4_reg <= buf_val_x_load_1_reg_812_pp0_iter3_reg;
                buf_val_x_load_2_reg_827_pp0_iter2_reg <= buf_val_x_load_2_reg_827;
                buf_val_x_load_2_reg_827_pp0_iter3_reg <= buf_val_x_load_2_reg_827_pp0_iter2_reg;
                buf_val_x_load_2_reg_827_pp0_iter4_reg <= buf_val_x_load_2_reg_827_pp0_iter3_reg;
                buf_val_x_load_2_reg_827_pp0_iter5_reg <= buf_val_x_load_2_reg_827_pp0_iter4_reg;
                buf_val_x_load_2_reg_827_pp0_iter6_reg <= buf_val_x_load_2_reg_827_pp0_iter5_reg;
                buf_val_x_load_2_reg_827_pp0_iter7_reg <= buf_val_x_load_2_reg_827_pp0_iter6_reg;
                buf_val_x_load_2_reg_827_pp0_iter8_reg <= buf_val_x_load_2_reg_827_pp0_iter7_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter10_reg <= buf_val_x_load_3_6_reg_232_pp0_iter9_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter11_reg <= buf_val_x_load_3_6_reg_232_pp0_iter10_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter12_reg <= buf_val_x_load_3_6_reg_232_pp0_iter11_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter13_reg <= buf_val_x_load_3_6_reg_232_pp0_iter12_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter14_reg <= buf_val_x_load_3_6_reg_232_pp0_iter13_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter15_reg <= buf_val_x_load_3_6_reg_232_pp0_iter14_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter16_reg <= buf_val_x_load_3_6_reg_232_pp0_iter15_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter17_reg <= buf_val_x_load_3_6_reg_232_pp0_iter16_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter18_reg <= buf_val_x_load_3_6_reg_232_pp0_iter17_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter19_reg <= buf_val_x_load_3_6_reg_232_pp0_iter18_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter20_reg <= buf_val_x_load_3_6_reg_232_pp0_iter19_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter21_reg <= buf_val_x_load_3_6_reg_232_pp0_iter20_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter22_reg <= buf_val_x_load_3_6_reg_232_pp0_iter21_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter23_reg <= buf_val_x_load_3_6_reg_232_pp0_iter22_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter24_reg <= buf_val_x_load_3_6_reg_232_pp0_iter23_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter2_reg <= buf_val_x_load_3_6_reg_232;
                buf_val_x_load_3_6_reg_232_pp0_iter3_reg <= buf_val_x_load_3_6_reg_232_pp0_iter2_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter4_reg <= buf_val_x_load_3_6_reg_232_pp0_iter3_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter5_reg <= buf_val_x_load_3_6_reg_232_pp0_iter4_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter6_reg <= buf_val_x_load_3_6_reg_232_pp0_iter5_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter7_reg <= buf_val_x_load_3_6_reg_232_pp0_iter6_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter8_reg <= buf_val_x_load_3_6_reg_232_pp0_iter7_reg;
                buf_val_x_load_3_6_reg_232_pp0_iter9_reg <= buf_val_x_load_3_6_reg_232_pp0_iter8_reg;
                buf_val_x_load_3_reg_842_pp0_iter10_reg <= buf_val_x_load_3_reg_842_pp0_iter9_reg;
                buf_val_x_load_3_reg_842_pp0_iter11_reg <= buf_val_x_load_3_reg_842_pp0_iter10_reg;
                buf_val_x_load_3_reg_842_pp0_iter12_reg <= buf_val_x_load_3_reg_842_pp0_iter11_reg;
                buf_val_x_load_3_reg_842_pp0_iter2_reg <= buf_val_x_load_3_reg_842;
                buf_val_x_load_3_reg_842_pp0_iter3_reg <= buf_val_x_load_3_reg_842_pp0_iter2_reg;
                buf_val_x_load_3_reg_842_pp0_iter4_reg <= buf_val_x_load_3_reg_842_pp0_iter3_reg;
                buf_val_x_load_3_reg_842_pp0_iter5_reg <= buf_val_x_load_3_reg_842_pp0_iter4_reg;
                buf_val_x_load_3_reg_842_pp0_iter6_reg <= buf_val_x_load_3_reg_842_pp0_iter5_reg;
                buf_val_x_load_3_reg_842_pp0_iter7_reg <= buf_val_x_load_3_reg_842_pp0_iter6_reg;
                buf_val_x_load_3_reg_842_pp0_iter8_reg <= buf_val_x_load_3_reg_842_pp0_iter7_reg;
                buf_val_x_load_3_reg_842_pp0_iter9_reg <= buf_val_x_load_3_reg_842_pp0_iter8_reg;
                buf_val_x_load_4_reg_857_pp0_iter10_reg <= buf_val_x_load_4_reg_857_pp0_iter9_reg;
                buf_val_x_load_4_reg_857_pp0_iter11_reg <= buf_val_x_load_4_reg_857_pp0_iter10_reg;
                buf_val_x_load_4_reg_857_pp0_iter12_reg <= buf_val_x_load_4_reg_857_pp0_iter11_reg;
                buf_val_x_load_4_reg_857_pp0_iter13_reg <= buf_val_x_load_4_reg_857_pp0_iter12_reg;
                buf_val_x_load_4_reg_857_pp0_iter14_reg <= buf_val_x_load_4_reg_857_pp0_iter13_reg;
                buf_val_x_load_4_reg_857_pp0_iter15_reg <= buf_val_x_load_4_reg_857_pp0_iter14_reg;
                buf_val_x_load_4_reg_857_pp0_iter16_reg <= buf_val_x_load_4_reg_857_pp0_iter15_reg;
                buf_val_x_load_4_reg_857_pp0_iter2_reg <= buf_val_x_load_4_reg_857;
                buf_val_x_load_4_reg_857_pp0_iter3_reg <= buf_val_x_load_4_reg_857_pp0_iter2_reg;
                buf_val_x_load_4_reg_857_pp0_iter4_reg <= buf_val_x_load_4_reg_857_pp0_iter3_reg;
                buf_val_x_load_4_reg_857_pp0_iter5_reg <= buf_val_x_load_4_reg_857_pp0_iter4_reg;
                buf_val_x_load_4_reg_857_pp0_iter6_reg <= buf_val_x_load_4_reg_857_pp0_iter5_reg;
                buf_val_x_load_4_reg_857_pp0_iter7_reg <= buf_val_x_load_4_reg_857_pp0_iter6_reg;
                buf_val_x_load_4_reg_857_pp0_iter8_reg <= buf_val_x_load_4_reg_857_pp0_iter7_reg;
                buf_val_x_load_4_reg_857_pp0_iter9_reg <= buf_val_x_load_4_reg_857_pp0_iter8_reg;
                buf_val_y_load_1_reg_817_pp0_iter2_reg <= buf_val_y_load_1_reg_817;
                buf_val_y_load_1_reg_817_pp0_iter3_reg <= buf_val_y_load_1_reg_817_pp0_iter2_reg;
                buf_val_y_load_1_reg_817_pp0_iter4_reg <= buf_val_y_load_1_reg_817_pp0_iter3_reg;
                buf_val_y_load_2_reg_832_pp0_iter2_reg <= buf_val_y_load_2_reg_832;
                buf_val_y_load_2_reg_832_pp0_iter3_reg <= buf_val_y_load_2_reg_832_pp0_iter2_reg;
                buf_val_y_load_2_reg_832_pp0_iter4_reg <= buf_val_y_load_2_reg_832_pp0_iter3_reg;
                buf_val_y_load_2_reg_832_pp0_iter5_reg <= buf_val_y_load_2_reg_832_pp0_iter4_reg;
                buf_val_y_load_2_reg_832_pp0_iter6_reg <= buf_val_y_load_2_reg_832_pp0_iter5_reg;
                buf_val_y_load_2_reg_832_pp0_iter7_reg <= buf_val_y_load_2_reg_832_pp0_iter6_reg;
                buf_val_y_load_2_reg_832_pp0_iter8_reg <= buf_val_y_load_2_reg_832_pp0_iter7_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter10_reg <= buf_val_y_load_3_6_reg_219_pp0_iter9_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter11_reg <= buf_val_y_load_3_6_reg_219_pp0_iter10_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter12_reg <= buf_val_y_load_3_6_reg_219_pp0_iter11_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter13_reg <= buf_val_y_load_3_6_reg_219_pp0_iter12_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter14_reg <= buf_val_y_load_3_6_reg_219_pp0_iter13_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter15_reg <= buf_val_y_load_3_6_reg_219_pp0_iter14_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter16_reg <= buf_val_y_load_3_6_reg_219_pp0_iter15_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter17_reg <= buf_val_y_load_3_6_reg_219_pp0_iter16_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter18_reg <= buf_val_y_load_3_6_reg_219_pp0_iter17_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter19_reg <= buf_val_y_load_3_6_reg_219_pp0_iter18_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter20_reg <= buf_val_y_load_3_6_reg_219_pp0_iter19_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter21_reg <= buf_val_y_load_3_6_reg_219_pp0_iter20_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter22_reg <= buf_val_y_load_3_6_reg_219_pp0_iter21_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter23_reg <= buf_val_y_load_3_6_reg_219_pp0_iter22_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter24_reg <= buf_val_y_load_3_6_reg_219_pp0_iter23_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter2_reg <= buf_val_y_load_3_6_reg_219;
                buf_val_y_load_3_6_reg_219_pp0_iter3_reg <= buf_val_y_load_3_6_reg_219_pp0_iter2_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter4_reg <= buf_val_y_load_3_6_reg_219_pp0_iter3_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter5_reg <= buf_val_y_load_3_6_reg_219_pp0_iter4_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter6_reg <= buf_val_y_load_3_6_reg_219_pp0_iter5_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter7_reg <= buf_val_y_load_3_6_reg_219_pp0_iter6_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter8_reg <= buf_val_y_load_3_6_reg_219_pp0_iter7_reg;
                buf_val_y_load_3_6_reg_219_pp0_iter9_reg <= buf_val_y_load_3_6_reg_219_pp0_iter8_reg;
                buf_val_y_load_3_reg_847_pp0_iter10_reg <= buf_val_y_load_3_reg_847_pp0_iter9_reg;
                buf_val_y_load_3_reg_847_pp0_iter11_reg <= buf_val_y_load_3_reg_847_pp0_iter10_reg;
                buf_val_y_load_3_reg_847_pp0_iter12_reg <= buf_val_y_load_3_reg_847_pp0_iter11_reg;
                buf_val_y_load_3_reg_847_pp0_iter2_reg <= buf_val_y_load_3_reg_847;
                buf_val_y_load_3_reg_847_pp0_iter3_reg <= buf_val_y_load_3_reg_847_pp0_iter2_reg;
                buf_val_y_load_3_reg_847_pp0_iter4_reg <= buf_val_y_load_3_reg_847_pp0_iter3_reg;
                buf_val_y_load_3_reg_847_pp0_iter5_reg <= buf_val_y_load_3_reg_847_pp0_iter4_reg;
                buf_val_y_load_3_reg_847_pp0_iter6_reg <= buf_val_y_load_3_reg_847_pp0_iter5_reg;
                buf_val_y_load_3_reg_847_pp0_iter7_reg <= buf_val_y_load_3_reg_847_pp0_iter6_reg;
                buf_val_y_load_3_reg_847_pp0_iter8_reg <= buf_val_y_load_3_reg_847_pp0_iter7_reg;
                buf_val_y_load_3_reg_847_pp0_iter9_reg <= buf_val_y_load_3_reg_847_pp0_iter8_reg;
                buf_val_y_load_4_reg_862_pp0_iter10_reg <= buf_val_y_load_4_reg_862_pp0_iter9_reg;
                buf_val_y_load_4_reg_862_pp0_iter11_reg <= buf_val_y_load_4_reg_862_pp0_iter10_reg;
                buf_val_y_load_4_reg_862_pp0_iter12_reg <= buf_val_y_load_4_reg_862_pp0_iter11_reg;
                buf_val_y_load_4_reg_862_pp0_iter13_reg <= buf_val_y_load_4_reg_862_pp0_iter12_reg;
                buf_val_y_load_4_reg_862_pp0_iter14_reg <= buf_val_y_load_4_reg_862_pp0_iter13_reg;
                buf_val_y_load_4_reg_862_pp0_iter15_reg <= buf_val_y_load_4_reg_862_pp0_iter14_reg;
                buf_val_y_load_4_reg_862_pp0_iter16_reg <= buf_val_y_load_4_reg_862_pp0_iter15_reg;
                buf_val_y_load_4_reg_862_pp0_iter2_reg <= buf_val_y_load_4_reg_862;
                buf_val_y_load_4_reg_862_pp0_iter3_reg <= buf_val_y_load_4_reg_862_pp0_iter2_reg;
                buf_val_y_load_4_reg_862_pp0_iter4_reg <= buf_val_y_load_4_reg_862_pp0_iter3_reg;
                buf_val_y_load_4_reg_862_pp0_iter5_reg <= buf_val_y_load_4_reg_862_pp0_iter4_reg;
                buf_val_y_load_4_reg_862_pp0_iter6_reg <= buf_val_y_load_4_reg_862_pp0_iter5_reg;
                buf_val_y_load_4_reg_862_pp0_iter7_reg <= buf_val_y_load_4_reg_862_pp0_iter6_reg;
                buf_val_y_load_4_reg_862_pp0_iter8_reg <= buf_val_y_load_4_reg_862_pp0_iter7_reg;
                buf_val_y_load_4_reg_862_pp0_iter9_reg <= buf_val_y_load_4_reg_862_pp0_iter8_reg;
                buf_val_z_load_1_reg_822_pp0_iter2_reg <= buf_val_z_load_1_reg_822;
                buf_val_z_load_1_reg_822_pp0_iter3_reg <= buf_val_z_load_1_reg_822_pp0_iter2_reg;
                buf_val_z_load_1_reg_822_pp0_iter4_reg <= buf_val_z_load_1_reg_822_pp0_iter3_reg;
                buf_val_z_load_2_reg_837_pp0_iter2_reg <= buf_val_z_load_2_reg_837;
                buf_val_z_load_2_reg_837_pp0_iter3_reg <= buf_val_z_load_2_reg_837_pp0_iter2_reg;
                buf_val_z_load_2_reg_837_pp0_iter4_reg <= buf_val_z_load_2_reg_837_pp0_iter3_reg;
                buf_val_z_load_2_reg_837_pp0_iter5_reg <= buf_val_z_load_2_reg_837_pp0_iter4_reg;
                buf_val_z_load_2_reg_837_pp0_iter6_reg <= buf_val_z_load_2_reg_837_pp0_iter5_reg;
                buf_val_z_load_2_reg_837_pp0_iter7_reg <= buf_val_z_load_2_reg_837_pp0_iter6_reg;
                buf_val_z_load_2_reg_837_pp0_iter8_reg <= buf_val_z_load_2_reg_837_pp0_iter7_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter10_reg <= buf_val_z_load_3_6_reg_206_pp0_iter9_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter11_reg <= buf_val_z_load_3_6_reg_206_pp0_iter10_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter12_reg <= buf_val_z_load_3_6_reg_206_pp0_iter11_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter13_reg <= buf_val_z_load_3_6_reg_206_pp0_iter12_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter14_reg <= buf_val_z_load_3_6_reg_206_pp0_iter13_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter15_reg <= buf_val_z_load_3_6_reg_206_pp0_iter14_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter16_reg <= buf_val_z_load_3_6_reg_206_pp0_iter15_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter17_reg <= buf_val_z_load_3_6_reg_206_pp0_iter16_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter18_reg <= buf_val_z_load_3_6_reg_206_pp0_iter17_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter19_reg <= buf_val_z_load_3_6_reg_206_pp0_iter18_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter20_reg <= buf_val_z_load_3_6_reg_206_pp0_iter19_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter21_reg <= buf_val_z_load_3_6_reg_206_pp0_iter20_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter22_reg <= buf_val_z_load_3_6_reg_206_pp0_iter21_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter23_reg <= buf_val_z_load_3_6_reg_206_pp0_iter22_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter24_reg <= buf_val_z_load_3_6_reg_206_pp0_iter23_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter2_reg <= buf_val_z_load_3_6_reg_206;
                buf_val_z_load_3_6_reg_206_pp0_iter3_reg <= buf_val_z_load_3_6_reg_206_pp0_iter2_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter4_reg <= buf_val_z_load_3_6_reg_206_pp0_iter3_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter5_reg <= buf_val_z_load_3_6_reg_206_pp0_iter4_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter6_reg <= buf_val_z_load_3_6_reg_206_pp0_iter5_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter7_reg <= buf_val_z_load_3_6_reg_206_pp0_iter6_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter8_reg <= buf_val_z_load_3_6_reg_206_pp0_iter7_reg;
                buf_val_z_load_3_6_reg_206_pp0_iter9_reg <= buf_val_z_load_3_6_reg_206_pp0_iter8_reg;
                buf_val_z_load_3_reg_852_pp0_iter10_reg <= buf_val_z_load_3_reg_852_pp0_iter9_reg;
                buf_val_z_load_3_reg_852_pp0_iter11_reg <= buf_val_z_load_3_reg_852_pp0_iter10_reg;
                buf_val_z_load_3_reg_852_pp0_iter12_reg <= buf_val_z_load_3_reg_852_pp0_iter11_reg;
                buf_val_z_load_3_reg_852_pp0_iter2_reg <= buf_val_z_load_3_reg_852;
                buf_val_z_load_3_reg_852_pp0_iter3_reg <= buf_val_z_load_3_reg_852_pp0_iter2_reg;
                buf_val_z_load_3_reg_852_pp0_iter4_reg <= buf_val_z_load_3_reg_852_pp0_iter3_reg;
                buf_val_z_load_3_reg_852_pp0_iter5_reg <= buf_val_z_load_3_reg_852_pp0_iter4_reg;
                buf_val_z_load_3_reg_852_pp0_iter6_reg <= buf_val_z_load_3_reg_852_pp0_iter5_reg;
                buf_val_z_load_3_reg_852_pp0_iter7_reg <= buf_val_z_load_3_reg_852_pp0_iter6_reg;
                buf_val_z_load_3_reg_852_pp0_iter8_reg <= buf_val_z_load_3_reg_852_pp0_iter7_reg;
                buf_val_z_load_3_reg_852_pp0_iter9_reg <= buf_val_z_load_3_reg_852_pp0_iter8_reg;
                buf_val_z_load_4_reg_867_pp0_iter10_reg <= buf_val_z_load_4_reg_867_pp0_iter9_reg;
                buf_val_z_load_4_reg_867_pp0_iter11_reg <= buf_val_z_load_4_reg_867_pp0_iter10_reg;
                buf_val_z_load_4_reg_867_pp0_iter12_reg <= buf_val_z_load_4_reg_867_pp0_iter11_reg;
                buf_val_z_load_4_reg_867_pp0_iter13_reg <= buf_val_z_load_4_reg_867_pp0_iter12_reg;
                buf_val_z_load_4_reg_867_pp0_iter14_reg <= buf_val_z_load_4_reg_867_pp0_iter13_reg;
                buf_val_z_load_4_reg_867_pp0_iter15_reg <= buf_val_z_load_4_reg_867_pp0_iter14_reg;
                buf_val_z_load_4_reg_867_pp0_iter16_reg <= buf_val_z_load_4_reg_867_pp0_iter15_reg;
                buf_val_z_load_4_reg_867_pp0_iter2_reg <= buf_val_z_load_4_reg_867;
                buf_val_z_load_4_reg_867_pp0_iter3_reg <= buf_val_z_load_4_reg_867_pp0_iter2_reg;
                buf_val_z_load_4_reg_867_pp0_iter4_reg <= buf_val_z_load_4_reg_867_pp0_iter3_reg;
                buf_val_z_load_4_reg_867_pp0_iter5_reg <= buf_val_z_load_4_reg_867_pp0_iter4_reg;
                buf_val_z_load_4_reg_867_pp0_iter6_reg <= buf_val_z_load_4_reg_867_pp0_iter5_reg;
                buf_val_z_load_4_reg_867_pp0_iter7_reg <= buf_val_z_load_4_reg_867_pp0_iter6_reg;
                buf_val_z_load_4_reg_867_pp0_iter8_reg <= buf_val_z_load_4_reg_867_pp0_iter7_reg;
                buf_val_z_load_4_reg_867_pp0_iter9_reg <= buf_val_z_load_4_reg_867_pp0_iter8_reg;
                or_cond_reg_784_pp0_iter10_reg <= or_cond_reg_784_pp0_iter9_reg;
                or_cond_reg_784_pp0_iter11_reg <= or_cond_reg_784_pp0_iter10_reg;
                or_cond_reg_784_pp0_iter12_reg <= or_cond_reg_784_pp0_iter11_reg;
                or_cond_reg_784_pp0_iter13_reg <= or_cond_reg_784_pp0_iter12_reg;
                or_cond_reg_784_pp0_iter14_reg <= or_cond_reg_784_pp0_iter13_reg;
                or_cond_reg_784_pp0_iter15_reg <= or_cond_reg_784_pp0_iter14_reg;
                or_cond_reg_784_pp0_iter16_reg <= or_cond_reg_784_pp0_iter15_reg;
                or_cond_reg_784_pp0_iter17_reg <= or_cond_reg_784_pp0_iter16_reg;
                or_cond_reg_784_pp0_iter18_reg <= or_cond_reg_784_pp0_iter17_reg;
                or_cond_reg_784_pp0_iter19_reg <= or_cond_reg_784_pp0_iter18_reg;
                or_cond_reg_784_pp0_iter20_reg <= or_cond_reg_784_pp0_iter19_reg;
                or_cond_reg_784_pp0_iter21_reg <= or_cond_reg_784_pp0_iter20_reg;
                or_cond_reg_784_pp0_iter22_reg <= or_cond_reg_784_pp0_iter21_reg;
                or_cond_reg_784_pp0_iter23_reg <= or_cond_reg_784_pp0_iter22_reg;
                or_cond_reg_784_pp0_iter24_reg <= or_cond_reg_784_pp0_iter23_reg;
                or_cond_reg_784_pp0_iter25_reg <= or_cond_reg_784_pp0_iter24_reg;
                or_cond_reg_784_pp0_iter26_reg <= or_cond_reg_784_pp0_iter25_reg;
                or_cond_reg_784_pp0_iter27_reg <= or_cond_reg_784_pp0_iter26_reg;
                or_cond_reg_784_pp0_iter28_reg <= or_cond_reg_784_pp0_iter27_reg;
                or_cond_reg_784_pp0_iter29_reg <= or_cond_reg_784_pp0_iter28_reg;
                or_cond_reg_784_pp0_iter2_reg <= or_cond_reg_784_pp0_iter1_reg;
                or_cond_reg_784_pp0_iter30_reg <= or_cond_reg_784_pp0_iter29_reg;
                or_cond_reg_784_pp0_iter31_reg <= or_cond_reg_784_pp0_iter30_reg;
                or_cond_reg_784_pp0_iter3_reg <= or_cond_reg_784_pp0_iter2_reg;
                or_cond_reg_784_pp0_iter4_reg <= or_cond_reg_784_pp0_iter3_reg;
                or_cond_reg_784_pp0_iter5_reg <= or_cond_reg_784_pp0_iter4_reg;
                or_cond_reg_784_pp0_iter6_reg <= or_cond_reg_784_pp0_iter5_reg;
                or_cond_reg_784_pp0_iter7_reg <= or_cond_reg_784_pp0_iter6_reg;
                or_cond_reg_784_pp0_iter8_reg <= or_cond_reg_784_pp0_iter7_reg;
                or_cond_reg_784_pp0_iter9_reg <= or_cond_reg_784_pp0_iter8_reg;
                tmp_47_reg_788_pp0_iter10_reg <= tmp_47_reg_788_pp0_iter9_reg;
                tmp_47_reg_788_pp0_iter11_reg <= tmp_47_reg_788_pp0_iter10_reg;
                tmp_47_reg_788_pp0_iter12_reg <= tmp_47_reg_788_pp0_iter11_reg;
                tmp_47_reg_788_pp0_iter13_reg <= tmp_47_reg_788_pp0_iter12_reg;
                tmp_47_reg_788_pp0_iter14_reg <= tmp_47_reg_788_pp0_iter13_reg;
                tmp_47_reg_788_pp0_iter15_reg <= tmp_47_reg_788_pp0_iter14_reg;
                tmp_47_reg_788_pp0_iter16_reg <= tmp_47_reg_788_pp0_iter15_reg;
                tmp_47_reg_788_pp0_iter17_reg <= tmp_47_reg_788_pp0_iter16_reg;
                tmp_47_reg_788_pp0_iter18_reg <= tmp_47_reg_788_pp0_iter17_reg;
                tmp_47_reg_788_pp0_iter19_reg <= tmp_47_reg_788_pp0_iter18_reg;
                tmp_47_reg_788_pp0_iter20_reg <= tmp_47_reg_788_pp0_iter19_reg;
                tmp_47_reg_788_pp0_iter21_reg <= tmp_47_reg_788_pp0_iter20_reg;
                tmp_47_reg_788_pp0_iter22_reg <= tmp_47_reg_788_pp0_iter21_reg;
                tmp_47_reg_788_pp0_iter23_reg <= tmp_47_reg_788_pp0_iter22_reg;
                tmp_47_reg_788_pp0_iter24_reg <= tmp_47_reg_788_pp0_iter23_reg;
                tmp_47_reg_788_pp0_iter25_reg <= tmp_47_reg_788_pp0_iter24_reg;
                tmp_47_reg_788_pp0_iter26_reg <= tmp_47_reg_788_pp0_iter25_reg;
                tmp_47_reg_788_pp0_iter27_reg <= tmp_47_reg_788_pp0_iter26_reg;
                tmp_47_reg_788_pp0_iter28_reg <= tmp_47_reg_788_pp0_iter27_reg;
                tmp_47_reg_788_pp0_iter29_reg <= tmp_47_reg_788_pp0_iter28_reg;
                tmp_47_reg_788_pp0_iter2_reg <= tmp_47_reg_788_pp0_iter1_reg;
                tmp_47_reg_788_pp0_iter30_reg <= tmp_47_reg_788_pp0_iter29_reg;
                tmp_47_reg_788_pp0_iter31_reg <= tmp_47_reg_788_pp0_iter30_reg;
                tmp_47_reg_788_pp0_iter3_reg <= tmp_47_reg_788_pp0_iter2_reg;
                tmp_47_reg_788_pp0_iter4_reg <= tmp_47_reg_788_pp0_iter3_reg;
                tmp_47_reg_788_pp0_iter5_reg <= tmp_47_reg_788_pp0_iter4_reg;
                tmp_47_reg_788_pp0_iter6_reg <= tmp_47_reg_788_pp0_iter5_reg;
                tmp_47_reg_788_pp0_iter7_reg <= tmp_47_reg_788_pp0_iter6_reg;
                tmp_47_reg_788_pp0_iter8_reg <= tmp_47_reg_788_pp0_iter7_reg;
                tmp_47_reg_788_pp0_iter9_reg <= tmp_47_reg_788_pp0_iter8_reg;
                tmp_x_1_load_1_reg_872_pp0_iter10_reg <= tmp_x_1_load_1_reg_872_pp0_iter9_reg;
                tmp_x_1_load_1_reg_872_pp0_iter11_reg <= tmp_x_1_load_1_reg_872_pp0_iter10_reg;
                tmp_x_1_load_1_reg_872_pp0_iter12_reg <= tmp_x_1_load_1_reg_872_pp0_iter11_reg;
                tmp_x_1_load_1_reg_872_pp0_iter13_reg <= tmp_x_1_load_1_reg_872_pp0_iter12_reg;
                tmp_x_1_load_1_reg_872_pp0_iter14_reg <= tmp_x_1_load_1_reg_872_pp0_iter13_reg;
                tmp_x_1_load_1_reg_872_pp0_iter15_reg <= tmp_x_1_load_1_reg_872_pp0_iter14_reg;
                tmp_x_1_load_1_reg_872_pp0_iter16_reg <= tmp_x_1_load_1_reg_872_pp0_iter15_reg;
                tmp_x_1_load_1_reg_872_pp0_iter17_reg <= tmp_x_1_load_1_reg_872_pp0_iter16_reg;
                tmp_x_1_load_1_reg_872_pp0_iter18_reg <= tmp_x_1_load_1_reg_872_pp0_iter17_reg;
                tmp_x_1_load_1_reg_872_pp0_iter19_reg <= tmp_x_1_load_1_reg_872_pp0_iter18_reg;
                tmp_x_1_load_1_reg_872_pp0_iter20_reg <= tmp_x_1_load_1_reg_872_pp0_iter19_reg;
                tmp_x_1_load_1_reg_872_pp0_iter2_reg <= tmp_x_1_load_1_reg_872;
                tmp_x_1_load_1_reg_872_pp0_iter3_reg <= tmp_x_1_load_1_reg_872_pp0_iter2_reg;
                tmp_x_1_load_1_reg_872_pp0_iter4_reg <= tmp_x_1_load_1_reg_872_pp0_iter3_reg;
                tmp_x_1_load_1_reg_872_pp0_iter5_reg <= tmp_x_1_load_1_reg_872_pp0_iter4_reg;
                tmp_x_1_load_1_reg_872_pp0_iter6_reg <= tmp_x_1_load_1_reg_872_pp0_iter5_reg;
                tmp_x_1_load_1_reg_872_pp0_iter7_reg <= tmp_x_1_load_1_reg_872_pp0_iter6_reg;
                tmp_x_1_load_1_reg_872_pp0_iter8_reg <= tmp_x_1_load_1_reg_872_pp0_iter7_reg;
                tmp_x_1_load_1_reg_872_pp0_iter9_reg <= tmp_x_1_load_1_reg_872_pp0_iter8_reg;
                tmp_y_1_load_1_reg_877_pp0_iter10_reg <= tmp_y_1_load_1_reg_877_pp0_iter9_reg;
                tmp_y_1_load_1_reg_877_pp0_iter11_reg <= tmp_y_1_load_1_reg_877_pp0_iter10_reg;
                tmp_y_1_load_1_reg_877_pp0_iter12_reg <= tmp_y_1_load_1_reg_877_pp0_iter11_reg;
                tmp_y_1_load_1_reg_877_pp0_iter13_reg <= tmp_y_1_load_1_reg_877_pp0_iter12_reg;
                tmp_y_1_load_1_reg_877_pp0_iter14_reg <= tmp_y_1_load_1_reg_877_pp0_iter13_reg;
                tmp_y_1_load_1_reg_877_pp0_iter15_reg <= tmp_y_1_load_1_reg_877_pp0_iter14_reg;
                tmp_y_1_load_1_reg_877_pp0_iter16_reg <= tmp_y_1_load_1_reg_877_pp0_iter15_reg;
                tmp_y_1_load_1_reg_877_pp0_iter17_reg <= tmp_y_1_load_1_reg_877_pp0_iter16_reg;
                tmp_y_1_load_1_reg_877_pp0_iter18_reg <= tmp_y_1_load_1_reg_877_pp0_iter17_reg;
                tmp_y_1_load_1_reg_877_pp0_iter19_reg <= tmp_y_1_load_1_reg_877_pp0_iter18_reg;
                tmp_y_1_load_1_reg_877_pp0_iter20_reg <= tmp_y_1_load_1_reg_877_pp0_iter19_reg;
                tmp_y_1_load_1_reg_877_pp0_iter2_reg <= tmp_y_1_load_1_reg_877;
                tmp_y_1_load_1_reg_877_pp0_iter3_reg <= tmp_y_1_load_1_reg_877_pp0_iter2_reg;
                tmp_y_1_load_1_reg_877_pp0_iter4_reg <= tmp_y_1_load_1_reg_877_pp0_iter3_reg;
                tmp_y_1_load_1_reg_877_pp0_iter5_reg <= tmp_y_1_load_1_reg_877_pp0_iter4_reg;
                tmp_y_1_load_1_reg_877_pp0_iter6_reg <= tmp_y_1_load_1_reg_877_pp0_iter5_reg;
                tmp_y_1_load_1_reg_877_pp0_iter7_reg <= tmp_y_1_load_1_reg_877_pp0_iter6_reg;
                tmp_y_1_load_1_reg_877_pp0_iter8_reg <= tmp_y_1_load_1_reg_877_pp0_iter7_reg;
                tmp_y_1_load_1_reg_877_pp0_iter9_reg <= tmp_y_1_load_1_reg_877_pp0_iter8_reg;
                tmp_z_1_load_1_reg_882_pp0_iter10_reg <= tmp_z_1_load_1_reg_882_pp0_iter9_reg;
                tmp_z_1_load_1_reg_882_pp0_iter11_reg <= tmp_z_1_load_1_reg_882_pp0_iter10_reg;
                tmp_z_1_load_1_reg_882_pp0_iter12_reg <= tmp_z_1_load_1_reg_882_pp0_iter11_reg;
                tmp_z_1_load_1_reg_882_pp0_iter13_reg <= tmp_z_1_load_1_reg_882_pp0_iter12_reg;
                tmp_z_1_load_1_reg_882_pp0_iter14_reg <= tmp_z_1_load_1_reg_882_pp0_iter13_reg;
                tmp_z_1_load_1_reg_882_pp0_iter15_reg <= tmp_z_1_load_1_reg_882_pp0_iter14_reg;
                tmp_z_1_load_1_reg_882_pp0_iter16_reg <= tmp_z_1_load_1_reg_882_pp0_iter15_reg;
                tmp_z_1_load_1_reg_882_pp0_iter17_reg <= tmp_z_1_load_1_reg_882_pp0_iter16_reg;
                tmp_z_1_load_1_reg_882_pp0_iter18_reg <= tmp_z_1_load_1_reg_882_pp0_iter17_reg;
                tmp_z_1_load_1_reg_882_pp0_iter19_reg <= tmp_z_1_load_1_reg_882_pp0_iter18_reg;
                tmp_z_1_load_1_reg_882_pp0_iter20_reg <= tmp_z_1_load_1_reg_882_pp0_iter19_reg;
                tmp_z_1_load_1_reg_882_pp0_iter2_reg <= tmp_z_1_load_1_reg_882;
                tmp_z_1_load_1_reg_882_pp0_iter3_reg <= tmp_z_1_load_1_reg_882_pp0_iter2_reg;
                tmp_z_1_load_1_reg_882_pp0_iter4_reg <= tmp_z_1_load_1_reg_882_pp0_iter3_reg;
                tmp_z_1_load_1_reg_882_pp0_iter5_reg <= tmp_z_1_load_1_reg_882_pp0_iter4_reg;
                tmp_z_1_load_1_reg_882_pp0_iter6_reg <= tmp_z_1_load_1_reg_882_pp0_iter5_reg;
                tmp_z_1_load_1_reg_882_pp0_iter7_reg <= tmp_z_1_load_1_reg_882_pp0_iter6_reg;
                tmp_z_1_load_1_reg_882_pp0_iter8_reg <= tmp_z_1_load_1_reg_882_pp0_iter7_reg;
                tmp_z_1_load_1_reg_882_pp0_iter9_reg <= tmp_z_1_load_1_reg_882_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_x_load_3_1_fu_82 <= buf_val_x_load_3_2_fu_94;
                buf_val_x_load_3_2_fu_94 <= buf_val_x_load_3_3_fu_106;
                buf_val_x_load_3_3_fu_106 <= buf_val_x_load_3_4_fu_118;
                buf_val_x_load_3_4_fu_118 <= tmp_x_1_fu_130;
                buf_val_x_load_6_fu_70 <= buf_val_x_load_3_1_fu_82;
                buf_val_y_load_3_1_fu_86 <= buf_val_y_load_3_2_fu_98;
                buf_val_y_load_3_2_fu_98 <= buf_val_y_load_3_3_fu_110;
                buf_val_y_load_3_3_fu_110 <= buf_val_y_load_3_4_fu_122;
                buf_val_y_load_3_4_fu_122 <= tmp_y_1_fu_134;
                buf_val_y_load_6_fu_74 <= buf_val_y_load_3_1_fu_86;
                buf_val_z_load_3_1_fu_90 <= buf_val_z_load_3_2_fu_102;
                buf_val_z_load_3_2_fu_102 <= buf_val_z_load_3_3_fu_114;
                buf_val_z_load_3_3_fu_114 <= buf_val_z_load_3_4_fu_126;
                buf_val_z_load_3_4_fu_126 <= tmp_z_1_fu_138;
                buf_val_z_load_6_fu_78 <= buf_val_z_load_3_1_fu_90;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond_reg_784 <= or_cond_fu_486_p2;
                tmp_reg_780 <= c_mid2_fu_458_p3(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_486_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_47_reg_788 <= tmp_47_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_784_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_78_reg_887 <= grp_fu_332_p2;
                tmp_79_reg_892 <= grp_fu_337_p2;
                tmp_80_reg_897 <= grp_fu_342_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_x_1_fu_130 <= ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4;
                tmp_y_1_fu_134 <= ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4;
                tmp_z_1_fu_138 <= ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_x_1_load_1_reg_872 <= tmp_x_1_fu_130;
                tmp_y_1_load_1_reg_877 <= tmp_y_1_fu_134;
                tmp_z_1_load_1_reg_882 <= tmp_z_1_fu_138;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter31)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and not(((ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state35 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(y_filtered_x_empty_n, y_filtered_y_empty_n, y_filtered_z_empty_n, filtered_gradient_x_full_n, filtered_gradient_y_full_n, filtered_gradient_z_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op107_read_state3, ap_predicate_op271_write_state34)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_z_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_y_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_x_full_n = ap_const_logic_0)) or ((filtered_gradient_z_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((y_filtered_z_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(y_filtered_x_empty_n, y_filtered_y_empty_n, y_filtered_z_empty_n, filtered_gradient_x_full_n, filtered_gradient_y_full_n, filtered_gradient_z_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op107_read_state3, ap_predicate_op271_write_state34)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_z_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_y_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_x_full_n = ap_const_logic_0)) or ((filtered_gradient_z_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((y_filtered_z_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(y_filtered_x_empty_n, y_filtered_y_empty_n, y_filtered_z_empty_n, filtered_gradient_x_full_n, filtered_gradient_y_full_n, filtered_gradient_z_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op107_read_state3, ap_predicate_op271_write_state34)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_z_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_y_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_x_full_n = ap_const_logic_0)) or ((filtered_gradient_z_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((y_filtered_z_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state34_pp0_stage0_iter32_assign_proc : process(filtered_gradient_x_full_n, filtered_gradient_y_full_n, filtered_gradient_z_full_n, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op271_write_state34)
    begin
                ap_block_state34_pp0_stage0_iter32 <= (((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_z_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_y_full_n = ap_const_logic_0)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (filtered_gradient_x_full_n = ap_const_logic_0)) or ((filtered_gradient_z_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)) or ((filtered_gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(y_filtered_x_empty_n, y_filtered_y_empty_n, y_filtered_z_empty_n, ap_predicate_op107_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((y_filtered_z_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_empty_n = ap_const_logic_0) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_293_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_293 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_962_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_962 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter1_state3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31)
    begin
        if (((ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4_assign_proc : process(y_filtered_x_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_771, tmp_reg_780, ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232)
    begin
        if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4 <= y_filtered_x_dout;
        else 
            ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4 <= ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232;
        end if; 
    end process;


    ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4_assign_proc : process(y_filtered_y_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_771, tmp_reg_780, ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219)
    begin
        if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4 <= y_filtered_y_dout;
        else 
            ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4 <= ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219;
        end if; 
    end process;


    ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4_assign_proc : process(y_filtered_z_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_771, tmp_reg_780, ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206)
    begin
        if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4 <= y_filtered_z_dout;
        else 
            ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4 <= ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_buf_val_x_load_3_6_reg_232 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_y_load_3_6_reg_219 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_z_load_3_6_reg_206 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op107_read_state3_assign_proc : process(exitcond_flatten_reg_771, tmp_reg_780)
    begin
                ap_predicate_op107_read_state3 <= ((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0));
    end process;


    ap_predicate_op271_write_state34_assign_proc : process(or_cond_reg_784_pp0_iter31_reg, tmp_47_reg_788_pp0_iter31_reg)
    begin
                ap_predicate_op271_write_state34 <= ((tmp_47_reg_788_pp0_iter31_reg = ap_const_lv1_1) and (or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    c_3_fu_498_p2 <= std_logic_vector(unsigned(c_mid2_fu_458_p3) + unsigned(ap_const_lv11_1));
    c_mid2_fu_458_p3 <= 
        ap_const_lv11_0 when (exitcond_fu_452_p2(0) = '1') else 
        c_reg_195;
    exitcond_flatten_fu_440_p2 <= "1" when (indvar_flatten_reg_184 = ap_const_lv19_6D51C) else "0";
    exitcond_fu_452_p2 <= "1" when (c_reg_195 = ap_const_lv11_403) else "0";

    filtered_gradient_x_blk_n_assign_proc : process(filtered_gradient_x_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, tmp_47_reg_788_pp0_iter31_reg)
    begin
        if ((((tmp_47_reg_788_pp0_iter31_reg = ap_const_lv1_1) and (or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1)))) then 
            filtered_gradient_x_blk_n <= filtered_gradient_x_full_n;
        else 
            filtered_gradient_x_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_x_din_assign_proc : process(ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op271_write_state34, acc_x_6_reg_1082, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1))) then
            if ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1)) then 
                filtered_gradient_x_din <= acc_x_6_reg_1082;
            elsif ((ap_predicate_op271_write_state34 = ap_const_boolean_1)) then 
                filtered_gradient_x_din <= ap_const_lv32_0;
            else 
                filtered_gradient_x_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_x_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_x_write_assign_proc : process(ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op271_write_state34, ap_block_pp0_stage0_11001)
    begin
        if ((((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)))) then 
            filtered_gradient_x_write <= ap_const_logic_1;
        else 
            filtered_gradient_x_write <= ap_const_logic_0;
        end if; 
    end process;


    filtered_gradient_y_blk_n_assign_proc : process(filtered_gradient_y_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, tmp_47_reg_788_pp0_iter31_reg)
    begin
        if ((((tmp_47_reg_788_pp0_iter31_reg = ap_const_lv1_1) and (or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1)))) then 
            filtered_gradient_y_blk_n <= filtered_gradient_y_full_n;
        else 
            filtered_gradient_y_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_y_din_assign_proc : process(ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op271_write_state34, acc_y_6_reg_1087, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1))) then
            if ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1)) then 
                filtered_gradient_y_din <= acc_y_6_reg_1087;
            elsif ((ap_predicate_op271_write_state34 = ap_const_boolean_1)) then 
                filtered_gradient_y_din <= ap_const_lv32_0;
            else 
                filtered_gradient_y_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_y_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_y_write_assign_proc : process(ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op271_write_state34, ap_block_pp0_stage0_11001)
    begin
        if ((((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)))) then 
            filtered_gradient_y_write <= ap_const_logic_1;
        else 
            filtered_gradient_y_write <= ap_const_logic_0;
        end if; 
    end process;


    filtered_gradient_z_blk_n_assign_proc : process(filtered_gradient_z_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, tmp_47_reg_788_pp0_iter31_reg)
    begin
        if ((((tmp_47_reg_788_pp0_iter31_reg = ap_const_lv1_1) and (or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1)) or ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1)))) then 
            filtered_gradient_z_blk_n <= filtered_gradient_z_full_n;
        else 
            filtered_gradient_z_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_z_din_assign_proc : process(ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op271_write_state34, acc_z_6_reg_1092, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1))) then
            if ((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1)) then 
                filtered_gradient_z_din <= acc_z_6_reg_1092;
            elsif ((ap_predicate_op271_write_state34 = ap_const_boolean_1)) then 
                filtered_gradient_z_din <= ap_const_lv32_0;
            else 
                filtered_gradient_z_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_z_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_z_write_assign_proc : process(ap_enable_reg_pp0_iter32, or_cond_reg_784_pp0_iter31_reg, ap_predicate_op271_write_state34, ap_block_pp0_stage0_11001)
    begin
        if ((((or_cond_reg_784_pp0_iter31_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter32 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op271_write_state34 = ap_const_boolean_1)))) then 
            filtered_gradient_z_write <= ap_const_logic_1;
        else 
            filtered_gradient_z_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_245_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_245_ce <= ap_const_logic_1;
        else 
            grp_fu_245_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_250_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_250_ce <= ap_const_logic_1;
        else 
            grp_fu_250_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_255_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_255_ce <= ap_const_logic_1;
        else 
            grp_fu_255_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_260_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_260_ce <= ap_const_logic_1;
        else 
            grp_fu_260_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_264_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_264_ce <= ap_const_logic_1;
        else 
            grp_fu_264_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_268_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_268_ce <= ap_const_logic_1;
        else 
            grp_fu_268_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_272_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_272_ce <= ap_const_logic_1;
        else 
            grp_fu_272_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_276_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_276_ce <= ap_const_logic_1;
        else 
            grp_fu_276_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_280_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_280_ce <= ap_const_logic_1;
        else 
            grp_fu_280_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_284_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_284_ce <= ap_const_logic_1;
        else 
            grp_fu_284_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_288_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_288_ce <= ap_const_logic_1;
        else 
            grp_fu_288_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_292_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_292_ce <= ap_const_logic_1;
        else 
            grp_fu_292_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_296_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_296_ce <= ap_const_logic_1;
        else 
            grp_fu_296_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_300_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_300_ce <= ap_const_logic_1;
        else 
            grp_fu_300_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_304_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_304_ce <= ap_const_logic_1;
        else 
            grp_fu_304_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_308_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_308_ce <= ap_const_logic_1;
        else 
            grp_fu_308_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_312_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_312_ce <= ap_const_logic_1;
        else 
            grp_fu_312_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_316_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_316_ce <= ap_const_logic_1;
        else 
            grp_fu_316_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_320_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_320_ce <= ap_const_logic_1;
        else 
            grp_fu_320_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_324_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_324_ce <= ap_const_logic_1;
        else 
            grp_fu_324_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_328_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_328_ce <= ap_const_logic_1;
        else 
            grp_fu_328_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_332_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_332_ce <= ap_const_logic_1;
        else 
            grp_fu_332_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_337_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_337_ce <= ap_const_logic_1;
        else 
            grp_fu_337_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_342_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_342_ce <= ap_const_logic_1;
        else 
            grp_fu_342_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_347_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_347_ce <= ap_const_logic_1;
        else 
            grp_fu_347_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_352_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_352_ce <= ap_const_logic_1;
        else 
            grp_fu_352_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_357_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_357_ce <= ap_const_logic_1;
        else 
            grp_fu_357_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_362_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_362_ce <= ap_const_logic_1;
        else 
            grp_fu_362_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_367_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_367_ce <= ap_const_logic_1;
        else 
            grp_fu_367_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_372_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_372_ce <= ap_const_logic_1;
        else 
            grp_fu_372_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_377_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_377_ce <= ap_const_logic_1;
        else 
            grp_fu_377_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_382_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_382_ce <= ap_const_logic_1;
        else 
            grp_fu_382_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_387_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_387_ce <= ap_const_logic_1;
        else 
            grp_fu_387_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_392_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_392_ce <= ap_const_logic_1;
        else 
            grp_fu_392_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_397_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_397_ce <= ap_const_logic_1;
        else 
            grp_fu_397_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_402_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_402_ce <= ap_const_logic_1;
        else 
            grp_fu_402_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_407_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_407_ce <= ap_const_logic_1;
        else 
            grp_fu_407_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_412_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_412_ce <= ap_const_logic_1;
        else 
            grp_fu_412_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_417_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_417_ce <= ap_const_logic_1;
        else 
            grp_fu_417_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_422_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_422_ce <= ap_const_logic_1;
        else 
            grp_fu_422_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_428_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_428_ce <= ap_const_logic_1;
        else 
            grp_fu_428_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_434_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_434_ce <= ap_const_logic_1;
        else 
            grp_fu_434_ce <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_446_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_184) + unsigned(ap_const_lv19_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_fu_486_p2 <= (tmp_44_fu_480_p2 and rev_fu_474_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev_fu_474_p2 <= (tmp_fu_466_p3 xor ap_const_lv1_1);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_44_fu_480_p2 <= "1" when (unsigned(c_mid2_fu_458_p3) > unsigned(ap_const_lv11_5)) else "0";
    tmp_47_fu_492_p2 <= "1" when (unsigned(c_mid2_fu_458_p3) > unsigned(ap_const_lv11_2)) else "0";
    tmp_fu_466_p3 <= c_mid2_fu_458_p3(10 downto 10);

    y_filtered_x_blk_n_assign_proc : process(y_filtered_x_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_771, tmp_reg_780)
    begin
        if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_filtered_x_blk_n <= y_filtered_x_empty_n;
        else 
            y_filtered_x_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_x_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op107_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op107_read_state3 = ap_const_boolean_1))) then 
            y_filtered_x_read <= ap_const_logic_1;
        else 
            y_filtered_x_read <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_y_blk_n_assign_proc : process(y_filtered_y_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_771, tmp_reg_780)
    begin
        if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_filtered_y_blk_n <= y_filtered_y_empty_n;
        else 
            y_filtered_y_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_y_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op107_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op107_read_state3 = ap_const_boolean_1))) then 
            y_filtered_y_read <= ap_const_logic_1;
        else 
            y_filtered_y_read <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_z_blk_n_assign_proc : process(y_filtered_z_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_771, tmp_reg_780)
    begin
        if (((tmp_reg_780 = ap_const_lv1_0) and (exitcond_flatten_reg_771 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_filtered_z_blk_n <= y_filtered_z_empty_n;
        else 
            y_filtered_z_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_z_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op107_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op107_read_state3 = ap_const_boolean_1))) then 
            y_filtered_z_read <= ap_const_logic_1;
        else 
            y_filtered_z_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
