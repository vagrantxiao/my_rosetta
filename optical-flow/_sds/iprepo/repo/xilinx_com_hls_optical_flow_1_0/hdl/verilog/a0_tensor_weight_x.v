// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_tensor_weight_x (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        tensor_y_val_dout,
        tensor_y_val_empty_n,
        tensor_y_val_read,
        tensor_val_din,
        tensor_val_full_n,
        tensor_val_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state19 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [191:0] tensor_y_val_dout;
input   tensor_y_val_empty_n;
output   tensor_y_val_read;
output  [191:0] tensor_val_din;
input   tensor_val_full_n;
output   tensor_val_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg tensor_y_val_read;
reg tensor_val_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    tensor_y_val_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_844;
reg   [0:0] tmp_reg_853;
reg    tensor_val_blk_n;
reg    ap_enable_reg_pp0_iter16;
reg   [0:0] tmp_4_reg_867;
reg   [0:0] tmp_4_reg_867_pp0_iter15_reg;
reg   [18:0] indvar_flatten_reg_143;
reg   [10:0] c_reg_154;
reg   [31:0] buf_val_val_load_22_2_reg_165;
reg   [31:0] buf_val_val_load_22_2_reg_165_pp0_iter2_reg;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op69_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
reg    ap_block_state18_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] buf_val_val_load_22_2_reg_165_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_22_2_reg_165_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_22_2_reg_165_pp0_iter5_reg;
reg   [31:0] buf_val_val_load_22_2_reg_165_pp0_iter6_reg;
reg   [31:0] buf_val_val_load_22_2_reg_165_pp0_iter7_reg;
reg   [31:0] buf_val_val_load_22_2_reg_165_pp0_iter8_reg;
reg   [31:0] buf_val_val_load_21_2_reg_177;
reg   [31:0] buf_val_val_load_21_2_reg_177_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_21_2_reg_177_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_21_2_reg_177_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_21_2_reg_177_pp0_iter5_reg;
reg   [31:0] buf_val_val_load_21_2_reg_177_pp0_iter6_reg;
reg   [31:0] buf_val_val_load_21_2_reg_177_pp0_iter7_reg;
reg   [31:0] buf_val_val_load_21_2_reg_177_pp0_iter8_reg;
reg   [31:0] buf_val_val_load_20_2_reg_189;
reg   [31:0] buf_val_val_load_20_2_reg_189_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_20_2_reg_189_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_20_2_reg_189_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_20_2_reg_189_pp0_iter5_reg;
reg   [31:0] buf_val_val_load_20_2_reg_189_pp0_iter6_reg;
reg   [31:0] buf_val_val_load_20_2_reg_189_pp0_iter7_reg;
reg   [31:0] buf_val_val_load_20_2_reg_189_pp0_iter8_reg;
reg   [31:0] buf_val_val_load_19_2_reg_201;
reg   [31:0] buf_val_val_load_19_2_reg_201_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_19_2_reg_201_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_19_2_reg_201_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_19_2_reg_201_pp0_iter5_reg;
reg   [31:0] buf_val_val_load_19_2_reg_201_pp0_iter6_reg;
reg   [31:0] buf_val_val_load_19_2_reg_201_pp0_iter7_reg;
reg   [31:0] buf_val_val_load_19_2_reg_201_pp0_iter8_reg;
reg   [31:0] buf_val_val_load_18_2_reg_213;
reg   [31:0] buf_val_val_load_18_2_reg_213_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_18_2_reg_213_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_18_2_reg_213_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_18_2_reg_213_pp0_iter5_reg;
reg   [31:0] buf_val_val_load_18_2_reg_213_pp0_iter6_reg;
reg   [31:0] buf_val_val_load_18_2_reg_213_pp0_iter7_reg;
reg   [31:0] buf_val_val_load_18_2_reg_213_pp0_iter8_reg;
reg   [31:0] buf_val_val_load_17_2_reg_225;
reg   [31:0] buf_val_val_load_17_2_reg_225_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_17_2_reg_225_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_17_2_reg_225_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_17_2_reg_225_pp0_iter5_reg;
reg   [31:0] buf_val_val_load_17_2_reg_225_pp0_iter6_reg;
reg   [31:0] buf_val_val_load_17_2_reg_225_pp0_iter7_reg;
reg   [31:0] buf_val_val_load_17_2_reg_225_pp0_iter8_reg;
wire   [0:0] exitcond_flatten_fu_411_p2;
wire   [18:0] indvar_flatten_next_fu_417_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_fu_437_p3;
wire   [0:0] or_cond_fu_467_p2;
reg   [0:0] or_cond_reg_857;
reg   [0:0] or_cond_reg_857_pp0_iter1_reg;
reg   [0:0] or_cond_reg_857_pp0_iter2_reg;
reg   [0:0] or_cond_reg_857_pp0_iter3_reg;
reg   [0:0] or_cond_reg_857_pp0_iter4_reg;
reg   [0:0] or_cond_reg_857_pp0_iter5_reg;
reg   [0:0] or_cond_reg_857_pp0_iter6_reg;
reg   [0:0] or_cond_reg_857_pp0_iter7_reg;
reg   [0:0] or_cond_reg_857_pp0_iter8_reg;
reg   [0:0] or_cond_reg_857_pp0_iter9_reg;
reg   [0:0] or_cond_reg_857_pp0_iter10_reg;
reg   [0:0] or_cond_reg_857_pp0_iter11_reg;
reg   [0:0] or_cond_reg_857_pp0_iter12_reg;
reg   [0:0] or_cond_reg_857_pp0_iter13_reg;
reg   [0:0] or_cond_reg_857_pp0_iter14_reg;
wire   [0:0] tmp_4_fu_473_p2;
reg   [0:0] tmp_4_reg_867_pp0_iter1_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter2_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter3_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter4_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter5_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter6_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter7_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter8_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter9_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter10_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter11_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter12_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter13_reg;
reg   [0:0] tmp_4_reg_867_pp0_iter14_reg;
wire   [10:0] c_1_fu_479_p2;
reg   [31:0] buf_val_val_load_18_reg_906;
reg   [31:0] buf_val_val_load_18_reg_906_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_18_reg_906_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_18_reg_906_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_19_reg_911;
reg   [31:0] buf_val_val_load_19_reg_911_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_19_reg_911_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_19_reg_911_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_20_reg_916;
reg   [31:0] buf_val_val_load_20_reg_916_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_20_reg_916_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_20_reg_916_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_21_reg_921;
reg   [31:0] buf_val_val_load_21_reg_921_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_21_reg_921_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_21_reg_921_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_22_reg_926;
reg   [31:0] buf_val_val_load_22_reg_926_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_22_reg_926_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_22_reg_926_pp0_iter4_reg;
reg   [31:0] buf_val_val_load_23_reg_931;
reg   [31:0] buf_val_val_load_23_reg_931_pp0_iter2_reg;
reg   [31:0] buf_val_val_load_23_reg_931_pp0_iter3_reg;
reg   [31:0] buf_val_val_load_23_reg_931_pp0_iter4_reg;
wire   [31:0] grp_fu_315_p2;
reg   [31:0] tmp_38_reg_936;
wire   [31:0] grp_fu_320_p2;
reg   [31:0] tmp_38_0_1_reg_941;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] tmp_38_0_2_reg_946;
wire   [31:0] grp_fu_330_p2;
reg   [31:0] tmp_38_0_3_reg_951;
wire   [31:0] grp_fu_335_p2;
reg   [31:0] tmp_38_0_4_reg_956;
wire   [31:0] grp_fu_340_p2;
reg   [31:0] tmp_38_0_5_reg_961;
wire   [31:0] grp_fu_237_p2;
reg   [31:0] tmp_39_reg_966;
wire   [31:0] grp_fu_242_p2;
reg   [31:0] tmp_39_0_1_reg_971;
wire   [31:0] grp_fu_247_p2;
reg   [31:0] tmp_39_0_2_reg_976;
wire   [31:0] grp_fu_252_p2;
reg   [31:0] tmp_39_0_3_reg_981;
wire   [31:0] grp_fu_257_p2;
reg   [31:0] tmp_39_0_4_reg_986;
wire   [31:0] grp_fu_262_p2;
reg   [31:0] tmp_39_0_5_reg_991;
wire   [31:0] grp_fu_345_p2;
reg   [31:0] tmp_38_1_reg_996;
wire   [31:0] grp_fu_350_p2;
reg   [31:0] tmp_38_1_1_reg_1001;
wire   [31:0] grp_fu_355_p2;
reg   [31:0] tmp_38_1_2_reg_1006;
wire   [31:0] grp_fu_360_p2;
reg   [31:0] tmp_38_1_3_reg_1011;
wire   [31:0] grp_fu_365_p2;
reg   [31:0] tmp_38_1_4_reg_1016;
wire   [31:0] grp_fu_370_p2;
reg   [31:0] tmp_38_1_5_reg_1021;
wire   [31:0] grp_fu_267_p2;
reg   [31:0] tmp_39_1_reg_1026;
wire   [31:0] grp_fu_271_p2;
reg   [31:0] tmp_39_1_1_reg_1031;
wire   [31:0] grp_fu_275_p2;
reg   [31:0] tmp_39_1_2_reg_1036;
wire   [31:0] grp_fu_279_p2;
reg   [31:0] tmp_39_1_3_reg_1041;
wire   [31:0] grp_fu_283_p2;
reg   [31:0] tmp_39_1_4_reg_1046;
wire   [31:0] grp_fu_287_p2;
reg   [31:0] tmp_39_1_5_reg_1051;
wire   [31:0] grp_fu_375_p2;
reg   [31:0] tmp_38_2_reg_1056;
wire   [31:0] grp_fu_381_p2;
reg   [31:0] tmp_38_2_1_reg_1061;
wire   [31:0] grp_fu_387_p2;
reg   [31:0] tmp_38_2_2_reg_1066;
wire   [31:0] grp_fu_393_p2;
reg   [31:0] tmp_38_2_3_reg_1071;
wire   [31:0] grp_fu_399_p2;
reg   [31:0] tmp_38_2_4_reg_1076;
wire   [31:0] grp_fu_405_p2;
reg   [31:0] tmp_38_2_5_reg_1081;
wire   [31:0] tmp_61_fu_693_p3;
reg   [31:0] tmp_61_reg_1086;
wire   [31:0] tmp_62_fu_704_p3;
reg   [31:0] tmp_62_reg_1091;
wire   [31:0] tmp_63_fu_715_p3;
reg   [31:0] tmp_63_reg_1096;
wire   [31:0] tmp_64_fu_726_p3;
reg   [31:0] tmp_64_reg_1101;
wire   [31:0] tmp_65_fu_737_p3;
reg   [31:0] tmp_65_reg_1106;
wire   [31:0] tmp_66_fu_748_p3;
reg   [31:0] tmp_66_reg_1111;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg   [31:0] ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4;
wire   [31:0] tmp_60_fu_636_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_val_load_22_2_reg_165;
reg   [31:0] ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4;
wire   [31:0] tmp_58_fu_621_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_val_load_21_2_reg_177;
reg   [31:0] ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4;
wire   [31:0] tmp_56_fu_606_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_val_load_20_2_reg_189;
reg   [31:0] ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4;
wire   [31:0] tmp_54_fu_591_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_val_load_19_2_reg_201;
reg   [31:0] ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4;
wire   [31:0] tmp_52_fu_576_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_val_load_18_2_reg_213;
reg   [31:0] ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4;
wire   [31:0] tmp_50_fu_561_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_val_load_17_2_reg_225;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] buf_val_val_load_7_fu_82;
reg   [31:0] buf_val_val_load_6_fu_86;
reg   [31:0] buf_val_val_load_5_fu_90;
reg   [31:0] buf_val_val_load_4_fu_94;
reg   [31:0] buf_val_val_load_3_fu_98;
reg   [31:0] buf_val_val_load_2_fu_102;
reg   [31:0] buf_val_val_load_17_1_fu_106;
reg   [31:0] buf_val_val_load_18_1_fu_110;
reg   [31:0] buf_val_val_load_19_1_fu_114;
reg   [31:0] buf_val_val_load_20_1_fu_118;
reg   [31:0] buf_val_val_load_21_1_fu_122;
reg   [31:0] buf_val_val_load_22_1_fu_126;
wire   [0:0] exitcond_fu_423_p2;
wire   [10:0] c_mid2_fu_429_p3;
wire   [9:0] tmp_75_fu_451_p4;
wire   [0:0] icmp_fu_461_p2;
wire   [0:0] rev_fu_445_p2;
wire   [31:0] tmp_74_fu_557_p1;
wire   [31:0] tmp_51_fu_566_p4;
wire   [31:0] tmp_53_fu_581_p4;
wire   [31:0] tmp_55_fu_596_p4;
wire   [31:0] tmp_57_fu_611_p4;
wire   [31:0] tmp_59_fu_626_p4;
wire   [31:0] grp_fu_291_p2;
wire   [31:0] tmp_68_fu_689_p1;
wire   [31:0] grp_fu_295_p2;
wire   [31:0] tmp_69_fu_700_p1;
wire   [31:0] grp_fu_299_p2;
wire   [31:0] tmp_70_fu_711_p1;
wire   [31:0] grp_fu_303_p2;
wire   [31:0] tmp_71_fu_722_p1;
wire   [31:0] grp_fu_307_p2;
wire   [31:0] tmp_72_fu_733_p1;
wire   [31:0] grp_fu_311_p2;
wire   [31:0] tmp_73_fu_744_p1;
reg    grp_fu_237_ce;
reg    grp_fu_242_ce;
reg    grp_fu_247_ce;
reg    grp_fu_252_ce;
reg    grp_fu_257_ce;
reg    grp_fu_262_ce;
reg    grp_fu_267_ce;
reg    grp_fu_271_ce;
reg    grp_fu_275_ce;
reg    grp_fu_279_ce;
reg    grp_fu_283_ce;
reg    grp_fu_287_ce;
reg    grp_fu_291_ce;
reg    grp_fu_295_ce;
reg    grp_fu_299_ce;
reg    grp_fu_303_ce;
reg    grp_fu_307_ce;
reg    grp_fu_311_ce;
reg    grp_fu_315_ce;
reg    grp_fu_320_ce;
reg    grp_fu_325_ce;
reg    grp_fu_330_ce;
reg    grp_fu_335_ce;
reg    grp_fu_340_ce;
reg    grp_fu_345_ce;
reg    grp_fu_350_ce;
reg    grp_fu_355_ce;
reg    grp_fu_360_ce;
reg    grp_fu_365_ce;
reg    grp_fu_370_ce;
reg    grp_fu_375_ce;
reg    grp_fu_381_ce;
reg    grp_fu_387_ce;
reg    grp_fu_393_ce;
reg    grp_fu_399_ce;
reg    grp_fu_405_ce;
wire    ap_CS_fsm_state19;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_198;
reg    ap_condition_569;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
end

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U203(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_38_reg_936),
    .din1(32'd0),
    .ce(grp_fu_237_ce),
    .dout(grp_fu_237_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U204(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_38_0_1_reg_941),
    .din1(32'd0),
    .ce(grp_fu_242_ce),
    .dout(grp_fu_242_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U205(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_38_0_2_reg_946),
    .din1(32'd0),
    .ce(grp_fu_247_ce),
    .dout(grp_fu_247_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U206(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_38_0_3_reg_951),
    .din1(32'd0),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U207(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_38_0_4_reg_956),
    .din1(32'd0),
    .ce(grp_fu_257_ce),
    .dout(grp_fu_257_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U208(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_38_0_5_reg_961),
    .din1(32'd0),
    .ce(grp_fu_262_ce),
    .dout(grp_fu_262_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U209(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_reg_966),
    .din1(tmp_38_1_reg_996),
    .ce(grp_fu_267_ce),
    .dout(grp_fu_267_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U210(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_0_1_reg_971),
    .din1(tmp_38_1_1_reg_1001),
    .ce(grp_fu_271_ce),
    .dout(grp_fu_271_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U211(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_0_2_reg_976),
    .din1(tmp_38_1_2_reg_1006),
    .ce(grp_fu_275_ce),
    .dout(grp_fu_275_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U212(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_0_3_reg_981),
    .din1(tmp_38_1_3_reg_1011),
    .ce(grp_fu_279_ce),
    .dout(grp_fu_279_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U213(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_0_4_reg_986),
    .din1(tmp_38_1_4_reg_1016),
    .ce(grp_fu_283_ce),
    .dout(grp_fu_283_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U214(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_0_5_reg_991),
    .din1(tmp_38_1_5_reg_1021),
    .ce(grp_fu_287_ce),
    .dout(grp_fu_287_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U215(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_1_reg_1026),
    .din1(tmp_38_2_reg_1056),
    .ce(grp_fu_291_ce),
    .dout(grp_fu_291_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U216(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_1_1_reg_1031),
    .din1(tmp_38_2_1_reg_1061),
    .ce(grp_fu_295_ce),
    .dout(grp_fu_295_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U217(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_1_2_reg_1036),
    .din1(tmp_38_2_2_reg_1066),
    .ce(grp_fu_299_ce),
    .dout(grp_fu_299_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U218(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_1_3_reg_1041),
    .din1(tmp_38_2_3_reg_1071),
    .ce(grp_fu_303_ce),
    .dout(grp_fu_303_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U219(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_1_4_reg_1046),
    .din1(tmp_38_2_4_reg_1076),
    .ce(grp_fu_307_ce),
    .dout(grp_fu_307_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U220(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_39_1_5_reg_1051),
    .din1(tmp_38_2_5_reg_1081),
    .ce(grp_fu_311_ce),
    .dout(grp_fu_311_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U221(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_7_fu_82),
    .din1(32'd1051069094),
    .ce(grp_fu_315_ce),
    .dout(grp_fu_315_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U222(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_6_fu_86),
    .din1(32'd1051069094),
    .ce(grp_fu_320_ce),
    .dout(grp_fu_320_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U223(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_5_fu_90),
    .din1(32'd1051069094),
    .ce(grp_fu_325_ce),
    .dout(grp_fu_325_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U224(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_4_fu_94),
    .din1(32'd1051069094),
    .ce(grp_fu_330_ce),
    .dout(grp_fu_330_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U225(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_3_fu_98),
    .din1(32'd1051069094),
    .ce(grp_fu_335_ce),
    .dout(grp_fu_335_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U226(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_2_fu_102),
    .din1(32'd1051069094),
    .ce(grp_fu_340_ce),
    .dout(grp_fu_340_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U227(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_18_reg_906_pp0_iter4_reg),
    .din1(32'd1051975064),
    .ce(grp_fu_345_ce),
    .dout(grp_fu_345_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U228(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_19_reg_911_pp0_iter4_reg),
    .din1(32'd1051975064),
    .ce(grp_fu_350_ce),
    .dout(grp_fu_350_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U229(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_20_reg_916_pp0_iter4_reg),
    .din1(32'd1051975064),
    .ce(grp_fu_355_ce),
    .dout(grp_fu_355_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U230(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_21_reg_921_pp0_iter4_reg),
    .din1(32'd1051975064),
    .ce(grp_fu_360_ce),
    .dout(grp_fu_360_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U231(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_22_reg_926_pp0_iter4_reg),
    .din1(32'd1051975064),
    .ce(grp_fu_365_ce),
    .dout(grp_fu_365_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U232(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_23_reg_931_pp0_iter4_reg),
    .din1(32'd1051975064),
    .ce(grp_fu_370_ce),
    .dout(grp_fu_370_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U233(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_17_2_reg_225_pp0_iter8_reg),
    .din1(32'd1051069094),
    .ce(grp_fu_375_ce),
    .dout(grp_fu_375_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U234(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_18_2_reg_213_pp0_iter8_reg),
    .din1(32'd1051069094),
    .ce(grp_fu_381_ce),
    .dout(grp_fu_381_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U235(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_19_2_reg_201_pp0_iter8_reg),
    .din1(32'd1051069094),
    .ce(grp_fu_387_ce),
    .dout(grp_fu_387_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U236(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_20_2_reg_189_pp0_iter8_reg),
    .din1(32'd1051069094),
    .ce(grp_fu_393_ce),
    .dout(grp_fu_393_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U237(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_21_2_reg_177_pp0_iter8_reg),
    .din1(32'd1051069094),
    .ce(grp_fu_399_ce),
    .dout(grp_fu_399_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U238(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_val_load_22_2_reg_165_pp0_iter8_reg),
    .din1(32'd1051069094),
    .ce(grp_fu_405_ce),
    .dout(grp_fu_405_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_411_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter16 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_198)) begin
        if (((exitcond_flatten_fu_411_p2 == 1'd0) & (tmp_fu_437_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225 <= ap_phi_reg_pp0_iter0_buf_val_val_load_17_2_reg_225;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_198)) begin
        if (((exitcond_flatten_fu_411_p2 == 1'd0) & (tmp_fu_437_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213 <= ap_phi_reg_pp0_iter0_buf_val_val_load_18_2_reg_213;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_198)) begin
        if (((exitcond_flatten_fu_411_p2 == 1'd0) & (tmp_fu_437_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201 <= ap_phi_reg_pp0_iter0_buf_val_val_load_19_2_reg_201;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_198)) begin
        if (((exitcond_flatten_fu_411_p2 == 1'd0) & (tmp_fu_437_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189 <= ap_phi_reg_pp0_iter0_buf_val_val_load_20_2_reg_189;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_198)) begin
        if (((exitcond_flatten_fu_411_p2 == 1'd0) & (tmp_fu_437_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177 <= ap_phi_reg_pp0_iter0_buf_val_val_load_21_2_reg_177;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_198)) begin
        if (((exitcond_flatten_fu_411_p2 == 1'd0) & (tmp_fu_437_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165 <= ap_phi_reg_pp0_iter0_buf_val_val_load_22_2_reg_165;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_569)) begin
        if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0))) begin
            buf_val_val_load_17_2_reg_225 <= tmp_50_fu_561_p1;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_val_load_17_2_reg_225 <= ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_569)) begin
        if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0))) begin
            buf_val_val_load_18_2_reg_213 <= tmp_52_fu_576_p1;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_val_load_18_2_reg_213 <= ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_569)) begin
        if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0))) begin
            buf_val_val_load_19_2_reg_201 <= tmp_54_fu_591_p1;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_val_load_19_2_reg_201 <= ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_569)) begin
        if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0))) begin
            buf_val_val_load_20_2_reg_189 <= tmp_56_fu_606_p1;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_val_load_20_2_reg_189 <= ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_569)) begin
        if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0))) begin
            buf_val_val_load_21_2_reg_177 <= tmp_58_fu_621_p1;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_val_load_21_2_reg_177 <= ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_569)) begin
        if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0))) begin
            buf_val_val_load_22_2_reg_165 <= tmp_60_fu_636_p1;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_val_load_22_2_reg_165 <= ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_reg_154 <= c_1_fu_479_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_154 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_143 <= indvar_flatten_next_fu_417_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_143 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_844 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_val_load_17_1_fu_106 <= ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4;
        buf_val_val_load_18_1_fu_110 <= ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4;
        buf_val_val_load_19_1_fu_114 <= ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4;
        buf_val_val_load_20_1_fu_118 <= ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4;
        buf_val_val_load_21_1_fu_122 <= ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4;
        buf_val_val_load_22_1_fu_126 <= ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        buf_val_val_load_17_2_reg_225_pp0_iter2_reg <= buf_val_val_load_17_2_reg_225;
        buf_val_val_load_17_2_reg_225_pp0_iter3_reg <= buf_val_val_load_17_2_reg_225_pp0_iter2_reg;
        buf_val_val_load_17_2_reg_225_pp0_iter4_reg <= buf_val_val_load_17_2_reg_225_pp0_iter3_reg;
        buf_val_val_load_17_2_reg_225_pp0_iter5_reg <= buf_val_val_load_17_2_reg_225_pp0_iter4_reg;
        buf_val_val_load_17_2_reg_225_pp0_iter6_reg <= buf_val_val_load_17_2_reg_225_pp0_iter5_reg;
        buf_val_val_load_17_2_reg_225_pp0_iter7_reg <= buf_val_val_load_17_2_reg_225_pp0_iter6_reg;
        buf_val_val_load_17_2_reg_225_pp0_iter8_reg <= buf_val_val_load_17_2_reg_225_pp0_iter7_reg;
        buf_val_val_load_18_2_reg_213_pp0_iter2_reg <= buf_val_val_load_18_2_reg_213;
        buf_val_val_load_18_2_reg_213_pp0_iter3_reg <= buf_val_val_load_18_2_reg_213_pp0_iter2_reg;
        buf_val_val_load_18_2_reg_213_pp0_iter4_reg <= buf_val_val_load_18_2_reg_213_pp0_iter3_reg;
        buf_val_val_load_18_2_reg_213_pp0_iter5_reg <= buf_val_val_load_18_2_reg_213_pp0_iter4_reg;
        buf_val_val_load_18_2_reg_213_pp0_iter6_reg <= buf_val_val_load_18_2_reg_213_pp0_iter5_reg;
        buf_val_val_load_18_2_reg_213_pp0_iter7_reg <= buf_val_val_load_18_2_reg_213_pp0_iter6_reg;
        buf_val_val_load_18_2_reg_213_pp0_iter8_reg <= buf_val_val_load_18_2_reg_213_pp0_iter7_reg;
        buf_val_val_load_18_reg_906_pp0_iter2_reg <= buf_val_val_load_18_reg_906;
        buf_val_val_load_18_reg_906_pp0_iter3_reg <= buf_val_val_load_18_reg_906_pp0_iter2_reg;
        buf_val_val_load_18_reg_906_pp0_iter4_reg <= buf_val_val_load_18_reg_906_pp0_iter3_reg;
        buf_val_val_load_19_2_reg_201_pp0_iter2_reg <= buf_val_val_load_19_2_reg_201;
        buf_val_val_load_19_2_reg_201_pp0_iter3_reg <= buf_val_val_load_19_2_reg_201_pp0_iter2_reg;
        buf_val_val_load_19_2_reg_201_pp0_iter4_reg <= buf_val_val_load_19_2_reg_201_pp0_iter3_reg;
        buf_val_val_load_19_2_reg_201_pp0_iter5_reg <= buf_val_val_load_19_2_reg_201_pp0_iter4_reg;
        buf_val_val_load_19_2_reg_201_pp0_iter6_reg <= buf_val_val_load_19_2_reg_201_pp0_iter5_reg;
        buf_val_val_load_19_2_reg_201_pp0_iter7_reg <= buf_val_val_load_19_2_reg_201_pp0_iter6_reg;
        buf_val_val_load_19_2_reg_201_pp0_iter8_reg <= buf_val_val_load_19_2_reg_201_pp0_iter7_reg;
        buf_val_val_load_19_reg_911_pp0_iter2_reg <= buf_val_val_load_19_reg_911;
        buf_val_val_load_19_reg_911_pp0_iter3_reg <= buf_val_val_load_19_reg_911_pp0_iter2_reg;
        buf_val_val_load_19_reg_911_pp0_iter4_reg <= buf_val_val_load_19_reg_911_pp0_iter3_reg;
        buf_val_val_load_20_2_reg_189_pp0_iter2_reg <= buf_val_val_load_20_2_reg_189;
        buf_val_val_load_20_2_reg_189_pp0_iter3_reg <= buf_val_val_load_20_2_reg_189_pp0_iter2_reg;
        buf_val_val_load_20_2_reg_189_pp0_iter4_reg <= buf_val_val_load_20_2_reg_189_pp0_iter3_reg;
        buf_val_val_load_20_2_reg_189_pp0_iter5_reg <= buf_val_val_load_20_2_reg_189_pp0_iter4_reg;
        buf_val_val_load_20_2_reg_189_pp0_iter6_reg <= buf_val_val_load_20_2_reg_189_pp0_iter5_reg;
        buf_val_val_load_20_2_reg_189_pp0_iter7_reg <= buf_val_val_load_20_2_reg_189_pp0_iter6_reg;
        buf_val_val_load_20_2_reg_189_pp0_iter8_reg <= buf_val_val_load_20_2_reg_189_pp0_iter7_reg;
        buf_val_val_load_20_reg_916_pp0_iter2_reg <= buf_val_val_load_20_reg_916;
        buf_val_val_load_20_reg_916_pp0_iter3_reg <= buf_val_val_load_20_reg_916_pp0_iter2_reg;
        buf_val_val_load_20_reg_916_pp0_iter4_reg <= buf_val_val_load_20_reg_916_pp0_iter3_reg;
        buf_val_val_load_21_2_reg_177_pp0_iter2_reg <= buf_val_val_load_21_2_reg_177;
        buf_val_val_load_21_2_reg_177_pp0_iter3_reg <= buf_val_val_load_21_2_reg_177_pp0_iter2_reg;
        buf_val_val_load_21_2_reg_177_pp0_iter4_reg <= buf_val_val_load_21_2_reg_177_pp0_iter3_reg;
        buf_val_val_load_21_2_reg_177_pp0_iter5_reg <= buf_val_val_load_21_2_reg_177_pp0_iter4_reg;
        buf_val_val_load_21_2_reg_177_pp0_iter6_reg <= buf_val_val_load_21_2_reg_177_pp0_iter5_reg;
        buf_val_val_load_21_2_reg_177_pp0_iter7_reg <= buf_val_val_load_21_2_reg_177_pp0_iter6_reg;
        buf_val_val_load_21_2_reg_177_pp0_iter8_reg <= buf_val_val_load_21_2_reg_177_pp0_iter7_reg;
        buf_val_val_load_21_reg_921_pp0_iter2_reg <= buf_val_val_load_21_reg_921;
        buf_val_val_load_21_reg_921_pp0_iter3_reg <= buf_val_val_load_21_reg_921_pp0_iter2_reg;
        buf_val_val_load_21_reg_921_pp0_iter4_reg <= buf_val_val_load_21_reg_921_pp0_iter3_reg;
        buf_val_val_load_22_2_reg_165_pp0_iter2_reg <= buf_val_val_load_22_2_reg_165;
        buf_val_val_load_22_2_reg_165_pp0_iter3_reg <= buf_val_val_load_22_2_reg_165_pp0_iter2_reg;
        buf_val_val_load_22_2_reg_165_pp0_iter4_reg <= buf_val_val_load_22_2_reg_165_pp0_iter3_reg;
        buf_val_val_load_22_2_reg_165_pp0_iter5_reg <= buf_val_val_load_22_2_reg_165_pp0_iter4_reg;
        buf_val_val_load_22_2_reg_165_pp0_iter6_reg <= buf_val_val_load_22_2_reg_165_pp0_iter5_reg;
        buf_val_val_load_22_2_reg_165_pp0_iter7_reg <= buf_val_val_load_22_2_reg_165_pp0_iter6_reg;
        buf_val_val_load_22_2_reg_165_pp0_iter8_reg <= buf_val_val_load_22_2_reg_165_pp0_iter7_reg;
        buf_val_val_load_22_reg_926_pp0_iter2_reg <= buf_val_val_load_22_reg_926;
        buf_val_val_load_22_reg_926_pp0_iter3_reg <= buf_val_val_load_22_reg_926_pp0_iter2_reg;
        buf_val_val_load_22_reg_926_pp0_iter4_reg <= buf_val_val_load_22_reg_926_pp0_iter3_reg;
        buf_val_val_load_23_reg_931_pp0_iter2_reg <= buf_val_val_load_23_reg_931;
        buf_val_val_load_23_reg_931_pp0_iter3_reg <= buf_val_val_load_23_reg_931_pp0_iter2_reg;
        buf_val_val_load_23_reg_931_pp0_iter4_reg <= buf_val_val_load_23_reg_931_pp0_iter3_reg;
        or_cond_reg_857_pp0_iter10_reg <= or_cond_reg_857_pp0_iter9_reg;
        or_cond_reg_857_pp0_iter11_reg <= or_cond_reg_857_pp0_iter10_reg;
        or_cond_reg_857_pp0_iter12_reg <= or_cond_reg_857_pp0_iter11_reg;
        or_cond_reg_857_pp0_iter13_reg <= or_cond_reg_857_pp0_iter12_reg;
        or_cond_reg_857_pp0_iter14_reg <= or_cond_reg_857_pp0_iter13_reg;
        or_cond_reg_857_pp0_iter2_reg <= or_cond_reg_857_pp0_iter1_reg;
        or_cond_reg_857_pp0_iter3_reg <= or_cond_reg_857_pp0_iter2_reg;
        or_cond_reg_857_pp0_iter4_reg <= or_cond_reg_857_pp0_iter3_reg;
        or_cond_reg_857_pp0_iter5_reg <= or_cond_reg_857_pp0_iter4_reg;
        or_cond_reg_857_pp0_iter6_reg <= or_cond_reg_857_pp0_iter5_reg;
        or_cond_reg_857_pp0_iter7_reg <= or_cond_reg_857_pp0_iter6_reg;
        or_cond_reg_857_pp0_iter8_reg <= or_cond_reg_857_pp0_iter7_reg;
        or_cond_reg_857_pp0_iter9_reg <= or_cond_reg_857_pp0_iter8_reg;
        tmp_4_reg_867_pp0_iter10_reg <= tmp_4_reg_867_pp0_iter9_reg;
        tmp_4_reg_867_pp0_iter11_reg <= tmp_4_reg_867_pp0_iter10_reg;
        tmp_4_reg_867_pp0_iter12_reg <= tmp_4_reg_867_pp0_iter11_reg;
        tmp_4_reg_867_pp0_iter13_reg <= tmp_4_reg_867_pp0_iter12_reg;
        tmp_4_reg_867_pp0_iter14_reg <= tmp_4_reg_867_pp0_iter13_reg;
        tmp_4_reg_867_pp0_iter15_reg <= tmp_4_reg_867_pp0_iter14_reg;
        tmp_4_reg_867_pp0_iter2_reg <= tmp_4_reg_867_pp0_iter1_reg;
        tmp_4_reg_867_pp0_iter3_reg <= tmp_4_reg_867_pp0_iter2_reg;
        tmp_4_reg_867_pp0_iter4_reg <= tmp_4_reg_867_pp0_iter3_reg;
        tmp_4_reg_867_pp0_iter5_reg <= tmp_4_reg_867_pp0_iter4_reg;
        tmp_4_reg_867_pp0_iter6_reg <= tmp_4_reg_867_pp0_iter5_reg;
        tmp_4_reg_867_pp0_iter7_reg <= tmp_4_reg_867_pp0_iter6_reg;
        tmp_4_reg_867_pp0_iter8_reg <= tmp_4_reg_867_pp0_iter7_reg;
        tmp_4_reg_867_pp0_iter9_reg <= tmp_4_reg_867_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_844 == 1'd0) & (or_cond_reg_857 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_val_load_18_reg_906 <= buf_val_val_load_17_1_fu_106;
        buf_val_val_load_19_reg_911 <= buf_val_val_load_18_1_fu_110;
        buf_val_val_load_20_reg_916 <= buf_val_val_load_19_1_fu_114;
        buf_val_val_load_21_reg_921 <= buf_val_val_load_20_1_fu_118;
        buf_val_val_load_22_reg_926 <= buf_val_val_load_21_1_fu_122;
        buf_val_val_load_23_reg_931 <= buf_val_val_load_22_1_fu_126;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_val_load_2_fu_102 <= buf_val_val_load_22_1_fu_126;
        buf_val_val_load_3_fu_98 <= buf_val_val_load_21_1_fu_122;
        buf_val_val_load_4_fu_94 <= buf_val_val_load_20_1_fu_118;
        buf_val_val_load_5_fu_90 <= buf_val_val_load_19_1_fu_114;
        buf_val_val_load_6_fu_86 <= buf_val_val_load_18_1_fu_110;
        buf_val_val_load_7_fu_82 <= buf_val_val_load_17_1_fu_106;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_844 <= exitcond_flatten_fu_411_p2;
        or_cond_reg_857_pp0_iter1_reg <= or_cond_reg_857;
        tmp_4_reg_867_pp0_iter1_reg <= tmp_4_reg_867;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_cond_reg_857 <= or_cond_fu_467_p2;
        tmp_4_reg_867 <= tmp_4_fu_473_p2;
        tmp_reg_853 <= c_mid2_fu_429_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_857_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_38_0_1_reg_941 <= grp_fu_320_p2;
        tmp_38_0_2_reg_946 <= grp_fu_325_p2;
        tmp_38_0_3_reg_951 <= grp_fu_330_p2;
        tmp_38_0_4_reg_956 <= grp_fu_335_p2;
        tmp_38_0_5_reg_961 <= grp_fu_340_p2;
        tmp_38_reg_936 <= grp_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_857_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_38_1_1_reg_1001 <= grp_fu_350_p2;
        tmp_38_1_2_reg_1006 <= grp_fu_355_p2;
        tmp_38_1_3_reg_1011 <= grp_fu_360_p2;
        tmp_38_1_4_reg_1016 <= grp_fu_365_p2;
        tmp_38_1_5_reg_1021 <= grp_fu_370_p2;
        tmp_38_1_reg_996 <= grp_fu_345_p2;
        tmp_39_0_1_reg_971 <= grp_fu_242_p2;
        tmp_39_0_2_reg_976 <= grp_fu_247_p2;
        tmp_39_0_3_reg_981 <= grp_fu_252_p2;
        tmp_39_0_4_reg_986 <= grp_fu_257_p2;
        tmp_39_0_5_reg_991 <= grp_fu_262_p2;
        tmp_39_reg_966 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_857_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_38_2_1_reg_1061 <= grp_fu_381_p2;
        tmp_38_2_2_reg_1066 <= grp_fu_387_p2;
        tmp_38_2_3_reg_1071 <= grp_fu_393_p2;
        tmp_38_2_4_reg_1076 <= grp_fu_399_p2;
        tmp_38_2_5_reg_1081 <= grp_fu_405_p2;
        tmp_38_2_reg_1056 <= grp_fu_375_p2;
        tmp_39_1_1_reg_1031 <= grp_fu_271_p2;
        tmp_39_1_2_reg_1036 <= grp_fu_275_p2;
        tmp_39_1_3_reg_1041 <= grp_fu_279_p2;
        tmp_39_1_4_reg_1046 <= grp_fu_283_p2;
        tmp_39_1_5_reg_1051 <= grp_fu_287_p2;
        tmp_39_1_reg_1026 <= grp_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_867_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_61_reg_1086 <= tmp_61_fu_693_p3;
        tmp_62_reg_1091 <= tmp_62_fu_704_p3;
        tmp_63_reg_1096 <= tmp_63_fu_715_p3;
        tmp_64_reg_1101 <= tmp_64_fu_726_p3;
        tmp_65_reg_1106 <= tmp_65_fu_737_p3;
        tmp_66_reg_1111 <= tmp_66_fu_748_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4 = tmp_50_fu_561_p1;
    end else begin
        ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4 = ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225;
    end
end

always @ (*) begin
    if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4 = tmp_52_fu_576_p1;
    end else begin
        ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4 = ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213;
    end
end

always @ (*) begin
    if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4 = tmp_54_fu_591_p1;
    end else begin
        ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4 = ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201;
    end
end

always @ (*) begin
    if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4 = tmp_56_fu_606_p1;
    end else begin
        ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4 = ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189;
    end
end

always @ (*) begin
    if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4 = tmp_58_fu_621_p1;
    end else begin
        ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4 = ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177;
    end
end

always @ (*) begin
    if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4 = tmp_60_fu_636_p1;
    end else begin
        ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4 = ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_237_ce = 1'b1;
    end else begin
        grp_fu_237_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_242_ce = 1'b1;
    end else begin
        grp_fu_242_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_247_ce = 1'b1;
    end else begin
        grp_fu_247_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_252_ce = 1'b1;
    end else begin
        grp_fu_252_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_257_ce = 1'b1;
    end else begin
        grp_fu_257_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_262_ce = 1'b1;
    end else begin
        grp_fu_262_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_267_ce = 1'b1;
    end else begin
        grp_fu_267_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_271_ce = 1'b1;
    end else begin
        grp_fu_271_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_275_ce = 1'b1;
    end else begin
        grp_fu_275_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_279_ce = 1'b1;
    end else begin
        grp_fu_279_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_283_ce = 1'b1;
    end else begin
        grp_fu_283_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_287_ce = 1'b1;
    end else begin
        grp_fu_287_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_291_ce = 1'b1;
    end else begin
        grp_fu_291_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_295_ce = 1'b1;
    end else begin
        grp_fu_295_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_299_ce = 1'b1;
    end else begin
        grp_fu_299_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_303_ce = 1'b1;
    end else begin
        grp_fu_303_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_307_ce = 1'b1;
    end else begin
        grp_fu_307_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_311_ce = 1'b1;
    end else begin
        grp_fu_311_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_315_ce = 1'b1;
    end else begin
        grp_fu_315_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_320_ce = 1'b1;
    end else begin
        grp_fu_320_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_325_ce = 1'b1;
    end else begin
        grp_fu_325_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_330_ce = 1'b1;
    end else begin
        grp_fu_330_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_ce = 1'b1;
    end else begin
        grp_fu_335_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_340_ce = 1'b1;
    end else begin
        grp_fu_340_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_345_ce = 1'b1;
    end else begin
        grp_fu_345_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_350_ce = 1'b1;
    end else begin
        grp_fu_350_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_355_ce = 1'b1;
    end else begin
        grp_fu_355_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_360_ce = 1'b1;
    end else begin
        grp_fu_360_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_365_ce = 1'b1;
    end else begin
        grp_fu_365_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_370_ce = 1'b1;
    end else begin
        grp_fu_370_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_375_ce = 1'b1;
    end else begin
        grp_fu_375_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_381_ce = 1'b1;
    end else begin
        grp_fu_381_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_387_ce = 1'b1;
    end else begin
        grp_fu_387_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_393_ce = 1'b1;
    end else begin
        grp_fu_393_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_399_ce = 1'b1;
    end else begin
        grp_fu_399_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_405_ce = 1'b1;
    end else begin
        grp_fu_405_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_4_reg_867_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        tensor_val_blk_n = tensor_val_full_n;
    end else begin
        tensor_val_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_4_reg_867_pp0_iter15_reg == 1'd0) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tensor_val_write = 1'b1;
    end else begin
        tensor_val_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_y_val_blk_n = tensor_y_val_empty_n;
    end else begin
        tensor_y_val_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tensor_y_val_read = 1'b1;
    end else begin
        tensor_y_val_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter15 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter15 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_4_reg_867_pp0_iter15_reg == 1'd0) & (tensor_val_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((tensor_y_val_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op69_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_4_reg_867_pp0_iter15_reg == 1'd0) & (tensor_val_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((tensor_y_val_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op69_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_4_reg_867_pp0_iter15_reg == 1'd0) & (tensor_val_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1)) | ((tensor_y_val_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op69_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter16 = ((tmp_4_reg_867_pp0_iter15_reg == 1'd0) & (tensor_val_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((tensor_y_val_empty_n == 1'b0) & (ap_predicate_op69_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_198 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_569 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_buf_val_val_load_17_2_reg_225 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_val_load_18_2_reg_213 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_val_load_19_2_reg_201 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_val_load_20_2_reg_189 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_val_load_21_2_reg_177 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_val_load_22_2_reg_165 = 'bx;

always @ (*) begin
    ap_predicate_op69_read_state3 = ((tmp_reg_853 == 1'd0) & (exitcond_flatten_reg_844 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign c_1_fu_479_p2 = (c_mid2_fu_429_p3 + 11'd1);

assign c_mid2_fu_429_p3 = ((exitcond_fu_423_p2[0:0] === 1'b1) ? 11'd0 : c_reg_154);

assign exitcond_flatten_fu_411_p2 = ((indvar_flatten_reg_143 == 19'd446900) ? 1'b1 : 1'b0);

assign exitcond_fu_423_p2 = ((c_reg_154 == 11'd1025) ? 1'b1 : 1'b0);

assign icmp_fu_461_p2 = ((tmp_75_fu_451_p4 != 10'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_417_p2 = (indvar_flatten_reg_143 + 19'd1);

assign or_cond_fu_467_p2 = (rev_fu_445_p2 & icmp_fu_461_p2);

assign rev_fu_445_p2 = (tmp_fu_437_p3 ^ 1'd1);

assign start_out = real_start;

assign tensor_val_din = {{{{{{tmp_66_reg_1111}, {tmp_65_reg_1106}}, {tmp_64_reg_1101}}, {tmp_63_reg_1096}}, {tmp_62_reg_1091}}, {tmp_61_reg_1086}};

assign tmp_4_fu_473_p2 = ((c_mid2_fu_429_p3 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_50_fu_561_p1 = tmp_74_fu_557_p1;

assign tmp_51_fu_566_p4 = {{tensor_y_val_dout[63:32]}};

assign tmp_52_fu_576_p1 = tmp_51_fu_566_p4;

assign tmp_53_fu_581_p4 = {{tensor_y_val_dout[95:64]}};

assign tmp_54_fu_591_p1 = tmp_53_fu_581_p4;

assign tmp_55_fu_596_p4 = {{tensor_y_val_dout[127:96]}};

assign tmp_56_fu_606_p1 = tmp_55_fu_596_p4;

assign tmp_57_fu_611_p4 = {{tensor_y_val_dout[159:128]}};

assign tmp_58_fu_621_p1 = tmp_57_fu_611_p4;

assign tmp_59_fu_626_p4 = {{tensor_y_val_dout[191:160]}};

assign tmp_60_fu_636_p1 = tmp_59_fu_626_p4;

assign tmp_61_fu_693_p3 = ((or_cond_reg_857_pp0_iter14_reg[0:0] === 1'b1) ? tmp_68_fu_689_p1 : 32'd0);

assign tmp_62_fu_704_p3 = ((or_cond_reg_857_pp0_iter14_reg[0:0] === 1'b1) ? tmp_69_fu_700_p1 : 32'd0);

assign tmp_63_fu_715_p3 = ((or_cond_reg_857_pp0_iter14_reg[0:0] === 1'b1) ? tmp_70_fu_711_p1 : 32'd0);

assign tmp_64_fu_726_p3 = ((or_cond_reg_857_pp0_iter14_reg[0:0] === 1'b1) ? tmp_71_fu_722_p1 : 32'd0);

assign tmp_65_fu_737_p3 = ((or_cond_reg_857_pp0_iter14_reg[0:0] === 1'b1) ? tmp_72_fu_733_p1 : 32'd0);

assign tmp_66_fu_748_p3 = ((or_cond_reg_857_pp0_iter14_reg[0:0] === 1'b1) ? tmp_73_fu_744_p1 : 32'd0);

assign tmp_68_fu_689_p1 = grp_fu_291_p2;

assign tmp_69_fu_700_p1 = grp_fu_295_p2;

assign tmp_70_fu_711_p1 = grp_fu_299_p2;

assign tmp_71_fu_722_p1 = grp_fu_303_p2;

assign tmp_72_fu_733_p1 = grp_fu_307_p2;

assign tmp_73_fu_744_p1 = grp_fu_311_p2;

assign tmp_74_fu_557_p1 = tensor_y_val_dout[31:0];

assign tmp_75_fu_451_p4 = {{c_mid2_fu_429_p3[10:1]}};

assign tmp_fu_437_p3 = c_mid2_fu_429_p3[32'd10];

endmodule //a0_tensor_weight_x
