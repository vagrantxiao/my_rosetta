// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_gradient_xy_calc (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        frame3_a_dout,
        frame3_a_empty_n,
        frame3_a_read,
        gradient_x_din,
        gradient_x_full_n,
        gradient_x_write,
        gradient_y_din,
        gradient_y_full_n,
        gradient_y_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state33 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] frame3_a_dout;
input   frame3_a_empty_n;
output   frame3_a_read;
output  [31:0] gradient_x_din;
input   gradient_x_full_n;
output   gradient_x_write;
output  [31:0] gradient_y_din;
input   gradient_y_full_n;
output   gradient_y_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg frame3_a_read;
reg[31:0] gradient_x_din;
reg gradient_x_write;
reg[31:0] gradient_y_din;
reg gradient_y_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [9:0] buf_1_address0;
reg    buf_1_ce0;
wire   [31:0] buf_1_q0;
reg    buf_1_ce1;
reg    buf_1_we1;
wire   [9:0] buf_2_address0;
reg    buf_2_ce0;
wire   [31:0] buf_2_q0;
reg    buf_2_ce1;
reg    buf_2_we1;
wire   [9:0] buf_3_address0;
reg    buf_3_ce0;
wire   [31:0] buf_3_q0;
reg    buf_3_ce1;
reg    buf_3_we1;
wire   [9:0] buf_4_address0;
reg    buf_4_ce0;
wire   [31:0] buf_4_q0;
reg    buf_4_ce1;
reg    buf_4_we1;
reg    frame3_a_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_857;
reg   [0:0] or_cond_reg_900;
reg    gradient_x_blk_n;
reg    ap_enable_reg_pp0_iter30;
reg   [0:0] or_cond2_reg_909;
reg   [0:0] or_cond2_reg_909_pp0_iter29_reg;
reg   [0:0] or_cond3_reg_913;
reg   [0:0] or_cond3_reg_913_pp0_iter29_reg;
reg    gradient_y_blk_n;
reg   [18:0] indvar_flatten_reg_239;
reg   [8:0] r_reg_250;
reg   [10:0] c_reg_261;
wire   [0:0] exitcond_flatten_fu_381_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op120_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
reg    ap_predicate_op240_write_state32;
reg    ap_block_state32_pp0_stage0_iter30;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_857_pp0_iter1_reg;
wire   [18:0] indvar_flatten_next_fu_387_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [8:0] r_mid2_fu_497_p3;
reg   [9:0] buf_1_addr_reg_871;
reg   [9:0] buf_2_addr_reg_877;
reg   [9:0] buf_3_addr_reg_883;
reg   [9:0] buf_4_addr_reg_889;
reg   [9:0] buf_4_addr_reg_889_pp0_iter1_reg;
wire   [0:0] tmp_80_fu_513_p3;
reg   [0:0] tmp_80_reg_895;
reg   [0:0] tmp_80_reg_895_pp0_iter1_reg;
wire   [0:0] or_cond_fu_527_p2;
reg   [0:0] or_cond_reg_900_pp0_iter1_reg;
wire   [0:0] or_cond2_fu_555_p2;
reg   [0:0] or_cond2_reg_909_pp0_iter1_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter2_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter3_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter4_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter5_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter6_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter7_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter8_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter9_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter10_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter11_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter12_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter13_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter14_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter15_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter16_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter17_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter18_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter19_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter20_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter21_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter22_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter23_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter24_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter25_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter26_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter27_reg;
reg   [0:0] or_cond2_reg_909_pp0_iter28_reg;
wire   [0:0] or_cond3_fu_577_p2;
reg   [0:0] or_cond3_reg_913_pp0_iter1_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter2_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter3_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter4_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter5_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter6_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter7_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter8_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter9_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter10_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter11_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter12_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter13_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter14_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter15_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter16_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter17_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter18_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter19_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter20_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter21_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter22_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter23_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter24_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter25_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter26_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter27_reg;
reg   [0:0] or_cond3_reg_913_pp0_iter28_reg;
wire   [10:0] c_2_fu_583_p2;
reg   [31:0] window_val_load_5_reg_932;
reg   [31:0] window_val_load_6_reg_937;
reg   [31:0] window_val_load_6_reg_937_pp0_iter2_reg;
reg   [31:0] window_val_load_6_reg_937_pp0_iter3_reg;
reg   [31:0] window_val_load_6_reg_937_pp0_iter4_reg;
reg   [31:0] window_val_load_6_reg_937_pp0_iter5_reg;
reg   [31:0] buf_2_load_reg_942;
reg   [31:0] buf_4_load_reg_947;
reg   [31:0] window_val_load_12_reg_952;
reg   [31:0] window_val_load_12_reg_952_pp0_iter2_reg;
reg   [31:0] window_val_load_12_reg_952_pp0_iter3_reg;
reg   [31:0] window_val_load_12_reg_952_pp0_iter4_reg;
reg   [31:0] window_val_load_12_reg_952_pp0_iter5_reg;
reg   [31:0] window_val_load_12_reg_952_pp0_iter6_reg;
reg   [31:0] window_val_load_12_reg_952_pp0_iter7_reg;
reg   [31:0] window_val_load_12_reg_952_pp0_iter8_reg;
reg   [31:0] window_val_load_12_reg_952_pp0_iter9_reg;
wire   [31:0] buf_3_load_s_fu_652_p3;
reg   [31:0] buf_3_load_s_reg_957;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter2_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter3_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter4_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter5_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter6_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter7_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter8_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter9_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter10_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter11_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter12_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter13_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter14_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter15_reg;
reg   [31:0] buf_3_load_s_reg_957_pp0_iter16_reg;
reg   [31:0] window_val_load_8_reg_967;
reg   [31:0] window_val_load_8_reg_967_pp0_iter3_reg;
reg   [31:0] window_val_load_8_reg_967_pp0_iter4_reg;
reg   [31:0] window_val_load_8_reg_967_pp0_iter5_reg;
reg   [31:0] window_val_load_8_reg_967_pp0_iter6_reg;
reg   [31:0] window_val_load_8_reg_967_pp0_iter7_reg;
reg   [31:0] window_val_load_8_reg_967_pp0_iter8_reg;
reg   [31:0] window_val_load_8_reg_967_pp0_iter9_reg;
reg   [31:0] window_val_load_10_reg_972;
reg   [31:0] window_val_load_10_reg_972_pp0_iter3_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter4_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter5_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter6_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter7_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter8_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter9_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter10_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter11_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter12_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter13_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter14_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter15_reg;
reg   [31:0] window_val_load_10_reg_972_pp0_iter16_reg;
wire   [31:0] grp_fu_272_p2;
reg   [31:0] x_grad_1_reg_977;
wire   [31:0] grp_fu_277_p2;
reg   [31:0] y_grad_1_reg_982;
wire   [31:0] grp_fu_314_p2;
reg   [31:0] tmp_100_1_reg_987;
wire   [31:0] grp_fu_319_p2;
reg   [31:0] tmp_101_1_reg_992;
wire   [31:0] grp_fu_282_p2;
reg   [31:0] x_grad_1_1_reg_997;
wire   [31:0] grp_fu_286_p2;
reg   [31:0] y_grad_1_1_reg_1002;
wire   [31:0] grp_fu_324_p2;
reg   [31:0] tmp_100_2_reg_1007;
wire   [31:0] grp_fu_290_p2;
reg   [31:0] x_grad_1_2_reg_1013;
wire   [31:0] grp_fu_294_p2;
reg   [31:0] y_grad_1_2_reg_1018;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] tmp_100_3_reg_1023;
wire   [31:0] grp_fu_334_p2;
reg   [31:0] tmp_101_3_reg_1028;
wire   [31:0] grp_fu_298_p2;
reg   [31:0] x_grad_1_3_reg_1033;
wire   [31:0] grp_fu_302_p2;
reg   [31:0] y_grad_1_3_reg_1038;
wire   [31:0] grp_fu_306_p2;
reg   [31:0] x_grad_1_4_reg_1053;
wire   [31:0] grp_fu_310_p2;
reg   [31:0] y_grad_1_4_reg_1058;
wire   [31:0] grp_fu_339_p2;
reg   [31:0] tmp_29_reg_1063;
wire   [31:0] grp_fu_344_p2;
reg   [31:0] tmp_32_reg_1068;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state4;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
wire   [63:0] tmp_26_fu_505_p1;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] window_val_load_1_0_2_fu_94;
reg   [31:0] window_val_load_1_0_3_fu_98;
wire   [31:0] buf_1_load_s_fu_659_p3;
reg   [31:0] window_val_load_1_1_2_fu_102;
reg   [31:0] window_val_load_1_1_3_fu_106;
wire   [31:0] buf_2_load_s_fu_726_p3;
reg   [31:0] window_val_load_1_2_fu_110;
reg   [31:0] window_val_load_1_2_1_fu_114;
reg   [31:0] window_val_load_1_2_2_fu_118;
reg   [31:0] window_val_load_1_2_3_fu_122;
reg   [31:0] window_val_load_1_3_2_fu_126;
reg   [31:0] window_val_load_1_3_3_fu_130;
wire   [31:0] buf_4_load_s_fu_720_p3;
reg   [31:0] window_val_load_1_4_2_fu_134;
reg   [31:0] window_val_load_1_4_3_fu_138;
wire   [31:0] smallbuf_load_2_s_fu_713_p3;
reg   [31:0] smallbuf_load1_fu_142;
wire   [31:0] p_smallbuf_load_fu_632_p3;
wire   [31:0] grp_fu_306_p1;
wire   [31:0] grp_fu_310_p1;
wire   [6:0] tmp_76_fu_359_p4;
wire   [0:0] icmp_fu_369_p2;
wire   [0:0] tmp_fu_353_p2;
wire   [0:0] exitcond_fu_393_p2;
wire   [8:0] r_s_fu_407_p2;
wire   [0:0] tmp_mid1_fu_413_p2;
wire   [6:0] tmp_77_fu_427_p4;
wire   [7:0] tmp_78_fu_443_p4;
wire   [7:0] tmp_79_fu_459_p4;
wire   [0:0] icmp3_fu_453_p2;
wire   [0:0] icmp4_fu_469_p2;
wire   [0:0] icmp2_fu_437_p2;
wire   [0:0] tmp1_mid1_fu_483_p2;
wire   [0:0] tmp1_fu_375_p2;
wire   [10:0] c_mid2_fu_399_p3;
wire   [0:0] tmp_mid2_fu_419_p3;
wire   [0:0] rev_fu_521_p2;
wire   [8:0] tmp_81_fu_533_p4;
wire   [0:0] icmp5_fu_543_p2;
wire   [0:0] tmp2_fu_549_p2;
wire   [0:0] tmp1_mid2_fu_489_p3;
wire   [9:0] tmp_82_fu_561_p4;
wire   [0:0] tmp_23_mid2_fu_475_p3;
wire   [0:0] icmp6_fu_571_p2;
wire   [31:0] tmp_100_4_to_int_fu_747_p1;
wire   [31:0] tmp_100_4_neg_fu_750_p2;
wire   [31:0] tmp_101_4_to_int_fu_761_p1;
wire   [31:0] tmp_101_4_neg_fu_764_p2;
reg    grp_fu_272_ce;
reg    grp_fu_277_ce;
reg    grp_fu_282_ce;
reg    grp_fu_286_ce;
reg    grp_fu_290_ce;
reg    grp_fu_294_ce;
reg    grp_fu_298_ce;
reg    grp_fu_302_ce;
reg    grp_fu_306_ce;
reg    grp_fu_310_ce;
reg    grp_fu_314_ce;
reg    grp_fu_319_ce;
reg    grp_fu_324_ce;
reg    grp_fu_329_ce;
reg    grp_fu_334_ce;
reg    grp_fu_339_ce;
reg    grp_fu_344_ce;
wire    ap_CS_fsm_state33;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_342;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
end

a0_gradient_xy_calc_dEe #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_address0),
    .ce0(buf_1_ce0),
    .q0(buf_1_q0),
    .address1(buf_1_addr_reg_871),
    .ce1(buf_1_ce1),
    .we1(buf_1_we1),
    .d1(buf_2_q0)
);

a0_gradient_xy_calc_dEe #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_address0),
    .ce0(buf_2_ce0),
    .q0(buf_2_q0),
    .address1(buf_2_addr_reg_877),
    .ce1(buf_2_ce1),
    .we1(buf_2_we1),
    .d1(buf_3_q0)
);

a0_gradient_xy_calc_dEe #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_3_address0),
    .ce0(buf_3_ce0),
    .q0(buf_3_q0),
    .address1(buf_3_addr_reg_883),
    .ce1(buf_3_ce1),
    .we1(buf_3_we1),
    .d1(buf_4_q0)
);

a0_gradient_xy_calc_dEe #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_4_address0),
    .ce0(buf_4_ce0),
    .q0(buf_4_q0),
    .address1(buf_4_addr_reg_889_pp0_iter1_reg),
    .ce1(buf_4_ce1),
    .we1(buf_4_we1),
    .d1(smallbuf_load1_fu_142)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_val_load_1_2_fu_110),
    .din1(32'd0),
    .ce(grp_fu_272_ce),
    .dout(grp_fu_272_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_val_load_1_0_2_fu_94),
    .din1(32'd0),
    .ce(grp_fu_277_ce),
    .dout(grp_fu_277_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_grad_1_reg_977),
    .din1(tmp_100_1_reg_987),
    .ce(grp_fu_282_ce),
    .dout(grp_fu_282_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_grad_1_reg_982),
    .din1(tmp_101_1_reg_992),
    .ce(grp_fu_286_ce),
    .dout(grp_fu_286_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_grad_1_1_reg_997),
    .din1(tmp_100_2_reg_1007),
    .ce(grp_fu_290_ce),
    .dout(grp_fu_290_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_grad_1_1_reg_1002),
    .din1(tmp_100_2_reg_1007),
    .ce(grp_fu_294_ce),
    .dout(grp_fu_294_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_grad_1_2_reg_1013),
    .din1(tmp_100_3_reg_1023),
    .ce(grp_fu_298_ce),
    .dout(grp_fu_298_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_grad_1_2_reg_1018),
    .din1(tmp_101_3_reg_1028),
    .ce(grp_fu_302_ce),
    .dout(grp_fu_302_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_grad_1_3_reg_1033),
    .din1(grp_fu_306_p1),
    .ce(grp_fu_306_ce),
    .dout(grp_fu_306_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_grad_1_3_reg_1038),
    .din1(grp_fu_310_p1),
    .ce(grp_fu_310_ce),
    .dout(grp_fu_310_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_val_load_5_reg_932),
    .din1(32'd3238002688),
    .ce(grp_fu_314_ce),
    .dout(grp_fu_314_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_val_load_1_1_2_fu_102),
    .din1(32'd3238002688),
    .ce(grp_fu_319_ce),
    .dout(grp_fu_319_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_val_load_6_reg_937_pp0_iter5_reg),
    .din1(32'd0),
    .ce(grp_fu_324_ce),
    .dout(grp_fu_324_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_val_load_12_reg_952_pp0_iter9_reg),
    .din1(32'd1090519040),
    .ce(grp_fu_329_ce),
    .dout(grp_fu_329_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_val_load_8_reg_967_pp0_iter9_reg),
    .din1(32'd1090519040),
    .ce(grp_fu_334_ce),
    .dout(grp_fu_334_p2)
);

a0_optical_flow_fdivbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fdivbkb_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_grad_1_4_reg_1053),
    .din1(32'd1094713344),
    .ce(grp_fu_339_ce),
    .dout(grp_fu_339_p2)
);

a0_optical_flow_fdivbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fdivbkb_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_grad_1_4_reg_1058),
    .din1(32'd1094713344),
    .ce(grp_fu_344_ce),
    .dout(grp_fu_344_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state33)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_381_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state4)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter30 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_381_p2 == 1'd0))) begin
        c_reg_261 <= c_2_fu_583_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_261 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_381_p2 == 1'd0))) begin
        indvar_flatten_reg_239 <= indvar_flatten_next_fu_387_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_239 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_381_p2 == 1'd0))) begin
        r_reg_250 <= r_mid2_fu_497_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_250 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_342)) begin
        if ((ap_predicate_op120_read_state3 == 1'b1)) begin
            smallbuf_load1_fu_142 <= frame3_a_dout;
        end else if (((or_cond_reg_900 == 1'd0) & (exitcond_flatten_reg_857 == 1'd0))) begin
            smallbuf_load1_fu_142 <= p_smallbuf_load_fu_632_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_381_p2 == 1'd0))) begin
        buf_1_addr_reg_871 <= tmp_26_fu_505_p1;
        buf_2_addr_reg_877 <= tmp_26_fu_505_p1;
        buf_3_addr_reg_883 <= tmp_26_fu_505_p1;
        buf_4_addr_reg_889 <= tmp_26_fu_505_p1;
        or_cond2_reg_909 <= or_cond2_fu_555_p2;
        or_cond_reg_900 <= or_cond_fu_527_p2;
        tmp_80_reg_895 <= c_mid2_fu_399_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_857 == 1'd0))) begin
        buf_2_load_reg_942 <= buf_2_q0;
        buf_4_load_reg_947 <= buf_4_q0;
        window_val_load_1_0_3_fu_98 <= buf_1_load_s_fu_659_p3;
        window_val_load_1_2_3_fu_122 <= buf_3_load_s_fu_652_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_857 == 1'd0))) begin
        buf_3_load_s_reg_957 <= buf_3_load_s_fu_652_p3;
        window_val_load_12_reg_952 <= window_val_load_1_2_3_fu_122;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        buf_3_load_s_reg_957_pp0_iter10_reg <= buf_3_load_s_reg_957_pp0_iter9_reg;
        buf_3_load_s_reg_957_pp0_iter11_reg <= buf_3_load_s_reg_957_pp0_iter10_reg;
        buf_3_load_s_reg_957_pp0_iter12_reg <= buf_3_load_s_reg_957_pp0_iter11_reg;
        buf_3_load_s_reg_957_pp0_iter13_reg <= buf_3_load_s_reg_957_pp0_iter12_reg;
        buf_3_load_s_reg_957_pp0_iter14_reg <= buf_3_load_s_reg_957_pp0_iter13_reg;
        buf_3_load_s_reg_957_pp0_iter15_reg <= buf_3_load_s_reg_957_pp0_iter14_reg;
        buf_3_load_s_reg_957_pp0_iter16_reg <= buf_3_load_s_reg_957_pp0_iter15_reg;
        buf_3_load_s_reg_957_pp0_iter2_reg <= buf_3_load_s_reg_957;
        buf_3_load_s_reg_957_pp0_iter3_reg <= buf_3_load_s_reg_957_pp0_iter2_reg;
        buf_3_load_s_reg_957_pp0_iter4_reg <= buf_3_load_s_reg_957_pp0_iter3_reg;
        buf_3_load_s_reg_957_pp0_iter5_reg <= buf_3_load_s_reg_957_pp0_iter4_reg;
        buf_3_load_s_reg_957_pp0_iter6_reg <= buf_3_load_s_reg_957_pp0_iter5_reg;
        buf_3_load_s_reg_957_pp0_iter7_reg <= buf_3_load_s_reg_957_pp0_iter6_reg;
        buf_3_load_s_reg_957_pp0_iter8_reg <= buf_3_load_s_reg_957_pp0_iter7_reg;
        buf_3_load_s_reg_957_pp0_iter9_reg <= buf_3_load_s_reg_957_pp0_iter8_reg;
        or_cond2_reg_909_pp0_iter10_reg <= or_cond2_reg_909_pp0_iter9_reg;
        or_cond2_reg_909_pp0_iter11_reg <= or_cond2_reg_909_pp0_iter10_reg;
        or_cond2_reg_909_pp0_iter12_reg <= or_cond2_reg_909_pp0_iter11_reg;
        or_cond2_reg_909_pp0_iter13_reg <= or_cond2_reg_909_pp0_iter12_reg;
        or_cond2_reg_909_pp0_iter14_reg <= or_cond2_reg_909_pp0_iter13_reg;
        or_cond2_reg_909_pp0_iter15_reg <= or_cond2_reg_909_pp0_iter14_reg;
        or_cond2_reg_909_pp0_iter16_reg <= or_cond2_reg_909_pp0_iter15_reg;
        or_cond2_reg_909_pp0_iter17_reg <= or_cond2_reg_909_pp0_iter16_reg;
        or_cond2_reg_909_pp0_iter18_reg <= or_cond2_reg_909_pp0_iter17_reg;
        or_cond2_reg_909_pp0_iter19_reg <= or_cond2_reg_909_pp0_iter18_reg;
        or_cond2_reg_909_pp0_iter20_reg <= or_cond2_reg_909_pp0_iter19_reg;
        or_cond2_reg_909_pp0_iter21_reg <= or_cond2_reg_909_pp0_iter20_reg;
        or_cond2_reg_909_pp0_iter22_reg <= or_cond2_reg_909_pp0_iter21_reg;
        or_cond2_reg_909_pp0_iter23_reg <= or_cond2_reg_909_pp0_iter22_reg;
        or_cond2_reg_909_pp0_iter24_reg <= or_cond2_reg_909_pp0_iter23_reg;
        or_cond2_reg_909_pp0_iter25_reg <= or_cond2_reg_909_pp0_iter24_reg;
        or_cond2_reg_909_pp0_iter26_reg <= or_cond2_reg_909_pp0_iter25_reg;
        or_cond2_reg_909_pp0_iter27_reg <= or_cond2_reg_909_pp0_iter26_reg;
        or_cond2_reg_909_pp0_iter28_reg <= or_cond2_reg_909_pp0_iter27_reg;
        or_cond2_reg_909_pp0_iter29_reg <= or_cond2_reg_909_pp0_iter28_reg;
        or_cond2_reg_909_pp0_iter2_reg <= or_cond2_reg_909_pp0_iter1_reg;
        or_cond2_reg_909_pp0_iter3_reg <= or_cond2_reg_909_pp0_iter2_reg;
        or_cond2_reg_909_pp0_iter4_reg <= or_cond2_reg_909_pp0_iter3_reg;
        or_cond2_reg_909_pp0_iter5_reg <= or_cond2_reg_909_pp0_iter4_reg;
        or_cond2_reg_909_pp0_iter6_reg <= or_cond2_reg_909_pp0_iter5_reg;
        or_cond2_reg_909_pp0_iter7_reg <= or_cond2_reg_909_pp0_iter6_reg;
        or_cond2_reg_909_pp0_iter8_reg <= or_cond2_reg_909_pp0_iter7_reg;
        or_cond2_reg_909_pp0_iter9_reg <= or_cond2_reg_909_pp0_iter8_reg;
        or_cond3_reg_913_pp0_iter10_reg <= or_cond3_reg_913_pp0_iter9_reg;
        or_cond3_reg_913_pp0_iter11_reg <= or_cond3_reg_913_pp0_iter10_reg;
        or_cond3_reg_913_pp0_iter12_reg <= or_cond3_reg_913_pp0_iter11_reg;
        or_cond3_reg_913_pp0_iter13_reg <= or_cond3_reg_913_pp0_iter12_reg;
        or_cond3_reg_913_pp0_iter14_reg <= or_cond3_reg_913_pp0_iter13_reg;
        or_cond3_reg_913_pp0_iter15_reg <= or_cond3_reg_913_pp0_iter14_reg;
        or_cond3_reg_913_pp0_iter16_reg <= or_cond3_reg_913_pp0_iter15_reg;
        or_cond3_reg_913_pp0_iter17_reg <= or_cond3_reg_913_pp0_iter16_reg;
        or_cond3_reg_913_pp0_iter18_reg <= or_cond3_reg_913_pp0_iter17_reg;
        or_cond3_reg_913_pp0_iter19_reg <= or_cond3_reg_913_pp0_iter18_reg;
        or_cond3_reg_913_pp0_iter20_reg <= or_cond3_reg_913_pp0_iter19_reg;
        or_cond3_reg_913_pp0_iter21_reg <= or_cond3_reg_913_pp0_iter20_reg;
        or_cond3_reg_913_pp0_iter22_reg <= or_cond3_reg_913_pp0_iter21_reg;
        or_cond3_reg_913_pp0_iter23_reg <= or_cond3_reg_913_pp0_iter22_reg;
        or_cond3_reg_913_pp0_iter24_reg <= or_cond3_reg_913_pp0_iter23_reg;
        or_cond3_reg_913_pp0_iter25_reg <= or_cond3_reg_913_pp0_iter24_reg;
        or_cond3_reg_913_pp0_iter26_reg <= or_cond3_reg_913_pp0_iter25_reg;
        or_cond3_reg_913_pp0_iter27_reg <= or_cond3_reg_913_pp0_iter26_reg;
        or_cond3_reg_913_pp0_iter28_reg <= or_cond3_reg_913_pp0_iter27_reg;
        or_cond3_reg_913_pp0_iter29_reg <= or_cond3_reg_913_pp0_iter28_reg;
        or_cond3_reg_913_pp0_iter2_reg <= or_cond3_reg_913_pp0_iter1_reg;
        or_cond3_reg_913_pp0_iter3_reg <= or_cond3_reg_913_pp0_iter2_reg;
        or_cond3_reg_913_pp0_iter4_reg <= or_cond3_reg_913_pp0_iter3_reg;
        or_cond3_reg_913_pp0_iter5_reg <= or_cond3_reg_913_pp0_iter4_reg;
        or_cond3_reg_913_pp0_iter6_reg <= or_cond3_reg_913_pp0_iter5_reg;
        or_cond3_reg_913_pp0_iter7_reg <= or_cond3_reg_913_pp0_iter6_reg;
        or_cond3_reg_913_pp0_iter8_reg <= or_cond3_reg_913_pp0_iter7_reg;
        or_cond3_reg_913_pp0_iter9_reg <= or_cond3_reg_913_pp0_iter8_reg;
        window_val_load_10_reg_972 <= window_val_load_1_4_2_fu_134;
        window_val_load_10_reg_972_pp0_iter10_reg <= window_val_load_10_reg_972_pp0_iter9_reg;
        window_val_load_10_reg_972_pp0_iter11_reg <= window_val_load_10_reg_972_pp0_iter10_reg;
        window_val_load_10_reg_972_pp0_iter12_reg <= window_val_load_10_reg_972_pp0_iter11_reg;
        window_val_load_10_reg_972_pp0_iter13_reg <= window_val_load_10_reg_972_pp0_iter12_reg;
        window_val_load_10_reg_972_pp0_iter14_reg <= window_val_load_10_reg_972_pp0_iter13_reg;
        window_val_load_10_reg_972_pp0_iter15_reg <= window_val_load_10_reg_972_pp0_iter14_reg;
        window_val_load_10_reg_972_pp0_iter16_reg <= window_val_load_10_reg_972_pp0_iter15_reg;
        window_val_load_10_reg_972_pp0_iter3_reg <= window_val_load_10_reg_972;
        window_val_load_10_reg_972_pp0_iter4_reg <= window_val_load_10_reg_972_pp0_iter3_reg;
        window_val_load_10_reg_972_pp0_iter5_reg <= window_val_load_10_reg_972_pp0_iter4_reg;
        window_val_load_10_reg_972_pp0_iter6_reg <= window_val_load_10_reg_972_pp0_iter5_reg;
        window_val_load_10_reg_972_pp0_iter7_reg <= window_val_load_10_reg_972_pp0_iter6_reg;
        window_val_load_10_reg_972_pp0_iter8_reg <= window_val_load_10_reg_972_pp0_iter7_reg;
        window_val_load_10_reg_972_pp0_iter9_reg <= window_val_load_10_reg_972_pp0_iter8_reg;
        window_val_load_12_reg_952_pp0_iter2_reg <= window_val_load_12_reg_952;
        window_val_load_12_reg_952_pp0_iter3_reg <= window_val_load_12_reg_952_pp0_iter2_reg;
        window_val_load_12_reg_952_pp0_iter4_reg <= window_val_load_12_reg_952_pp0_iter3_reg;
        window_val_load_12_reg_952_pp0_iter5_reg <= window_val_load_12_reg_952_pp0_iter4_reg;
        window_val_load_12_reg_952_pp0_iter6_reg <= window_val_load_12_reg_952_pp0_iter5_reg;
        window_val_load_12_reg_952_pp0_iter7_reg <= window_val_load_12_reg_952_pp0_iter6_reg;
        window_val_load_12_reg_952_pp0_iter8_reg <= window_val_load_12_reg_952_pp0_iter7_reg;
        window_val_load_12_reg_952_pp0_iter9_reg <= window_val_load_12_reg_952_pp0_iter8_reg;
        window_val_load_6_reg_937_pp0_iter2_reg <= window_val_load_6_reg_937;
        window_val_load_6_reg_937_pp0_iter3_reg <= window_val_load_6_reg_937_pp0_iter2_reg;
        window_val_load_6_reg_937_pp0_iter4_reg <= window_val_load_6_reg_937_pp0_iter3_reg;
        window_val_load_6_reg_937_pp0_iter5_reg <= window_val_load_6_reg_937_pp0_iter4_reg;
        window_val_load_8_reg_967 <= window_val_load_1_3_2_fu_126;
        window_val_load_8_reg_967_pp0_iter3_reg <= window_val_load_8_reg_967;
        window_val_load_8_reg_967_pp0_iter4_reg <= window_val_load_8_reg_967_pp0_iter3_reg;
        window_val_load_8_reg_967_pp0_iter5_reg <= window_val_load_8_reg_967_pp0_iter4_reg;
        window_val_load_8_reg_967_pp0_iter6_reg <= window_val_load_8_reg_967_pp0_iter5_reg;
        window_val_load_8_reg_967_pp0_iter7_reg <= window_val_load_8_reg_967_pp0_iter6_reg;
        window_val_load_8_reg_967_pp0_iter8_reg <= window_val_load_8_reg_967_pp0_iter7_reg;
        window_val_load_8_reg_967_pp0_iter9_reg <= window_val_load_8_reg_967_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_addr_reg_889_pp0_iter1_reg <= buf_4_addr_reg_889;
        exitcond_flatten_reg_857 <= exitcond_flatten_fu_381_p2;
        exitcond_flatten_reg_857_pp0_iter1_reg <= exitcond_flatten_reg_857;
        or_cond2_reg_909_pp0_iter1_reg <= or_cond2_reg_909;
        or_cond3_reg_913_pp0_iter1_reg <= or_cond3_reg_913;
        or_cond_reg_900_pp0_iter1_reg <= or_cond_reg_900;
        tmp_80_reg_895_pp0_iter1_reg <= tmp_80_reg_895;
        window_val_load_5_reg_932 <= window_val_load_1_2_1_fu_114;
        window_val_load_6_reg_937 <= window_val_load_1_2_2_fu_118;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_fu_555_p2 == 1'd0) & (exitcond_flatten_fu_381_p2 == 1'd0))) begin
        or_cond3_reg_913 <= or_cond3_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter3_reg == 1'd1))) begin
        tmp_100_1_reg_987 <= grp_fu_314_p2;
        tmp_101_1_reg_992 <= grp_fu_319_p2;
        x_grad_1_reg_977 <= grp_fu_272_p2;
        y_grad_1_reg_982 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter7_reg == 1'd1))) begin
        tmp_100_2_reg_1007 <= grp_fu_324_p2;
        x_grad_1_1_reg_997 <= grp_fu_282_p2;
        y_grad_1_1_reg_1002 <= grp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter11_reg == 1'd1))) begin
        tmp_100_3_reg_1023 <= grp_fu_329_p2;
        tmp_101_3_reg_1028 <= grp_fu_334_p2;
        x_grad_1_2_reg_1013 <= grp_fu_290_p2;
        y_grad_1_2_reg_1018 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter28_reg == 1'd1))) begin
        tmp_29_reg_1063 <= grp_fu_339_p2;
        tmp_32_reg_1068 <= grp_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_val_load_1_0_2_fu_94 <= window_val_load_1_0_3_fu_98;
        window_val_load_1_2_1_fu_114 <= window_val_load_1_2_2_fu_118;
        window_val_load_1_2_2_fu_118 <= window_val_load_1_2_3_fu_122;
        window_val_load_1_2_fu_110 <= window_val_load_1_2_1_fu_114;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        window_val_load_1_1_2_fu_102 <= window_val_load_1_1_3_fu_106;
        window_val_load_1_3_2_fu_126 <= window_val_load_1_3_3_fu_130;
        window_val_load_1_4_2_fu_134 <= window_val_load_1_4_3_fu_138;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_857_pp0_iter1_reg == 1'd0))) begin
        window_val_load_1_1_3_fu_106 <= buf_2_load_s_fu_726_p3;
        window_val_load_1_3_3_fu_130 <= buf_4_load_s_fu_720_p3;
        window_val_load_1_4_3_fu_138 <= smallbuf_load_2_s_fu_713_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter15_reg == 1'd1))) begin
        x_grad_1_3_reg_1033 <= grp_fu_298_p2;
        y_grad_1_3_reg_1038 <= grp_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter19_reg == 1'd1))) begin
        x_grad_1_4_reg_1053 <= grp_fu_306_p2;
        y_grad_1_4_reg_1058 <= grp_fu_310_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_80_reg_895 == 1'd0) & (or_cond_reg_900 == 1'd0) & (exitcond_flatten_reg_857 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0)))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_80_reg_895 == 1'd0) & (or_cond_reg_900 == 1'd0) & (exitcond_flatten_reg_857 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0)))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_80_reg_895 == 1'd0) & (or_cond_reg_900 == 1'd0) & (exitcond_flatten_reg_857 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0)))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_80_reg_895 == 1'd0) & (or_cond_reg_900 == 1'd0) & (exitcond_flatten_reg_857 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0)))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_ce0 = 1'b1;
    end else begin
        buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_80_reg_895 == 1'd0) & (or_cond_reg_900 == 1'd0) & (exitcond_flatten_reg_857 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0)))) begin
        buf_3_ce1 = 1'b1;
    end else begin
        buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_80_reg_895 == 1'd0) & (or_cond_reg_900 == 1'd0) & (exitcond_flatten_reg_857 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0)))) begin
        buf_3_we1 = 1'b1;
    end else begin
        buf_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_ce0 = 1'b1;
    end else begin
        buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900_pp0_iter1_reg == 1'd1) & (exitcond_flatten_reg_857_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900_pp0_iter1_reg == 1'd0) & (tmp_80_reg_895_pp0_iter1_reg == 1'd0) & (exitcond_flatten_reg_857_pp0_iter1_reg == 1'd0)))) begin
        buf_4_ce1 = 1'b1;
    end else begin
        buf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900_pp0_iter1_reg == 1'd1) & (exitcond_flatten_reg_857_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond_reg_900_pp0_iter1_reg == 1'd0) & (tmp_80_reg_895_pp0_iter1_reg == 1'd0) & (exitcond_flatten_reg_857_pp0_iter1_reg == 1'd0)))) begin
        buf_4_we1 = 1'b1;
    end else begin
        buf_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        frame3_a_blk_n = frame3_a_empty_n;
    end else begin
        frame3_a_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op120_read_state3 == 1'b1))) begin
        frame3_a_read = 1'b1;
    end else begin
        frame3_a_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter30 == 1'b1) & (or_cond3_reg_913_pp0_iter29_reg == 1'd1) & (or_cond2_reg_909_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0)))) begin
        gradient_x_blk_n = gradient_x_full_n;
    end else begin
        gradient_x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        if ((or_cond2_reg_909_pp0_iter29_reg == 1'd1)) begin
            gradient_x_din = tmp_29_reg_1063;
        end else if ((ap_predicate_op240_write_state32 == 1'b1)) begin
            gradient_x_din = 32'd0;
        end else begin
            gradient_x_din = 'bx;
        end
    end else begin
        gradient_x_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op240_write_state32 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)))) begin
        gradient_x_write = 1'b1;
    end else begin
        gradient_x_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter30 == 1'b1) & (or_cond3_reg_913_pp0_iter29_reg == 1'd1) & (or_cond2_reg_909_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0)))) begin
        gradient_y_blk_n = gradient_y_full_n;
    end else begin
        gradient_y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        if ((or_cond2_reg_909_pp0_iter29_reg == 1'd1)) begin
            gradient_y_din = tmp_32_reg_1068;
        end else if ((ap_predicate_op240_write_state32 == 1'b1)) begin
            gradient_y_din = 32'd0;
        end else begin
            gradient_y_din = 'bx;
        end
    end else begin
        gradient_y_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op240_write_state32 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)))) begin
        gradient_y_write = 1'b1;
    end else begin
        gradient_y_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_272_ce = 1'b1;
    end else begin
        grp_fu_272_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_282_ce = 1'b1;
    end else begin
        grp_fu_282_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_286_ce = 1'b1;
    end else begin
        grp_fu_286_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_294_ce = 1'b1;
    end else begin
        grp_fu_294_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_298_ce = 1'b1;
    end else begin
        grp_fu_298_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_302_ce = 1'b1;
    end else begin
        grp_fu_302_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_306_ce = 1'b1;
    end else begin
        grp_fu_306_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_310_ce = 1'b1;
    end else begin
        grp_fu_310_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_314_ce = 1'b1;
    end else begin
        grp_fu_314_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_319_ce = 1'b1;
    end else begin
        grp_fu_319_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_324_ce = 1'b1;
    end else begin
        grp_fu_324_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_329_ce = 1'b1;
    end else begin
        grp_fu_329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_334_ce = 1'b1;
    end else begin
        grp_fu_334_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_339_ce = 1'b1;
    end else begin
        grp_fu_339_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_344_ce = 1'b1;
    end else begin
        grp_fu_344_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter29 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter30 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((ap_enable_reg_pp0_iter29 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter30 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter30 == 1'b1) & (((gradient_y_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_x_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_y_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)) | ((gradient_x_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)))) | ((frame3_a_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op120_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter30 == 1'b1) & (((gradient_y_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_x_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_y_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)) | ((gradient_x_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)))) | ((frame3_a_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op120_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter30 == 1'b1) & (((gradient_y_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_x_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_y_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)) | ((gradient_x_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)))) | ((frame3_a_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op120_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter30 = (((gradient_y_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_x_full_n == 1'b0) & (ap_predicate_op240_write_state32 == 1'b1)) | ((gradient_y_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)) | ((gradient_x_full_n == 1'b0) & (or_cond2_reg_909_pp0_iter29_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((frame3_a_empty_n == 1'b0) & (ap_predicate_op120_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_342 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op120_read_state3 = ((or_cond_reg_900 == 1'd1) & (exitcond_flatten_reg_857 == 1'd0));
end

always @ (*) begin
    ap_predicate_op240_write_state32 = ((or_cond3_reg_913_pp0_iter29_reg == 1'd1) & (or_cond2_reg_909_pp0_iter29_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign buf_1_address0 = tmp_26_fu_505_p1;

assign buf_1_load_s_fu_659_p3 = ((or_cond_reg_900[0:0] === 1'b1) ? buf_1_q0 : 32'd0);

assign buf_2_address0 = tmp_26_fu_505_p1;

assign buf_2_load_s_fu_726_p3 = ((or_cond_reg_900_pp0_iter1_reg[0:0] === 1'b1) ? buf_2_load_reg_942 : 32'd0);

assign buf_3_address0 = tmp_26_fu_505_p1;

assign buf_3_load_s_fu_652_p3 = ((or_cond_reg_900[0:0] === 1'b1) ? buf_3_q0 : 32'd0);

assign buf_4_address0 = tmp_26_fu_505_p1;

assign buf_4_load_s_fu_720_p3 = ((or_cond_reg_900_pp0_iter1_reg[0:0] === 1'b1) ? buf_4_load_reg_947 : 32'd0);

assign c_2_fu_583_p2 = (c_mid2_fu_399_p3 + 11'd1);

assign c_mid2_fu_399_p3 = ((exitcond_fu_393_p2[0:0] === 1'b1) ? 11'd0 : c_reg_261);

assign exitcond_flatten_fu_381_p2 = ((indvar_flatten_reg_239 == 19'd449388) ? 1'b1 : 1'b0);

assign exitcond_fu_393_p2 = ((c_reg_261 == 11'd1026) ? 1'b1 : 1'b0);

assign grp_fu_306_p1 = tmp_100_4_neg_fu_750_p2;

assign grp_fu_310_p1 = tmp_101_4_neg_fu_764_p2;

assign icmp2_fu_437_p2 = ((tmp_77_fu_427_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_453_p2 = ((tmp_78_fu_443_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp4_fu_469_p2 = ((tmp_79_fu_459_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp5_fu_543_p2 = ((tmp_81_fu_533_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_571_p2 = ((tmp_82_fu_561_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_369_p2 = ((tmp_76_fu_359_p4 != 7'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_387_p2 = (indvar_flatten_reg_239 + 19'd1);

assign or_cond2_fu_555_p2 = (tmp2_fu_549_p2 & tmp1_mid2_fu_489_p3);

assign or_cond3_fu_577_p2 = (tmp_23_mid2_fu_475_p3 & icmp6_fu_571_p2);

assign or_cond_fu_527_p2 = (tmp_mid2_fu_419_p3 & rev_fu_521_p2);

assign p_smallbuf_load_fu_632_p3 = ((tmp_80_reg_895[0:0] === 1'b1) ? smallbuf_load1_fu_142 : 32'd0);

assign r_mid2_fu_497_p3 = ((exitcond_fu_393_p2[0:0] === 1'b1) ? r_s_fu_407_p2 : r_reg_250);

assign r_s_fu_407_p2 = (r_reg_250 + 9'd1);

assign rev_fu_521_p2 = (tmp_80_fu_513_p3 ^ 1'd1);

assign smallbuf_load_2_s_fu_713_p3 = ((or_cond_reg_900_pp0_iter1_reg[0:0] === 1'b1) ? smallbuf_load1_fu_142 : 32'd0);

assign start_out = real_start;

assign tmp1_fu_375_p2 = (tmp_fu_353_p2 & icmp_fu_369_p2);

assign tmp1_mid1_fu_483_p2 = (tmp_mid1_fu_413_p2 & icmp2_fu_437_p2);

assign tmp1_mid2_fu_489_p3 = ((exitcond_fu_393_p2[0:0] === 1'b1) ? tmp1_mid1_fu_483_p2 : tmp1_fu_375_p2);

assign tmp2_fu_549_p2 = (rev_fu_521_p2 & icmp5_fu_543_p2);

assign tmp_100_4_neg_fu_750_p2 = (tmp_100_4_to_int_fu_747_p1 ^ 32'd2147483648);

assign tmp_100_4_to_int_fu_747_p1 = buf_3_load_s_reg_957_pp0_iter16_reg;

assign tmp_101_4_neg_fu_764_p2 = (tmp_101_4_to_int_fu_761_p1 ^ 32'd2147483648);

assign tmp_101_4_to_int_fu_761_p1 = window_val_load_10_reg_972_pp0_iter16_reg;

assign tmp_23_mid2_fu_475_p3 = ((exitcond_fu_393_p2[0:0] === 1'b1) ? icmp3_fu_453_p2 : icmp4_fu_469_p2);

assign tmp_26_fu_505_p1 = c_mid2_fu_399_p3;

assign tmp_76_fu_359_p4 = {{r_reg_250[8:2]}};

assign tmp_77_fu_427_p4 = {{r_s_fu_407_p2[8:2]}};

assign tmp_78_fu_443_p4 = {{r_s_fu_407_p2[8:1]}};

assign tmp_79_fu_459_p4 = {{r_reg_250[8:1]}};

assign tmp_80_fu_513_p3 = c_mid2_fu_399_p3[32'd10];

assign tmp_81_fu_533_p4 = {{c_mid2_fu_399_p3[10:2]}};

assign tmp_82_fu_561_p4 = {{c_mid2_fu_399_p3[10:1]}};

assign tmp_fu_353_p2 = ((r_reg_250 < 9'd436) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_413_p2 = ((r_s_fu_407_p2 < 9'd436) ? 1'b1 : 1'b0);

assign tmp_mid2_fu_419_p3 = ((exitcond_fu_393_p2[0:0] === 1'b1) ? tmp_mid1_fu_413_p2 : tmp_fu_353_p2);

endmodule //a0_gradient_xy_calc
