// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_gradient_z_calc_HH_
#define _a0_gradient_z_calc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "a0_optical_flow_faddhbi.h"
#include "a0_optical_flow_fmulibs.h"
#include "a0_optical_flow_fdivbkb.h"

namespace ap_rtl {

struct a0_gradient_z_calc : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > frame1_a_dout;
    sc_in< sc_logic > frame1_a_empty_n;
    sc_out< sc_logic > frame1_a_read;
    sc_in< sc_lv<32> > frame2_a_dout;
    sc_in< sc_logic > frame2_a_empty_n;
    sc_out< sc_logic > frame2_a_read;
    sc_in< sc_lv<32> > frame3_b_dout;
    sc_in< sc_logic > frame3_b_empty_n;
    sc_out< sc_logic > frame3_b_read;
    sc_in< sc_lv<32> > frame4_a_dout;
    sc_in< sc_logic > frame4_a_empty_n;
    sc_out< sc_logic > frame4_a_read;
    sc_in< sc_lv<32> > frame5_a_dout;
    sc_in< sc_logic > frame5_a_empty_n;
    sc_out< sc_logic > frame5_a_read;
    sc_out< sc_lv<32> > gradient_z_din;
    sc_in< sc_logic > gradient_z_full_n;
    sc_out< sc_logic > gradient_z_write;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const3;


    // Module declarations
    a0_gradient_z_calc(sc_module_name name);
    SC_HAS_PROCESS(a0_gradient_z_calc);

    ~a0_gradient_z_calc();

    sc_trace_file* mVcdFile;

    a0_optical_flow_faddhbi<1,4,32,32,32>* optical_flow_faddhbi_U43;
    a0_optical_flow_faddhbi<1,4,32,32,32>* optical_flow_faddhbi_U44;
    a0_optical_flow_faddhbi<1,4,32,32,32>* optical_flow_faddhbi_U45;
    a0_optical_flow_faddhbi<1,4,32,32,32>* optical_flow_faddhbi_U46;
    a0_optical_flow_fmulibs<1,3,32,32,32>* optical_flow_fmulibs_U47;
    a0_optical_flow_fmulibs<1,3,32,32,32>* optical_flow_fmulibs_U48;
    a0_optical_flow_fmulibs<1,3,32,32,32>* optical_flow_fmulibs_U49;
    a0_optical_flow_fdivbkb<1,9,32,32,32>* optical_flow_fdivbkb_U50;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > frame1_a_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164;
    sc_signal< sc_logic > frame2_a_blk_n;
    sc_signal< sc_logic > frame3_b_blk_n;
    sc_signal< sc_logic > frame4_a_blk_n;
    sc_signal< sc_logic > frame5_a_blk_n;
    sc_signal< sc_logic > gradient_z_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter30;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter29_reg;
    sc_signal< sc_lv<19> > indvar_flatten_reg_91;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_138_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter28;
    sc_signal< bool > ap_block_state31_pp0_stage0_iter29;
    sc_signal< bool > ap_block_state32_pp0_stage0_iter30;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter3_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter4_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter5_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter6_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter7_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter8_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter9_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter10_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter11_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter12_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter13_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter14_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter15_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter16_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter17_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter18_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter19_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter20_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter21_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter22_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter23_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter24_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter25_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter26_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter27_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_164_pp0_iter28_reg;
    sc_signal< sc_lv<19> > indvar_flatten_next_fu_144_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > frame1_a_read_reg_173;
    sc_signal< sc_lv<32> > frame1_a_read_reg_173_pp0_iter2_reg;
    sc_signal< sc_lv<32> > frame1_a_read_reg_173_pp0_iter3_reg;
    sc_signal< sc_lv<32> > frame1_a_read_reg_173_pp0_iter4_reg;
    sc_signal< sc_lv<32> > frame2_a_read_reg_178;
    sc_signal< sc_lv<32> > frame3_b_read_reg_183;
    sc_signal< sc_lv<32> > frame3_b_read_reg_183_pp0_iter2_reg;
    sc_signal< sc_lv<32> > frame3_b_read_reg_183_pp0_iter3_reg;
    sc_signal< sc_lv<32> > frame3_b_read_reg_183_pp0_iter4_reg;
    sc_signal< sc_lv<32> > frame3_b_read_reg_183_pp0_iter5_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter2_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter3_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter4_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter5_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter6_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter7_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter8_reg;
    sc_signal< sc_lv<32> > frame4_a_read_reg_188_pp0_iter9_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter2_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter3_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter4_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter5_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter6_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter7_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter8_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter9_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter10_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter11_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter12_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter13_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter14_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter15_reg;
    sc_signal< sc_lv<32> > frame5_a_read_reg_193_pp0_iter16_reg;
    sc_signal< sc_lv<32> > grp_fu_118_p2;
    sc_signal< sc_lv<32> > tmp_13_reg_198;
    sc_signal< sc_lv<32> > grp_fu_102_p2;
    sc_signal< sc_lv<32> > tmp_14_reg_203;
    sc_signal< sc_lv<32> > grp_fu_123_p2;
    sc_signal< sc_lv<32> > tmp_15_reg_208;
    sc_signal< sc_lv<32> > grp_fu_106_p2;
    sc_signal< sc_lv<32> > tmp_16_reg_213;
    sc_signal< sc_lv<32> > grp_fu_128_p2;
    sc_signal< sc_lv<32> > tmp_17_reg_218;
    sc_signal< sc_lv<32> > grp_fu_110_p2;
    sc_signal< sc_lv<32> > tmp_18_reg_223;
    sc_signal< sc_lv<32> > grp_fu_114_p2;
    sc_signal< sc_lv<32> > tmp_20_reg_233;
    sc_signal< sc_lv<32> > grp_fu_133_p2;
    sc_signal< sc_lv<32> > tmp_21_reg_238;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter29;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > grp_fu_114_p1;
    sc_signal< sc_lv<32> > tmp_62_to_int_fu_150_p1;
    sc_signal< sc_lv<32> > tmp_62_neg_fu_153_p2;
    sc_signal< sc_logic > grp_fu_102_ce;
    sc_signal< sc_logic > grp_fu_106_ce;
    sc_signal< sc_logic > grp_fu_110_ce;
    sc_signal< sc_logic > grp_fu_114_ce;
    sc_signal< sc_logic > grp_fu_118_ce;
    sc_signal< sc_logic > grp_fu_123_ce;
    sc_signal< sc_logic > grp_fu_128_ce;
    sc_signal< sc_logic > grp_fu_133_ce;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state33;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<32> ap_const_lv32_C1000000;
    static const sc_lv<32> ap_const_lv32_41000000;
    static const sc_lv<32> ap_const_lv32_41400000;
    static const sc_lv<19> ap_const_lv19_6D000;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_80000000;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state33();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state19_pp0_stage0_iter17();
    void thread_ap_block_state20_pp0_stage0_iter18();
    void thread_ap_block_state21_pp0_stage0_iter19();
    void thread_ap_block_state22_pp0_stage0_iter20();
    void thread_ap_block_state23_pp0_stage0_iter21();
    void thread_ap_block_state24_pp0_stage0_iter22();
    void thread_ap_block_state25_pp0_stage0_iter23();
    void thread_ap_block_state26_pp0_stage0_iter24();
    void thread_ap_block_state27_pp0_stage0_iter25();
    void thread_ap_block_state28_pp0_stage0_iter26();
    void thread_ap_block_state29_pp0_stage0_iter27();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state30_pp0_stage0_iter28();
    void thread_ap_block_state31_pp0_stage0_iter29();
    void thread_ap_block_state32_pp0_stage0_iter30();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten_fu_138_p2();
    void thread_frame1_a_blk_n();
    void thread_frame1_a_read();
    void thread_frame2_a_blk_n();
    void thread_frame2_a_read();
    void thread_frame3_b_blk_n();
    void thread_frame3_b_read();
    void thread_frame4_a_blk_n();
    void thread_frame4_a_read();
    void thread_frame5_a_blk_n();
    void thread_frame5_a_read();
    void thread_gradient_z_blk_n();
    void thread_gradient_z_din();
    void thread_gradient_z_write();
    void thread_grp_fu_102_ce();
    void thread_grp_fu_106_ce();
    void thread_grp_fu_110_ce();
    void thread_grp_fu_114_ce();
    void thread_grp_fu_114_p1();
    void thread_grp_fu_118_ce();
    void thread_grp_fu_123_ce();
    void thread_grp_fu_128_ce();
    void thread_grp_fu_133_ce();
    void thread_indvar_flatten_next_fu_144_p2();
    void thread_tmp_62_neg_fu_153_p2();
    void thread_tmp_62_to_int_fu_150_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
