// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_Loop_FRAMES_CP_OUTER_HH_
#define _a0_Loop_FRAMES_CP_OUTER_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "a0_optical_flow_fdivbkb.h"
#include "a0_optical_flow_uitocud.h"

namespace ap_rtl {

struct a0_Loop_FRAMES_CP_OUTER : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<64> > frames_V_dout;
    sc_in< sc_logic > frames_V_empty_n;
    sc_out< sc_logic > frames_V_read;
    sc_out< sc_lv<32> > frame1_a_din;
    sc_in< sc_logic > frame1_a_full_n;
    sc_out< sc_logic > frame1_a_write;
    sc_out< sc_lv<32> > frame2_a_din;
    sc_in< sc_logic > frame2_a_full_n;
    sc_out< sc_logic > frame2_a_write;
    sc_out< sc_lv<32> > frame3_a_din;
    sc_in< sc_logic > frame3_a_full_n;
    sc_out< sc_logic > frame3_a_write;
    sc_out< sc_lv<32> > frame3_b_din;
    sc_in< sc_logic > frame3_b_full_n;
    sc_out< sc_logic > frame3_b_write;
    sc_out< sc_lv<32> > frame4_a_din;
    sc_in< sc_logic > frame4_a_full_n;
    sc_out< sc_logic > frame4_a_write;
    sc_out< sc_lv<32> > frame5_a_din;
    sc_in< sc_logic > frame5_a_full_n;
    sc_out< sc_logic > frame5_a_write;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    a0_Loop_FRAMES_CP_OUTER(sc_module_name name);
    SC_HAS_PROCESS(a0_Loop_FRAMES_CP_OUTER);

    ~a0_Loop_FRAMES_CP_OUTER();

    sc_trace_file* mVcdFile;

    a0_optical_flow_fdivbkb<1,9,32,32,32>* optical_flow_fdivbkb_U1;
    a0_optical_flow_fdivbkb<1,9,32,32,32>* optical_flow_fdivbkb_U2;
    a0_optical_flow_fdivbkb<1,9,32,32,32>* optical_flow_fdivbkb_U3;
    a0_optical_flow_fdivbkb<1,9,32,32,32>* optical_flow_fdivbkb_U4;
    a0_optical_flow_fdivbkb<1,9,32,32,32>* optical_flow_fdivbkb_U5;
    a0_optical_flow_uitocud<1,4,32,32>* optical_flow_uitocud_U6;
    a0_optical_flow_uitocud<1,4,32,32>* optical_flow_uitocud_U7;
    a0_optical_flow_uitocud<1,4,32,32>* optical_flow_uitocud_U8;
    a0_optical_flow_uitocud<1,4,32,32>* optical_flow_uitocud_U9;
    a0_optical_flow_uitocud<1,4,32,32>* optical_flow_uitocud_U10;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > frames_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322;
    sc_signal< sc_logic > frame1_a_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter13_reg;
    sc_signal< sc_logic > frame2_a_blk_n;
    sc_signal< sc_logic > frame3_a_blk_n;
    sc_signal< sc_logic > frame3_b_blk_n;
    sc_signal< sc_logic > frame4_a_blk_n;
    sc_signal< sc_logic > frame5_a_blk_n;
    sc_signal< sc_lv<19> > indvar_flatten_reg_190;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_241_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter3_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter4_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter5_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter6_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter7_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter8_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter9_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter10_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter11_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_322_pp0_iter12_reg;
    sc_signal< sc_lv<19> > indvar_flatten_next_fu_247_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > grp_fu_226_p1;
    sc_signal< sc_lv<32> > tmp_46_i_i_reg_356;
    sc_signal< sc_lv<32> > grp_fu_229_p1;
    sc_signal< sc_lv<32> > tmp_48_i_i_reg_361;
    sc_signal< sc_lv<32> > grp_fu_232_p1;
    sc_signal< sc_lv<32> > tmp_50_i_i_reg_366;
    sc_signal< sc_lv<32> > grp_fu_235_p1;
    sc_signal< sc_lv<32> > tmp_52_i_i_reg_371;
    sc_signal< sc_lv<32> > grp_fu_238_p1;
    sc_signal< sc_lv<32> > tmp_54_i_i_reg_376;
    sc_signal< sc_lv<32> > grp_fu_201_p2;
    sc_signal< sc_lv<32> > tmp_47_i_i_reg_381;
    sc_signal< sc_lv<32> > grp_fu_206_p2;
    sc_signal< sc_lv<32> > tmp_49_i_i_reg_386;
    sc_signal< sc_lv<32> > grp_fu_211_p2;
    sc_signal< sc_lv<32> > tmp_51_i_i_reg_391;
    sc_signal< sc_lv<32> > grp_fu_216_p2;
    sc_signal< sc_lv<32> > tmp_53_i_i_reg_397;
    sc_signal< sc_lv<32> > grp_fu_221_p2;
    sc_signal< sc_lv<32> > tmp_55_i_i_reg_402;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > grp_fu_226_p0;
    sc_signal< sc_lv<32> > grp_fu_229_p0;
    sc_signal< sc_lv<32> > grp_fu_232_p0;
    sc_signal< sc_lv<32> > grp_fu_235_p0;
    sc_signal< sc_lv<32> > grp_fu_238_p0;
    sc_signal< sc_lv<8> > tmp_fu_253_p1;
    sc_signal< sc_lv<8> > p_Result_1_i_i_fu_262_p4;
    sc_signal< sc_lv<8> > p_Result_2_i_i_fu_277_p4;
    sc_signal< sc_lv<8> > p_Result_3_i_i_fu_292_p4;
    sc_signal< sc_lv<8> > p_Result_4_i_i_fu_307_p4;
    sc_signal< sc_logic > grp_fu_201_ce;
    sc_signal< sc_logic > grp_fu_206_ce;
    sc_signal< sc_logic > grp_fu_211_ce;
    sc_signal< sc_logic > grp_fu_216_ce;
    sc_signal< sc_logic > grp_fu_221_ce;
    sc_signal< sc_logic > grp_fu_226_ce;
    sc_signal< sc_logic > grp_fu_229_ce;
    sc_signal< sc_logic > grp_fu_232_ce;
    sc_signal< sc_logic > grp_fu_235_ce;
    sc_signal< sc_logic > grp_fu_238_ce;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state17;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<32> ap_const_lv32_437F0000;
    static const sc_lv<19> ap_const_lv19_6D000;
    static const sc_lv<19> ap_const_lv19_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond_flatten_fu_241_p2();
    void thread_frame1_a_blk_n();
    void thread_frame1_a_din();
    void thread_frame1_a_write();
    void thread_frame2_a_blk_n();
    void thread_frame2_a_din();
    void thread_frame2_a_write();
    void thread_frame3_a_blk_n();
    void thread_frame3_a_din();
    void thread_frame3_a_write();
    void thread_frame3_b_blk_n();
    void thread_frame3_b_din();
    void thread_frame3_b_write();
    void thread_frame4_a_blk_n();
    void thread_frame4_a_din();
    void thread_frame4_a_write();
    void thread_frame5_a_blk_n();
    void thread_frame5_a_din();
    void thread_frame5_a_write();
    void thread_frames_V_blk_n();
    void thread_frames_V_read();
    void thread_grp_fu_201_ce();
    void thread_grp_fu_206_ce();
    void thread_grp_fu_211_ce();
    void thread_grp_fu_216_ce();
    void thread_grp_fu_221_ce();
    void thread_grp_fu_226_ce();
    void thread_grp_fu_226_p0();
    void thread_grp_fu_229_ce();
    void thread_grp_fu_229_p0();
    void thread_grp_fu_232_ce();
    void thread_grp_fu_232_p0();
    void thread_grp_fu_235_ce();
    void thread_grp_fu_235_p0();
    void thread_grp_fu_238_ce();
    void thread_grp_fu_238_p0();
    void thread_indvar_flatten_next_fu_247_p2();
    void thread_internal_ap_ready();
    void thread_p_Result_1_i_i_fu_262_p4();
    void thread_p_Result_2_i_i_fu_277_p4();
    void thread_p_Result_3_i_i_fu_292_p4();
    void thread_p_Result_4_i_i_fu_307_p4();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_fu_253_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
