// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_flow_calc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_flow_calc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic a0_flow_calc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> a0_flow_calc::ap_ST_fsm_state1 = "1";
const sc_lv<3> a0_flow_calc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> a0_flow_calc::ap_ST_fsm_state21 = "100";
const sc_lv<32> a0_flow_calc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool a0_flow_calc::ap_const_boolean_1 = true;
const bool a0_flow_calc::ap_const_boolean_0 = false;
const sc_lv<1> a0_flow_calc::ap_const_lv1_0 = "0";
const sc_lv<32> a0_flow_calc::ap_const_lv32_1 = "1";
const sc_lv<1> a0_flow_calc::ap_const_lv1_1 = "1";
const sc_lv<19> a0_flow_calc::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<9> a0_flow_calc::ap_const_lv9_0 = "000000000";
const sc_lv<11> a0_flow_calc::ap_const_lv11_0 = "00000000000";
const sc_lv<32> a0_flow_calc::ap_const_lv32_8 = "1000";
const sc_lv<8> a0_flow_calc::ap_const_lv8_0 = "00000000";
const sc_lv<9> a0_flow_calc::ap_const_lv9_1B2 = "110110010";
const sc_lv<19> a0_flow_calc::ap_const_lv19_6D000 = "1101101000000000000";
const sc_lv<19> a0_flow_calc::ap_const_lv19_1 = "1";
const sc_lv<11> a0_flow_calc::ap_const_lv11_400 = "10000000000";
const sc_lv<9> a0_flow_calc::ap_const_lv9_1 = "1";
const sc_lv<32> a0_flow_calc::ap_const_lv32_A = "1010";
const sc_lv<10> a0_flow_calc::ap_const_lv10_0 = "0000000000";
const sc_lv<11> a0_flow_calc::ap_const_lv11_3FE = "1111111110";
const sc_lv<11> a0_flow_calc::ap_const_lv11_1 = "1";
const sc_lv<32> a0_flow_calc::ap_const_lv32_20 = "100000";
const sc_lv<32> a0_flow_calc::ap_const_lv32_3F = "111111";
const sc_lv<32> a0_flow_calc::ap_const_lv32_60 = "1100000";
const sc_lv<32> a0_flow_calc::ap_const_lv32_7F = "1111111";
const sc_lv<32> a0_flow_calc::ap_const_lv32_A0 = "10100000";
const sc_lv<32> a0_flow_calc::ap_const_lv32_BF = "10111111";
const sc_lv<32> a0_flow_calc::ap_const_lv32_80 = "10000000";
const sc_lv<32> a0_flow_calc::ap_const_lv32_9F = "10011111";
const sc_lv<32> a0_flow_calc::ap_const_lv32_2 = "10";

a0_flow_calc::a0_flow_calc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    optical_flow_fsubDeQ_U241 = new a0_optical_flow_fsubDeQ<1,4,32,32,32>("optical_flow_fsubDeQ_U241");
    optical_flow_fsubDeQ_U241->clk(ap_clk);
    optical_flow_fsubDeQ_U241->reset(ap_rst);
    optical_flow_fsubDeQ_U241->din0(tmp_54_reg_508);
    optical_flow_fsubDeQ_U241->din1(tmp_55_reg_513);
    optical_flow_fsubDeQ_U241->ce(grp_fu_152_ce);
    optical_flow_fsubDeQ_U241->dout(grp_fu_152_p2);
    optical_flow_fsubDeQ_U242 = new a0_optical_flow_fsubDeQ<1,4,32,32,32>("optical_flow_fsubDeQ_U242");
    optical_flow_fsubDeQ_U242->clk(ap_clk);
    optical_flow_fsubDeQ_U242->reset(ap_rst);
    optical_flow_fsubDeQ_U242->din0(tmp_56_reg_518);
    optical_flow_fsubDeQ_U242->din1(tmp_57_reg_523);
    optical_flow_fsubDeQ_U242->ce(grp_fu_156_ce);
    optical_flow_fsubDeQ_U242->dout(grp_fu_156_p2);
    optical_flow_fsubDeQ_U243 = new a0_optical_flow_fsubDeQ<1,4,32,32,32>("optical_flow_fsubDeQ_U243");
    optical_flow_fsubDeQ_U243->clk(ap_clk);
    optical_flow_fsubDeQ_U243->reset(ap_rst);
    optical_flow_fsubDeQ_U243->din0(tmp_60_reg_528);
    optical_flow_fsubDeQ_U243->din1(tmp_61_reg_533);
    optical_flow_fsubDeQ_U243->ce(grp_fu_160_ce);
    optical_flow_fsubDeQ_U243->dout(grp_fu_160_p2);
    optical_flow_fmulibs_U244 = new a0_optical_flow_fmulibs<1,3,32,32,32>("optical_flow_fmulibs_U244");
    optical_flow_fmulibs_U244->clk(ap_clk);
    optical_flow_fmulibs_U244->reset(ap_rst);
    optical_flow_fmulibs_U244->din0(tmp_82_fu_384_p1);
    optical_flow_fmulibs_U244->din1(tmp_84_fu_389_p1);
    optical_flow_fmulibs_U244->ce(grp_fu_164_ce);
    optical_flow_fmulibs_U244->dout(grp_fu_164_p2);
    optical_flow_fmulibs_U245 = new a0_optical_flow_fmulibs<1,3,32,32,32>("optical_flow_fmulibs_U245");
    optical_flow_fmulibs_U245->clk(ap_clk);
    optical_flow_fmulibs_U245->reset(ap_rst);
    optical_flow_fmulibs_U245->din0(tmp_86_fu_394_p1);
    optical_flow_fmulibs_U245->din1(tmp_86_fu_394_p1);
    optical_flow_fmulibs_U245->ce(grp_fu_168_ce);
    optical_flow_fmulibs_U245->dout(grp_fu_168_p2);
    optical_flow_fmulibs_U246 = new a0_optical_flow_fmulibs<1,3,32,32,32>("optical_flow_fmulibs_U246");
    optical_flow_fmulibs_U246->clk(ap_clk);
    optical_flow_fmulibs_U246->reset(ap_rst);
    optical_flow_fmulibs_U246->din0(tmp_88_fu_401_p1);
    optical_flow_fmulibs_U246->din1(tmp_86_fu_394_p1);
    optical_flow_fmulibs_U246->ce(grp_fu_172_ce);
    optical_flow_fmulibs_U246->dout(grp_fu_172_p2);
    optical_flow_fmulibs_U247 = new a0_optical_flow_fmulibs<1,3,32,32,32>("optical_flow_fmulibs_U247");
    optical_flow_fmulibs_U247->clk(ap_clk);
    optical_flow_fmulibs_U247->reset(ap_rst);
    optical_flow_fmulibs_U247->din0(tmp_90_fu_406_p1);
    optical_flow_fmulibs_U247->din1(tmp_84_fu_389_p1);
    optical_flow_fmulibs_U247->ce(grp_fu_176_ce);
    optical_flow_fmulibs_U247->dout(grp_fu_176_p2);
    optical_flow_fmulibs_U248 = new a0_optical_flow_fmulibs<1,3,32,32,32>("optical_flow_fmulibs_U248");
    optical_flow_fmulibs_U248->clk(ap_clk);
    optical_flow_fmulibs_U248->reset(ap_rst);
    optical_flow_fmulibs_U248->din0(tmp_90_fu_406_p1);
    optical_flow_fmulibs_U248->din1(tmp_86_fu_394_p1);
    optical_flow_fmulibs_U248->ce(grp_fu_180_ce);
    optical_flow_fmulibs_U248->dout(grp_fu_180_p2);
    optical_flow_fmulibs_U249 = new a0_optical_flow_fmulibs<1,3,32,32,32>("optical_flow_fmulibs_U249");
    optical_flow_fmulibs_U249->clk(ap_clk);
    optical_flow_fmulibs_U249->reset(ap_rst);
    optical_flow_fmulibs_U249->din0(tmp_88_fu_401_p1);
    optical_flow_fmulibs_U249->din1(tmp_82_fu_384_p1);
    optical_flow_fmulibs_U249->ce(grp_fu_184_ce);
    optical_flow_fmulibs_U249->dout(grp_fu_184_p2);
    optical_flow_fdivbkb_U250 = new a0_optical_flow_fdivbkb<1,9,32,32,32>("optical_flow_fdivbkb_U250");
    optical_flow_fdivbkb_U250->clk(ap_clk);
    optical_flow_fdivbkb_U250->reset(ap_rst);
    optical_flow_fdivbkb_U250->din0(tmp_58_reg_544);
    optical_flow_fdivbkb_U250->din1(denom_reg_538);
    optical_flow_fdivbkb_U250->ce(grp_fu_188_ce);
    optical_flow_fdivbkb_U250->dout(grp_fu_188_p2);
    optical_flow_fdivbkb_U251 = new a0_optical_flow_fdivbkb<1,9,32,32,32>("optical_flow_fdivbkb_U251");
    optical_flow_fdivbkb_U251->clk(ap_clk);
    optical_flow_fdivbkb_U251->reset(ap_rst);
    optical_flow_fdivbkb_U251->din0(tmp_62_reg_549);
    optical_flow_fdivbkb_U251->din1(denom_reg_538);
    optical_flow_fdivbkb_U251->ce(grp_fu_192_ce);
    optical_flow_fdivbkb_U251->dout(grp_fu_192_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( outputs_full_n );
    sensitive << ( tensor_val_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op51_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( outputs_full_n );
    sensitive << ( tensor_val_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op51_read_state3 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( outputs_full_n );
    sensitive << ( tensor_val_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op51_read_state3 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);
    sensitive << ( outputs_full_n );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( tensor_val_empty_n );
    sensitive << ( ap_predicate_op51_read_state3 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_127);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_224_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );

    SC_METHOD(thread_ap_phi_mux_buf_1_load_phi_fu_134_p4);
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );
    sensitive << ( or_cond3_reg_442_pp0_iter17_reg );
    sensitive << ( tmp_63_reg_559 );
    sensitive << ( ap_phi_reg_pp0_iter18_buf_1_load_reg_130 );

    SC_METHOD(thread_ap_phi_mux_tmp_64_phi_fu_145_p4);
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );
    sensitive << ( or_cond3_reg_442_pp0_iter17_reg );
    sensitive << ( tmp_59_reg_554 );
    sensitive << ( ap_phi_reg_pp0_iter18_tmp_64_reg_141 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_buf_1_load_reg_130);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_64_reg_141);

    SC_METHOD(thread_ap_predicate_op51_read_state3);
    sensitive << ( exitcond_flatten_reg_428 );
    sensitive << ( or_cond3_reg_442 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_buf_1_load_toint_fu_415_p1);
    sensitive << ( ap_phi_mux_buf_1_load_phi_fu_134_p4 );

    SC_METHOD(thread_c_4_fu_334_p2);
    sensitive << ( c_mid2_fu_242_p3 );

    SC_METHOD(thread_c_mid2_fu_242_p3);
    sensitive << ( c_reg_119 );
    sensitive << ( exitcond7_fu_236_p2 );

    SC_METHOD(thread_exitcond7_fu_236_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c_reg_119 );
    sensitive << ( exitcond_flatten_fu_224_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_224_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_97 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_152_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_156_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_160_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_164_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_168_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_172_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_176_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_180_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_184_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_188_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_192_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp8_fu_266_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_224_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_93_fu_256_p4 );

    SC_METHOD(thread_icmp9_fu_310_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_224_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_94_fu_300_p4 );

    SC_METHOD(thread_icmp_fu_206_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_fu_196_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_230_p2);
    sensitive << ( indvar_flatten_reg_97 );

    SC_METHOD(thread_or_cond3_fu_328_p2);
    sensitive << ( tmp2_fu_322_p2 );
    sensitive << ( tmp1_mid2_fu_284_p3 );

    SC_METHOD(thread_outputs_blk_n);
    sensitive << ( outputs_full_n );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );

    SC_METHOD(thread_outputs_din);
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( buf_1_load_toint_fu_415_p1 );
    sensitive << ( tmp_162_toint_fu_411_p1 );

    SC_METHOD(thread_outputs_write);
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( exitcond_flatten_reg_428_pp0_iter17_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_r_mid2_fu_292_p3);
    sensitive << ( r_reg_108 );
    sensitive << ( exitcond7_fu_236_p2 );
    sensitive << ( r_s_fu_250_p2 );

    SC_METHOD(thread_r_s_fu_250_p2);
    sensitive << ( r_reg_108 );

    SC_METHOD(thread_tensor_val_blk_n);
    sensitive << ( tensor_val_empty_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_428 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond3_reg_442 );

    SC_METHOD(thread_tensor_val_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_predicate_op51_read_state3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp1_fu_218_p2);
    sensitive << ( icmp_fu_206_p2 );
    sensitive << ( tmp_s_fu_212_p2 );

    SC_METHOD(thread_tmp1_mid1_fu_278_p2);
    sensitive << ( icmp8_fu_266_p2 );
    sensitive << ( tmp_mid1_fu_272_p2 );

    SC_METHOD(thread_tmp1_mid2_fu_284_p3);
    sensitive << ( exitcond7_fu_236_p2 );
    sensitive << ( tmp1_mid1_fu_278_p2 );
    sensitive << ( tmp1_fu_218_p2 );

    SC_METHOD(thread_tmp2_fu_322_p2);
    sensitive << ( icmp9_fu_310_p2 );
    sensitive << ( tmp_52_fu_316_p2 );

    SC_METHOD(thread_tmp_162_toint_fu_411_p1);
    sensitive << ( ap_phi_mux_tmp_64_phi_fu_145_p4 );

    SC_METHOD(thread_tmp_52_fu_316_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_224_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( c_mid2_fu_242_p3 );

    SC_METHOD(thread_tmp_82_fu_384_p1);
    sensitive << ( tmp_95_reg_451 );

    SC_METHOD(thread_tmp_84_fu_389_p1);
    sensitive << ( tmp_83_reg_456 );

    SC_METHOD(thread_tmp_86_fu_394_p1);
    sensitive << ( tmp_85_reg_461 );

    SC_METHOD(thread_tmp_88_fu_401_p1);
    sensitive << ( tmp_87_reg_466 );

    SC_METHOD(thread_tmp_90_fu_406_p1);
    sensitive << ( tmp_89_reg_471 );

    SC_METHOD(thread_tmp_93_fu_256_p4);
    sensitive << ( r_s_fu_250_p2 );

    SC_METHOD(thread_tmp_94_fu_300_p4);
    sensitive << ( c_mid2_fu_242_p3 );

    SC_METHOD(thread_tmp_95_fu_340_p1);
    sensitive << ( tensor_val_dout );

    SC_METHOD(thread_tmp_fu_196_p4);
    sensitive << ( r_reg_108 );

    SC_METHOD(thread_tmp_mid1_fu_272_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_224_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( r_s_fu_250_p2 );

    SC_METHOD(thread_tmp_s_fu_212_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( r_reg_108 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_fu_224_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter17 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_flow_calc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, outputs_din, "(port)outputs_din");
    sc_trace(mVcdFile, outputs_full_n, "(port)outputs_full_n");
    sc_trace(mVcdFile, outputs_write, "(port)outputs_write");
    sc_trace(mVcdFile, tensor_val_dout, "(port)tensor_val_dout");
    sc_trace(mVcdFile, tensor_val_empty_n, "(port)tensor_val_empty_n");
    sc_trace(mVcdFile, tensor_val_read, "(port)tensor_val_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, outputs_blk_n, "outputs_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_428, "exitcond_flatten_reg_428");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter17_reg, "exitcond_flatten_reg_428_pp0_iter17_reg");
    sc_trace(mVcdFile, tensor_val_blk_n, "tensor_val_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, or_cond3_reg_442, "or_cond3_reg_442");
    sc_trace(mVcdFile, indvar_flatten_reg_97, "indvar_flatten_reg_97");
    sc_trace(mVcdFile, r_reg_108, "r_reg_108");
    sc_trace(mVcdFile, c_reg_119, "c_reg_119");
    sc_trace(mVcdFile, exitcond_flatten_fu_224_p2, "exitcond_flatten_fu_224_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_predicate_op51_read_state3, "ap_predicate_op51_read_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter1_reg, "exitcond_flatten_reg_428_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter2_reg, "exitcond_flatten_reg_428_pp0_iter2_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter3_reg, "exitcond_flatten_reg_428_pp0_iter3_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter4_reg, "exitcond_flatten_reg_428_pp0_iter4_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter5_reg, "exitcond_flatten_reg_428_pp0_iter5_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter6_reg, "exitcond_flatten_reg_428_pp0_iter6_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter7_reg, "exitcond_flatten_reg_428_pp0_iter7_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter8_reg, "exitcond_flatten_reg_428_pp0_iter8_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter9_reg, "exitcond_flatten_reg_428_pp0_iter9_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter10_reg, "exitcond_flatten_reg_428_pp0_iter10_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter11_reg, "exitcond_flatten_reg_428_pp0_iter11_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter12_reg, "exitcond_flatten_reg_428_pp0_iter12_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter13_reg, "exitcond_flatten_reg_428_pp0_iter13_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter14_reg, "exitcond_flatten_reg_428_pp0_iter14_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter15_reg, "exitcond_flatten_reg_428_pp0_iter15_reg");
    sc_trace(mVcdFile, exitcond_flatten_reg_428_pp0_iter16_reg, "exitcond_flatten_reg_428_pp0_iter16_reg");
    sc_trace(mVcdFile, indvar_flatten_next_fu_230_p2, "indvar_flatten_next_fu_230_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, r_mid2_fu_292_p3, "r_mid2_fu_292_p3");
    sc_trace(mVcdFile, or_cond3_fu_328_p2, "or_cond3_fu_328_p2");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter1_reg, "or_cond3_reg_442_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter2_reg, "or_cond3_reg_442_pp0_iter2_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter3_reg, "or_cond3_reg_442_pp0_iter3_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter4_reg, "or_cond3_reg_442_pp0_iter4_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter5_reg, "or_cond3_reg_442_pp0_iter5_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter6_reg, "or_cond3_reg_442_pp0_iter6_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter7_reg, "or_cond3_reg_442_pp0_iter7_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter8_reg, "or_cond3_reg_442_pp0_iter8_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter9_reg, "or_cond3_reg_442_pp0_iter9_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter10_reg, "or_cond3_reg_442_pp0_iter10_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter11_reg, "or_cond3_reg_442_pp0_iter11_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter12_reg, "or_cond3_reg_442_pp0_iter12_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter13_reg, "or_cond3_reg_442_pp0_iter13_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter14_reg, "or_cond3_reg_442_pp0_iter14_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter15_reg, "or_cond3_reg_442_pp0_iter15_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter16_reg, "or_cond3_reg_442_pp0_iter16_reg");
    sc_trace(mVcdFile, or_cond3_reg_442_pp0_iter17_reg, "or_cond3_reg_442_pp0_iter17_reg");
    sc_trace(mVcdFile, c_4_fu_334_p2, "c_4_fu_334_p2");
    sc_trace(mVcdFile, tmp_95_fu_340_p1, "tmp_95_fu_340_p1");
    sc_trace(mVcdFile, tmp_95_reg_451, "tmp_95_reg_451");
    sc_trace(mVcdFile, tmp_83_reg_456, "tmp_83_reg_456");
    sc_trace(mVcdFile, tmp_85_reg_461, "tmp_85_reg_461");
    sc_trace(mVcdFile, tmp_87_reg_466, "tmp_87_reg_466");
    sc_trace(mVcdFile, tmp_89_reg_471, "tmp_89_reg_471");
    sc_trace(mVcdFile, tmp_82_fu_384_p1, "tmp_82_fu_384_p1");
    sc_trace(mVcdFile, tmp_84_fu_389_p1, "tmp_84_fu_389_p1");
    sc_trace(mVcdFile, tmp_86_fu_394_p1, "tmp_86_fu_394_p1");
    sc_trace(mVcdFile, tmp_88_fu_401_p1, "tmp_88_fu_401_p1");
    sc_trace(mVcdFile, tmp_90_fu_406_p1, "tmp_90_fu_406_p1");
    sc_trace(mVcdFile, grp_fu_164_p2, "grp_fu_164_p2");
    sc_trace(mVcdFile, tmp_54_reg_508, "tmp_54_reg_508");
    sc_trace(mVcdFile, grp_fu_168_p2, "grp_fu_168_p2");
    sc_trace(mVcdFile, tmp_55_reg_513, "tmp_55_reg_513");
    sc_trace(mVcdFile, grp_fu_172_p2, "grp_fu_172_p2");
    sc_trace(mVcdFile, tmp_56_reg_518, "tmp_56_reg_518");
    sc_trace(mVcdFile, grp_fu_176_p2, "grp_fu_176_p2");
    sc_trace(mVcdFile, tmp_57_reg_523, "tmp_57_reg_523");
    sc_trace(mVcdFile, grp_fu_180_p2, "grp_fu_180_p2");
    sc_trace(mVcdFile, tmp_60_reg_528, "tmp_60_reg_528");
    sc_trace(mVcdFile, grp_fu_184_p2, "grp_fu_184_p2");
    sc_trace(mVcdFile, tmp_61_reg_533, "tmp_61_reg_533");
    sc_trace(mVcdFile, grp_fu_152_p2, "grp_fu_152_p2");
    sc_trace(mVcdFile, denom_reg_538, "denom_reg_538");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, tmp_58_reg_544, "tmp_58_reg_544");
    sc_trace(mVcdFile, grp_fu_160_p2, "grp_fu_160_p2");
    sc_trace(mVcdFile, tmp_62_reg_549, "tmp_62_reg_549");
    sc_trace(mVcdFile, grp_fu_188_p2, "grp_fu_188_p2");
    sc_trace(mVcdFile, tmp_59_reg_554, "tmp_59_reg_554");
    sc_trace(mVcdFile, grp_fu_192_p2, "grp_fu_192_p2");
    sc_trace(mVcdFile, tmp_63_reg_559, "tmp_63_reg_559");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_phi_mux_buf_1_load_phi_fu_134_p4, "ap_phi_mux_buf_1_load_phi_fu_134_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter18_buf_1_load_reg_130, "ap_phi_reg_pp0_iter18_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_buf_1_load_reg_130, "ap_phi_reg_pp0_iter0_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_buf_1_load_reg_130, "ap_phi_reg_pp0_iter1_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_buf_1_load_reg_130, "ap_phi_reg_pp0_iter2_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_buf_1_load_reg_130, "ap_phi_reg_pp0_iter3_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter4_buf_1_load_reg_130, "ap_phi_reg_pp0_iter4_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter5_buf_1_load_reg_130, "ap_phi_reg_pp0_iter5_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter6_buf_1_load_reg_130, "ap_phi_reg_pp0_iter6_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter7_buf_1_load_reg_130, "ap_phi_reg_pp0_iter7_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter8_buf_1_load_reg_130, "ap_phi_reg_pp0_iter8_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter9_buf_1_load_reg_130, "ap_phi_reg_pp0_iter9_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter10_buf_1_load_reg_130, "ap_phi_reg_pp0_iter10_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter11_buf_1_load_reg_130, "ap_phi_reg_pp0_iter11_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter12_buf_1_load_reg_130, "ap_phi_reg_pp0_iter12_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter13_buf_1_load_reg_130, "ap_phi_reg_pp0_iter13_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter14_buf_1_load_reg_130, "ap_phi_reg_pp0_iter14_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter15_buf_1_load_reg_130, "ap_phi_reg_pp0_iter15_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter16_buf_1_load_reg_130, "ap_phi_reg_pp0_iter16_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter17_buf_1_load_reg_130, "ap_phi_reg_pp0_iter17_buf_1_load_reg_130");
    sc_trace(mVcdFile, ap_phi_mux_tmp_64_phi_fu_145_p4, "ap_phi_mux_tmp_64_phi_fu_145_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter18_tmp_64_reg_141, "ap_phi_reg_pp0_iter18_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_64_reg_141, "ap_phi_reg_pp0_iter0_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_64_reg_141, "ap_phi_reg_pp0_iter1_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_tmp_64_reg_141, "ap_phi_reg_pp0_iter2_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_tmp_64_reg_141, "ap_phi_reg_pp0_iter3_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter4_tmp_64_reg_141, "ap_phi_reg_pp0_iter4_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter5_tmp_64_reg_141, "ap_phi_reg_pp0_iter5_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter6_tmp_64_reg_141, "ap_phi_reg_pp0_iter6_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter7_tmp_64_reg_141, "ap_phi_reg_pp0_iter7_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter8_tmp_64_reg_141, "ap_phi_reg_pp0_iter8_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter9_tmp_64_reg_141, "ap_phi_reg_pp0_iter9_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter10_tmp_64_reg_141, "ap_phi_reg_pp0_iter10_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter11_tmp_64_reg_141, "ap_phi_reg_pp0_iter11_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter12_tmp_64_reg_141, "ap_phi_reg_pp0_iter12_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter13_tmp_64_reg_141, "ap_phi_reg_pp0_iter13_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter14_tmp_64_reg_141, "ap_phi_reg_pp0_iter14_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter15_tmp_64_reg_141, "ap_phi_reg_pp0_iter15_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter16_tmp_64_reg_141, "ap_phi_reg_pp0_iter16_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter17_tmp_64_reg_141, "ap_phi_reg_pp0_iter17_tmp_64_reg_141");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_196_p4, "tmp_fu_196_p4");
    sc_trace(mVcdFile, icmp_fu_206_p2, "icmp_fu_206_p2");
    sc_trace(mVcdFile, tmp_s_fu_212_p2, "tmp_s_fu_212_p2");
    sc_trace(mVcdFile, exitcond7_fu_236_p2, "exitcond7_fu_236_p2");
    sc_trace(mVcdFile, r_s_fu_250_p2, "r_s_fu_250_p2");
    sc_trace(mVcdFile, tmp_93_fu_256_p4, "tmp_93_fu_256_p4");
    sc_trace(mVcdFile, icmp8_fu_266_p2, "icmp8_fu_266_p2");
    sc_trace(mVcdFile, tmp_mid1_fu_272_p2, "tmp_mid1_fu_272_p2");
    sc_trace(mVcdFile, tmp1_mid1_fu_278_p2, "tmp1_mid1_fu_278_p2");
    sc_trace(mVcdFile, tmp1_fu_218_p2, "tmp1_fu_218_p2");
    sc_trace(mVcdFile, c_mid2_fu_242_p3, "c_mid2_fu_242_p3");
    sc_trace(mVcdFile, tmp_94_fu_300_p4, "tmp_94_fu_300_p4");
    sc_trace(mVcdFile, icmp9_fu_310_p2, "icmp9_fu_310_p2");
    sc_trace(mVcdFile, tmp_52_fu_316_p2, "tmp_52_fu_316_p2");
    sc_trace(mVcdFile, tmp2_fu_322_p2, "tmp2_fu_322_p2");
    sc_trace(mVcdFile, tmp1_mid2_fu_284_p3, "tmp1_mid2_fu_284_p3");
    sc_trace(mVcdFile, buf_1_load_toint_fu_415_p1, "buf_1_load_toint_fu_415_p1");
    sc_trace(mVcdFile, tmp_162_toint_fu_411_p1, "tmp_162_toint_fu_411_p1");
    sc_trace(mVcdFile, grp_fu_152_ce, "grp_fu_152_ce");
    sc_trace(mVcdFile, grp_fu_156_ce, "grp_fu_156_ce");
    sc_trace(mVcdFile, grp_fu_160_ce, "grp_fu_160_ce");
    sc_trace(mVcdFile, grp_fu_164_ce, "grp_fu_164_ce");
    sc_trace(mVcdFile, grp_fu_168_ce, "grp_fu_168_ce");
    sc_trace(mVcdFile, grp_fu_172_ce, "grp_fu_172_ce");
    sc_trace(mVcdFile, grp_fu_176_ce, "grp_fu_176_ce");
    sc_trace(mVcdFile, grp_fu_180_ce, "grp_fu_180_ce");
    sc_trace(mVcdFile, grp_fu_184_ce, "grp_fu_184_ce");
    sc_trace(mVcdFile, grp_fu_188_ce, "grp_fu_188_ce");
    sc_trace(mVcdFile, grp_fu_192_ce, "grp_fu_192_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_127, "ap_condition_127");
#endif

    }
}

a0_flow_calc::~a0_flow_calc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete optical_flow_fsubDeQ_U241;
    delete optical_flow_fsubDeQ_U242;
    delete optical_flow_fsubDeQ_U243;
    delete optical_flow_fmulibs_U244;
    delete optical_flow_fmulibs_U245;
    delete optical_flow_fmulibs_U246;
    delete optical_flow_fmulibs_U247;
    delete optical_flow_fmulibs_U248;
    delete optical_flow_fmulibs_U249;
    delete optical_flow_fdivbkb_U250;
    delete optical_flow_fdivbkb_U251;
}

void a0_flow_calc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter18 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_127.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_224_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, or_cond3_fu_328_p2.read()))) {
            ap_phi_reg_pp0_iter1_buf_1_load_reg_130 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_buf_1_load_reg_130 = ap_phi_reg_pp0_iter0_buf_1_load_reg_130.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_127.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_224_p2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, or_cond3_fu_328_p2.read()))) {
            ap_phi_reg_pp0_iter1_tmp_64_reg_141 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_tmp_64_reg_141 = ap_phi_reg_pp0_iter0_tmp_64_reg_141.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_224_p2.read()))) {
        c_reg_119 = c_4_fu_334_p2.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        c_reg_119 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_224_p2.read()))) {
        indvar_flatten_reg_97 = indvar_flatten_next_fu_230_p2.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten_reg_97 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_224_p2.read()))) {
        r_reg_108 = r_mid2_fu_292_p3.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        r_reg_108 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        ap_phi_reg_pp0_iter10_buf_1_load_reg_130 = ap_phi_reg_pp0_iter9_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter10_tmp_64_reg_141 = ap_phi_reg_pp0_iter9_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        ap_phi_reg_pp0_iter11_buf_1_load_reg_130 = ap_phi_reg_pp0_iter10_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter11_tmp_64_reg_141 = ap_phi_reg_pp0_iter10_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter11.read()))) {
        ap_phi_reg_pp0_iter12_buf_1_load_reg_130 = ap_phi_reg_pp0_iter11_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter12_tmp_64_reg_141 = ap_phi_reg_pp0_iter11_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter12.read()))) {
        ap_phi_reg_pp0_iter13_buf_1_load_reg_130 = ap_phi_reg_pp0_iter12_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter13_tmp_64_reg_141 = ap_phi_reg_pp0_iter12_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()))) {
        ap_phi_reg_pp0_iter14_buf_1_load_reg_130 = ap_phi_reg_pp0_iter13_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter14_tmp_64_reg_141 = ap_phi_reg_pp0_iter13_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter14.read()))) {
        ap_phi_reg_pp0_iter15_buf_1_load_reg_130 = ap_phi_reg_pp0_iter14_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter15_tmp_64_reg_141 = ap_phi_reg_pp0_iter14_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter15.read()))) {
        ap_phi_reg_pp0_iter16_buf_1_load_reg_130 = ap_phi_reg_pp0_iter15_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter16_tmp_64_reg_141 = ap_phi_reg_pp0_iter15_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()))) {
        ap_phi_reg_pp0_iter17_buf_1_load_reg_130 = ap_phi_reg_pp0_iter16_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter17_tmp_64_reg_141 = ap_phi_reg_pp0_iter16_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()))) {
        ap_phi_reg_pp0_iter18_buf_1_load_reg_130 = ap_phi_reg_pp0_iter17_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter18_tmp_64_reg_141 = ap_phi_reg_pp0_iter17_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter2_buf_1_load_reg_130 = ap_phi_reg_pp0_iter1_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter2_tmp_64_reg_141 = ap_phi_reg_pp0_iter1_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_phi_reg_pp0_iter3_buf_1_load_reg_130 = ap_phi_reg_pp0_iter2_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter3_tmp_64_reg_141 = ap_phi_reg_pp0_iter2_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        ap_phi_reg_pp0_iter4_buf_1_load_reg_130 = ap_phi_reg_pp0_iter3_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter4_tmp_64_reg_141 = ap_phi_reg_pp0_iter3_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        ap_phi_reg_pp0_iter5_buf_1_load_reg_130 = ap_phi_reg_pp0_iter4_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter5_tmp_64_reg_141 = ap_phi_reg_pp0_iter4_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        ap_phi_reg_pp0_iter6_buf_1_load_reg_130 = ap_phi_reg_pp0_iter5_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter6_tmp_64_reg_141 = ap_phi_reg_pp0_iter5_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        ap_phi_reg_pp0_iter7_buf_1_load_reg_130 = ap_phi_reg_pp0_iter6_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter7_tmp_64_reg_141 = ap_phi_reg_pp0_iter6_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        ap_phi_reg_pp0_iter8_buf_1_load_reg_130 = ap_phi_reg_pp0_iter7_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter8_tmp_64_reg_141 = ap_phi_reg_pp0_iter7_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        ap_phi_reg_pp0_iter9_buf_1_load_reg_130 = ap_phi_reg_pp0_iter8_buf_1_load_reg_130.read();
        ap_phi_reg_pp0_iter9_tmp_64_reg_141 = ap_phi_reg_pp0_iter8_tmp_64_reg_141.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_428_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_442_pp0_iter7_reg.read()))) {
        denom_reg_538 = grp_fu_152_p2.read();
        tmp_58_reg_544 = grp_fu_156_p2.read();
        tmp_62_reg_549 = grp_fu_160_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_428 = exitcond_flatten_fu_224_p2.read();
        exitcond_flatten_reg_428_pp0_iter1_reg = exitcond_flatten_reg_428.read();
        or_cond3_reg_442_pp0_iter1_reg = or_cond3_reg_442.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_flatten_reg_428_pp0_iter10_reg = exitcond_flatten_reg_428_pp0_iter9_reg.read();
        exitcond_flatten_reg_428_pp0_iter11_reg = exitcond_flatten_reg_428_pp0_iter10_reg.read();
        exitcond_flatten_reg_428_pp0_iter12_reg = exitcond_flatten_reg_428_pp0_iter11_reg.read();
        exitcond_flatten_reg_428_pp0_iter13_reg = exitcond_flatten_reg_428_pp0_iter12_reg.read();
        exitcond_flatten_reg_428_pp0_iter14_reg = exitcond_flatten_reg_428_pp0_iter13_reg.read();
        exitcond_flatten_reg_428_pp0_iter15_reg = exitcond_flatten_reg_428_pp0_iter14_reg.read();
        exitcond_flatten_reg_428_pp0_iter16_reg = exitcond_flatten_reg_428_pp0_iter15_reg.read();
        exitcond_flatten_reg_428_pp0_iter17_reg = exitcond_flatten_reg_428_pp0_iter16_reg.read();
        exitcond_flatten_reg_428_pp0_iter2_reg = exitcond_flatten_reg_428_pp0_iter1_reg.read();
        exitcond_flatten_reg_428_pp0_iter3_reg = exitcond_flatten_reg_428_pp0_iter2_reg.read();
        exitcond_flatten_reg_428_pp0_iter4_reg = exitcond_flatten_reg_428_pp0_iter3_reg.read();
        exitcond_flatten_reg_428_pp0_iter5_reg = exitcond_flatten_reg_428_pp0_iter4_reg.read();
        exitcond_flatten_reg_428_pp0_iter6_reg = exitcond_flatten_reg_428_pp0_iter5_reg.read();
        exitcond_flatten_reg_428_pp0_iter7_reg = exitcond_flatten_reg_428_pp0_iter6_reg.read();
        exitcond_flatten_reg_428_pp0_iter8_reg = exitcond_flatten_reg_428_pp0_iter7_reg.read();
        exitcond_flatten_reg_428_pp0_iter9_reg = exitcond_flatten_reg_428_pp0_iter8_reg.read();
        or_cond3_reg_442_pp0_iter10_reg = or_cond3_reg_442_pp0_iter9_reg.read();
        or_cond3_reg_442_pp0_iter11_reg = or_cond3_reg_442_pp0_iter10_reg.read();
        or_cond3_reg_442_pp0_iter12_reg = or_cond3_reg_442_pp0_iter11_reg.read();
        or_cond3_reg_442_pp0_iter13_reg = or_cond3_reg_442_pp0_iter12_reg.read();
        or_cond3_reg_442_pp0_iter14_reg = or_cond3_reg_442_pp0_iter13_reg.read();
        or_cond3_reg_442_pp0_iter15_reg = or_cond3_reg_442_pp0_iter14_reg.read();
        or_cond3_reg_442_pp0_iter16_reg = or_cond3_reg_442_pp0_iter15_reg.read();
        or_cond3_reg_442_pp0_iter17_reg = or_cond3_reg_442_pp0_iter16_reg.read();
        or_cond3_reg_442_pp0_iter2_reg = or_cond3_reg_442_pp0_iter1_reg.read();
        or_cond3_reg_442_pp0_iter3_reg = or_cond3_reg_442_pp0_iter2_reg.read();
        or_cond3_reg_442_pp0_iter4_reg = or_cond3_reg_442_pp0_iter3_reg.read();
        or_cond3_reg_442_pp0_iter5_reg = or_cond3_reg_442_pp0_iter4_reg.read();
        or_cond3_reg_442_pp0_iter6_reg = or_cond3_reg_442_pp0_iter5_reg.read();
        or_cond3_reg_442_pp0_iter7_reg = or_cond3_reg_442_pp0_iter6_reg.read();
        or_cond3_reg_442_pp0_iter8_reg = or_cond3_reg_442_pp0_iter7_reg.read();
        or_cond3_reg_442_pp0_iter9_reg = or_cond3_reg_442_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_224_p2.read()))) {
        or_cond3_reg_442 = or_cond3_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_428_pp0_iter3_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_442_pp0_iter3_reg.read()))) {
        tmp_54_reg_508 = grp_fu_164_p2.read();
        tmp_55_reg_513 = grp_fu_168_p2.read();
        tmp_56_reg_518 = grp_fu_172_p2.read();
        tmp_57_reg_523 = grp_fu_176_p2.read();
        tmp_60_reg_528 = grp_fu_180_p2.read();
        tmp_61_reg_533 = grp_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_428_pp0_iter16_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_442_pp0_iter16_reg.read()))) {
        tmp_59_reg_554 = grp_fu_188_p2.read();
        tmp_63_reg_559 = grp_fu_192_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_83_reg_456 = tensor_val_dout.read().range(63, 32);
        tmp_85_reg_461 = tensor_val_dout.read().range(127, 96);
        tmp_87_reg_466 = tensor_val_dout.read().range(191, 160);
        tmp_89_reg_471 = tensor_val_dout.read().range(159, 128);
        tmp_95_reg_451 = tmp_95_fu_340_p1.read();
    }
}

void a0_flow_calc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void a0_flow_calc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void a0_flow_calc::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[2];
}

void a0_flow_calc::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tensor_val_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state3.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outputs_full_n.read())));
}

void a0_flow_calc::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tensor_val_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state3.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outputs_full_n.read())));
}

void a0_flow_calc::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, tensor_val_empty_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state3.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, outputs_full_n.read())));
}

void a0_flow_calc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void a0_flow_calc::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = (esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, outputs_full_n.read()));
}

void a0_flow_calc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, tensor_val_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state3.read()));
}

void a0_flow_calc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_flow_calc::thread_ap_condition_127() {
    ap_condition_127 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1));
}

void a0_flow_calc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_224_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void a0_flow_calc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void a0_flow_calc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_ap_phi_mux_buf_1_load_phi_fu_134_p4() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_442_pp0_iter17_reg.read()))) {
        ap_phi_mux_buf_1_load_phi_fu_134_p4 = tmp_63_reg_559.read();
    } else {
        ap_phi_mux_buf_1_load_phi_fu_134_p4 = ap_phi_reg_pp0_iter18_buf_1_load_reg_130.read();
    }
}

void a0_flow_calc::thread_ap_phi_mux_tmp_64_phi_fu_145_p4() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond3_reg_442_pp0_iter17_reg.read()))) {
        ap_phi_mux_tmp_64_phi_fu_145_p4 = tmp_59_reg_554.read();
    } else {
        ap_phi_mux_tmp_64_phi_fu_145_p4 = ap_phi_reg_pp0_iter18_tmp_64_reg_141.read();
    }
}

void a0_flow_calc::thread_ap_phi_reg_pp0_iter0_buf_1_load_reg_130() {
    ap_phi_reg_pp0_iter0_buf_1_load_reg_130 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void a0_flow_calc::thread_ap_phi_reg_pp0_iter0_tmp_64_reg_141() {
    ap_phi_reg_pp0_iter0_tmp_64_reg_141 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void a0_flow_calc::thread_ap_predicate_op51_read_state3() {
    ap_predicate_op51_read_state3 = (esl_seteq<1,1,1>(exitcond_flatten_reg_428.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond3_reg_442.read(), ap_const_lv1_1));
}

void a0_flow_calc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_buf_1_load_toint_fu_415_p1() {
    buf_1_load_toint_fu_415_p1 = ap_phi_mux_buf_1_load_phi_fu_134_p4.read();
}

void a0_flow_calc::thread_c_4_fu_334_p2() {
    c_4_fu_334_p2 = (!c_mid2_fu_242_p3.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(c_mid2_fu_242_p3.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void a0_flow_calc::thread_c_mid2_fu_242_p3() {
    c_mid2_fu_242_p3 = (!exitcond7_fu_236_p2.read()[0].is_01())? sc_lv<11>(): ((exitcond7_fu_236_p2.read()[0].to_bool())? ap_const_lv11_0: c_reg_119.read());
}

void a0_flow_calc::thread_exitcond7_fu_236_p2() {
    exitcond7_fu_236_p2 = (!c_reg_119.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(c_reg_119.read() == ap_const_lv11_400);
}

void a0_flow_calc::thread_exitcond_flatten_fu_224_p2() {
    exitcond_flatten_fu_224_p2 = (!indvar_flatten_reg_97.read().is_01() || !ap_const_lv19_6D000.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_97.read() == ap_const_lv19_6D000);
}

void a0_flow_calc::thread_grp_fu_152_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_152_ce = ap_const_logic_1;
    } else {
        grp_fu_152_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_156_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_156_ce = ap_const_logic_1;
    } else {
        grp_fu_156_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_160_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_160_ce = ap_const_logic_1;
    } else {
        grp_fu_160_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_164_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_164_ce = ap_const_logic_1;
    } else {
        grp_fu_164_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_168_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_168_ce = ap_const_logic_1;
    } else {
        grp_fu_168_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_172_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_172_ce = ap_const_logic_1;
    } else {
        grp_fu_172_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_176_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_176_ce = ap_const_logic_1;
    } else {
        grp_fu_176_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_180_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_180_ce = ap_const_logic_1;
    } else {
        grp_fu_180_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_184_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_184_ce = ap_const_logic_1;
    } else {
        grp_fu_184_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_188_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_188_ce = ap_const_logic_1;
    } else {
        grp_fu_188_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_grp_fu_192_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_192_ce = ap_const_logic_1;
    } else {
        grp_fu_192_ce = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_icmp8_fu_266_p2() {
    icmp8_fu_266_p2 = (!tmp_93_fu_256_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_93_fu_256_p4.read() != ap_const_lv8_0);
}

void a0_flow_calc::thread_icmp9_fu_310_p2() {
    icmp9_fu_310_p2 = (!tmp_94_fu_300_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_94_fu_300_p4.read() != ap_const_lv10_0);
}

void a0_flow_calc::thread_icmp_fu_206_p2() {
    icmp_fu_206_p2 = (!tmp_fu_196_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_196_p4.read() != ap_const_lv8_0);
}

void a0_flow_calc::thread_indvar_flatten_next_fu_230_p2() {
    indvar_flatten_next_fu_230_p2 = (!indvar_flatten_reg_97.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(indvar_flatten_reg_97.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void a0_flow_calc::thread_or_cond3_fu_328_p2() {
    or_cond3_fu_328_p2 = (tmp2_fu_322_p2.read() & tmp1_mid2_fu_284_p3.read());
}

void a0_flow_calc::thread_outputs_blk_n() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0))) {
        outputs_blk_n = outputs_full_n.read();
    } else {
        outputs_blk_n = ap_const_logic_1;
    }
}

void a0_flow_calc::thread_outputs_din() {
    outputs_din = esl_concat<32,32>(buf_1_load_toint_fu_415_p1.read(), tmp_162_toint_fu_411_p1.read());
}

void a0_flow_calc::thread_outputs_write() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_428_pp0_iter17_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        outputs_write = ap_const_logic_1;
    } else {
        outputs_write = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_r_mid2_fu_292_p3() {
    r_mid2_fu_292_p3 = (!exitcond7_fu_236_p2.read()[0].is_01())? sc_lv<9>(): ((exitcond7_fu_236_p2.read()[0].to_bool())? r_s_fu_250_p2.read(): r_reg_108.read());
}

void a0_flow_calc::thread_r_s_fu_250_p2() {
    r_s_fu_250_p2 = (!r_reg_108.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(r_reg_108.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void a0_flow_calc::thread_tensor_val_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_428.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(or_cond3_reg_442.read(), ap_const_lv1_1))) {
        tensor_val_blk_n = tensor_val_empty_n.read();
    } else {
        tensor_val_blk_n = ap_const_logic_1;
    }
}

void a0_flow_calc::thread_tensor_val_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op51_read_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tensor_val_read = ap_const_logic_1;
    } else {
        tensor_val_read = ap_const_logic_0;
    }
}

void a0_flow_calc::thread_tmp1_fu_218_p2() {
    tmp1_fu_218_p2 = (icmp_fu_206_p2.read() & tmp_s_fu_212_p2.read());
}

void a0_flow_calc::thread_tmp1_mid1_fu_278_p2() {
    tmp1_mid1_fu_278_p2 = (icmp8_fu_266_p2.read() & tmp_mid1_fu_272_p2.read());
}

void a0_flow_calc::thread_tmp1_mid2_fu_284_p3() {
    tmp1_mid2_fu_284_p3 = (!exitcond7_fu_236_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond7_fu_236_p2.read()[0].to_bool())? tmp1_mid1_fu_278_p2.read(): tmp1_fu_218_p2.read());
}

void a0_flow_calc::thread_tmp2_fu_322_p2() {
    tmp2_fu_322_p2 = (icmp9_fu_310_p2.read() & tmp_52_fu_316_p2.read());
}

void a0_flow_calc::thread_tmp_162_toint_fu_411_p1() {
    tmp_162_toint_fu_411_p1 = ap_phi_mux_tmp_64_phi_fu_145_p4.read();
}

void a0_flow_calc::thread_tmp_52_fu_316_p2() {
    tmp_52_fu_316_p2 = (!c_mid2_fu_242_p3.read().is_01() || !ap_const_lv11_3FE.is_01())? sc_lv<1>(): (sc_biguint<11>(c_mid2_fu_242_p3.read()) < sc_biguint<11>(ap_const_lv11_3FE));
}

void a0_flow_calc::thread_tmp_82_fu_384_p1() {
    tmp_82_fu_384_p1 = tmp_95_reg_451.read();
}

void a0_flow_calc::thread_tmp_84_fu_389_p1() {
    tmp_84_fu_389_p1 = tmp_83_reg_456.read();
}

void a0_flow_calc::thread_tmp_86_fu_394_p1() {
    tmp_86_fu_394_p1 = tmp_85_reg_461.read();
}

void a0_flow_calc::thread_tmp_88_fu_401_p1() {
    tmp_88_fu_401_p1 = tmp_87_reg_466.read();
}

void a0_flow_calc::thread_tmp_90_fu_406_p1() {
    tmp_90_fu_406_p1 = tmp_89_reg_471.read();
}

void a0_flow_calc::thread_tmp_93_fu_256_p4() {
    tmp_93_fu_256_p4 = r_s_fu_250_p2.read().range(8, 1);
}

void a0_flow_calc::thread_tmp_94_fu_300_p4() {
    tmp_94_fu_300_p4 = c_mid2_fu_242_p3.read().range(10, 1);
}

void a0_flow_calc::thread_tmp_95_fu_340_p1() {
    tmp_95_fu_340_p1 = tensor_val_dout.read().range(32-1, 0);
}

void a0_flow_calc::thread_tmp_fu_196_p4() {
    tmp_fu_196_p4 = r_reg_108.read().range(8, 1);
}

void a0_flow_calc::thread_tmp_mid1_fu_272_p2() {
    tmp_mid1_fu_272_p2 = (!r_s_fu_250_p2.read().is_01() || !ap_const_lv9_1B2.is_01())? sc_lv<1>(): (sc_biguint<9>(r_s_fu_250_p2.read()) < sc_biguint<9>(ap_const_lv9_1B2));
}

void a0_flow_calc::thread_tmp_s_fu_212_p2() {
    tmp_s_fu_212_p2 = (!r_reg_108.read().is_01() || !ap_const_lv9_1B2.is_01())? sc_lv<1>(): (sc_biguint<9>(r_reg_108.read()) < sc_biguint<9>(ap_const_lv9_1B2));
}

void a0_flow_calc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(exitcond_flatten_fu_224_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) && !(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter17.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter17.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter18.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(exitcond_flatten_fu_224_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

