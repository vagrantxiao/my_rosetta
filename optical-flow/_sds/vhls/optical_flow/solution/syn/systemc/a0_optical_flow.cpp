// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_optical_flow.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_optical_flow::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<64> a0_optical_flow::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_logic a0_optical_flow::ap_const_logic_1 = sc_dt::Log_1;

a0_optical_flow::a0_optical_flow(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Loop_FRAMES_CP_OUTER_U0 = new a0_Loop_FRAMES_CP_OUTER("Loop_FRAMES_CP_OUTER_U0");
    Loop_FRAMES_CP_OUTER_U0->ap_clk(ap_clk);
    Loop_FRAMES_CP_OUTER_U0->ap_rst(ap_rst_n_inv);
    Loop_FRAMES_CP_OUTER_U0->ap_start(Loop_FRAMES_CP_OUTER_U0_ap_start);
    Loop_FRAMES_CP_OUTER_U0->start_full_n(Loop_FRAMES_CP_OUTER_U0_start_full_n);
    Loop_FRAMES_CP_OUTER_U0->ap_done(Loop_FRAMES_CP_OUTER_U0_ap_done);
    Loop_FRAMES_CP_OUTER_U0->ap_continue(Loop_FRAMES_CP_OUTER_U0_ap_continue);
    Loop_FRAMES_CP_OUTER_U0->ap_idle(Loop_FRAMES_CP_OUTER_U0_ap_idle);
    Loop_FRAMES_CP_OUTER_U0->ap_ready(Loop_FRAMES_CP_OUTER_U0_ap_ready);
    Loop_FRAMES_CP_OUTER_U0->start_out(Loop_FRAMES_CP_OUTER_U0_start_out);
    Loop_FRAMES_CP_OUTER_U0->start_write(Loop_FRAMES_CP_OUTER_U0_start_write);
    Loop_FRAMES_CP_OUTER_U0->frames_V_dout(frames_V_dout);
    Loop_FRAMES_CP_OUTER_U0->frames_V_empty_n(frames_V_empty_n);
    Loop_FRAMES_CP_OUTER_U0->frames_V_read(Loop_FRAMES_CP_OUTER_U0_frames_V_read);
    Loop_FRAMES_CP_OUTER_U0->frame1_a_din(Loop_FRAMES_CP_OUTER_U0_frame1_a_din);
    Loop_FRAMES_CP_OUTER_U0->frame1_a_full_n(frame1_a_full_n);
    Loop_FRAMES_CP_OUTER_U0->frame1_a_write(Loop_FRAMES_CP_OUTER_U0_frame1_a_write);
    Loop_FRAMES_CP_OUTER_U0->frame2_a_din(Loop_FRAMES_CP_OUTER_U0_frame2_a_din);
    Loop_FRAMES_CP_OUTER_U0->frame2_a_full_n(frame2_a_full_n);
    Loop_FRAMES_CP_OUTER_U0->frame2_a_write(Loop_FRAMES_CP_OUTER_U0_frame2_a_write);
    Loop_FRAMES_CP_OUTER_U0->frame3_a_din(Loop_FRAMES_CP_OUTER_U0_frame3_a_din);
    Loop_FRAMES_CP_OUTER_U0->frame3_a_full_n(frame3_a_full_n);
    Loop_FRAMES_CP_OUTER_U0->frame3_a_write(Loop_FRAMES_CP_OUTER_U0_frame3_a_write);
    Loop_FRAMES_CP_OUTER_U0->frame3_b_din(Loop_FRAMES_CP_OUTER_U0_frame3_b_din);
    Loop_FRAMES_CP_OUTER_U0->frame3_b_full_n(frame3_b_full_n);
    Loop_FRAMES_CP_OUTER_U0->frame3_b_write(Loop_FRAMES_CP_OUTER_U0_frame3_b_write);
    Loop_FRAMES_CP_OUTER_U0->frame4_a_din(Loop_FRAMES_CP_OUTER_U0_frame4_a_din);
    Loop_FRAMES_CP_OUTER_U0->frame4_a_full_n(frame4_a_full_n);
    Loop_FRAMES_CP_OUTER_U0->frame4_a_write(Loop_FRAMES_CP_OUTER_U0_frame4_a_write);
    Loop_FRAMES_CP_OUTER_U0->frame5_a_din(Loop_FRAMES_CP_OUTER_U0_frame5_a_din);
    Loop_FRAMES_CP_OUTER_U0->frame5_a_full_n(frame5_a_full_n);
    Loop_FRAMES_CP_OUTER_U0->frame5_a_write(Loop_FRAMES_CP_OUTER_U0_frame5_a_write);
    gradient_xy_calc_U0 = new a0_gradient_xy_calc("gradient_xy_calc_U0");
    gradient_xy_calc_U0->ap_clk(ap_clk);
    gradient_xy_calc_U0->ap_rst(ap_rst_n_inv);
    gradient_xy_calc_U0->ap_start(gradient_xy_calc_U0_ap_start);
    gradient_xy_calc_U0->start_full_n(start_for_gradient_weight_y_U0_full_n);
    gradient_xy_calc_U0->ap_done(gradient_xy_calc_U0_ap_done);
    gradient_xy_calc_U0->ap_continue(gradient_xy_calc_U0_ap_continue);
    gradient_xy_calc_U0->ap_idle(gradient_xy_calc_U0_ap_idle);
    gradient_xy_calc_U0->ap_ready(gradient_xy_calc_U0_ap_ready);
    gradient_xy_calc_U0->start_out(gradient_xy_calc_U0_start_out);
    gradient_xy_calc_U0->start_write(gradient_xy_calc_U0_start_write);
    gradient_xy_calc_U0->frame3_a_dout(frame3_a_dout);
    gradient_xy_calc_U0->frame3_a_empty_n(frame3_a_empty_n);
    gradient_xy_calc_U0->frame3_a_read(gradient_xy_calc_U0_frame3_a_read);
    gradient_xy_calc_U0->gradient_x_din(gradient_xy_calc_U0_gradient_x_din);
    gradient_xy_calc_U0->gradient_x_full_n(gradient_x_full_n);
    gradient_xy_calc_U0->gradient_x_write(gradient_xy_calc_U0_gradient_x_write);
    gradient_xy_calc_U0->gradient_y_din(gradient_xy_calc_U0_gradient_y_din);
    gradient_xy_calc_U0->gradient_y_full_n(gradient_y_full_n);
    gradient_xy_calc_U0->gradient_y_write(gradient_xy_calc_U0_gradient_y_write);
    gradient_z_calc_U0 = new a0_gradient_z_calc("gradient_z_calc_U0");
    gradient_z_calc_U0->ap_clk(ap_clk);
    gradient_z_calc_U0->ap_rst(ap_rst_n_inv);
    gradient_z_calc_U0->ap_start(gradient_z_calc_U0_ap_start);
    gradient_z_calc_U0->ap_done(gradient_z_calc_U0_ap_done);
    gradient_z_calc_U0->ap_continue(gradient_z_calc_U0_ap_continue);
    gradient_z_calc_U0->ap_idle(gradient_z_calc_U0_ap_idle);
    gradient_z_calc_U0->ap_ready(gradient_z_calc_U0_ap_ready);
    gradient_z_calc_U0->frame1_a_dout(frame1_a_dout);
    gradient_z_calc_U0->frame1_a_empty_n(frame1_a_empty_n);
    gradient_z_calc_U0->frame1_a_read(gradient_z_calc_U0_frame1_a_read);
    gradient_z_calc_U0->frame2_a_dout(frame2_a_dout);
    gradient_z_calc_U0->frame2_a_empty_n(frame2_a_empty_n);
    gradient_z_calc_U0->frame2_a_read(gradient_z_calc_U0_frame2_a_read);
    gradient_z_calc_U0->frame3_b_dout(frame3_b_dout);
    gradient_z_calc_U0->frame3_b_empty_n(frame3_b_empty_n);
    gradient_z_calc_U0->frame3_b_read(gradient_z_calc_U0_frame3_b_read);
    gradient_z_calc_U0->frame4_a_dout(frame4_a_dout);
    gradient_z_calc_U0->frame4_a_empty_n(frame4_a_empty_n);
    gradient_z_calc_U0->frame4_a_read(gradient_z_calc_U0_frame4_a_read);
    gradient_z_calc_U0->frame5_a_dout(frame5_a_dout);
    gradient_z_calc_U0->frame5_a_empty_n(frame5_a_empty_n);
    gradient_z_calc_U0->frame5_a_read(gradient_z_calc_U0_frame5_a_read);
    gradient_z_calc_U0->gradient_z_din(gradient_z_calc_U0_gradient_z_din);
    gradient_z_calc_U0->gradient_z_full_n(gradient_z_full_n);
    gradient_z_calc_U0->gradient_z_write(gradient_z_calc_U0_gradient_z_write);
    gradient_weight_y_U0 = new a0_gradient_weight_y("gradient_weight_y_U0");
    gradient_weight_y_U0->ap_clk(ap_clk);
    gradient_weight_y_U0->ap_rst(ap_rst_n_inv);
    gradient_weight_y_U0->ap_start(gradient_weight_y_U0_ap_start);
    gradient_weight_y_U0->start_full_n(start_for_gradient_weight_x_U0_full_n);
    gradient_weight_y_U0->ap_done(gradient_weight_y_U0_ap_done);
    gradient_weight_y_U0->ap_continue(gradient_weight_y_U0_ap_continue);
    gradient_weight_y_U0->ap_idle(gradient_weight_y_U0_ap_idle);
    gradient_weight_y_U0->ap_ready(gradient_weight_y_U0_ap_ready);
    gradient_weight_y_U0->start_out(gradient_weight_y_U0_start_out);
    gradient_weight_y_U0->start_write(gradient_weight_y_U0_start_write);
    gradient_weight_y_U0->gradient_x_dout(gradient_x_dout);
    gradient_weight_y_U0->gradient_x_empty_n(gradient_x_empty_n);
    gradient_weight_y_U0->gradient_x_read(gradient_weight_y_U0_gradient_x_read);
    gradient_weight_y_U0->gradient_y_dout(gradient_y_dout);
    gradient_weight_y_U0->gradient_y_empty_n(gradient_y_empty_n);
    gradient_weight_y_U0->gradient_y_read(gradient_weight_y_U0_gradient_y_read);
    gradient_weight_y_U0->gradient_z_dout(gradient_z_dout);
    gradient_weight_y_U0->gradient_z_empty_n(gradient_z_empty_n);
    gradient_weight_y_U0->gradient_z_read(gradient_weight_y_U0_gradient_z_read);
    gradient_weight_y_U0->y_filtered_x_din(gradient_weight_y_U0_y_filtered_x_din);
    gradient_weight_y_U0->y_filtered_x_full_n(y_filtered_x_full_n);
    gradient_weight_y_U0->y_filtered_x_write(gradient_weight_y_U0_y_filtered_x_write);
    gradient_weight_y_U0->y_filtered_y_din(gradient_weight_y_U0_y_filtered_y_din);
    gradient_weight_y_U0->y_filtered_y_full_n(y_filtered_y_full_n);
    gradient_weight_y_U0->y_filtered_y_write(gradient_weight_y_U0_y_filtered_y_write);
    gradient_weight_y_U0->y_filtered_z_din(gradient_weight_y_U0_y_filtered_z_din);
    gradient_weight_y_U0->y_filtered_z_full_n(y_filtered_z_full_n);
    gradient_weight_y_U0->y_filtered_z_write(gradient_weight_y_U0_y_filtered_z_write);
    gradient_weight_x_U0 = new a0_gradient_weight_x("gradient_weight_x_U0");
    gradient_weight_x_U0->ap_clk(ap_clk);
    gradient_weight_x_U0->ap_rst(ap_rst_n_inv);
    gradient_weight_x_U0->ap_start(gradient_weight_x_U0_ap_start);
    gradient_weight_x_U0->start_full_n(start_for_outer_product_U0_full_n);
    gradient_weight_x_U0->ap_done(gradient_weight_x_U0_ap_done);
    gradient_weight_x_U0->ap_continue(gradient_weight_x_U0_ap_continue);
    gradient_weight_x_U0->ap_idle(gradient_weight_x_U0_ap_idle);
    gradient_weight_x_U0->ap_ready(gradient_weight_x_U0_ap_ready);
    gradient_weight_x_U0->start_out(gradient_weight_x_U0_start_out);
    gradient_weight_x_U0->start_write(gradient_weight_x_U0_start_write);
    gradient_weight_x_U0->y_filtered_x_dout(y_filtered_x_dout);
    gradient_weight_x_U0->y_filtered_x_empty_n(y_filtered_x_empty_n);
    gradient_weight_x_U0->y_filtered_x_read(gradient_weight_x_U0_y_filtered_x_read);
    gradient_weight_x_U0->y_filtered_y_dout(y_filtered_y_dout);
    gradient_weight_x_U0->y_filtered_y_empty_n(y_filtered_y_empty_n);
    gradient_weight_x_U0->y_filtered_y_read(gradient_weight_x_U0_y_filtered_y_read);
    gradient_weight_x_U0->y_filtered_z_dout(y_filtered_z_dout);
    gradient_weight_x_U0->y_filtered_z_empty_n(y_filtered_z_empty_n);
    gradient_weight_x_U0->y_filtered_z_read(gradient_weight_x_U0_y_filtered_z_read);
    gradient_weight_x_U0->filtered_gradient_x_din(gradient_weight_x_U0_filtered_gradient_x_din);
    gradient_weight_x_U0->filtered_gradient_x_full_n(filtered_gradient_x_full_n);
    gradient_weight_x_U0->filtered_gradient_x_write(gradient_weight_x_U0_filtered_gradient_x_write);
    gradient_weight_x_U0->filtered_gradient_y_din(gradient_weight_x_U0_filtered_gradient_y_din);
    gradient_weight_x_U0->filtered_gradient_y_full_n(filtered_gradient_y_full_n);
    gradient_weight_x_U0->filtered_gradient_y_write(gradient_weight_x_U0_filtered_gradient_y_write);
    gradient_weight_x_U0->filtered_gradient_z_din(gradient_weight_x_U0_filtered_gradient_z_din);
    gradient_weight_x_U0->filtered_gradient_z_full_n(filtered_gradient_z_full_n);
    gradient_weight_x_U0->filtered_gradient_z_write(gradient_weight_x_U0_filtered_gradient_z_write);
    outer_product_U0 = new a0_outer_product("outer_product_U0");
    outer_product_U0->ap_clk(ap_clk);
    outer_product_U0->ap_rst(ap_rst_n_inv);
    outer_product_U0->ap_start(outer_product_U0_ap_start);
    outer_product_U0->start_full_n(start_for_tensor_weight_y_U0_full_n);
    outer_product_U0->ap_done(outer_product_U0_ap_done);
    outer_product_U0->ap_continue(outer_product_U0_ap_continue);
    outer_product_U0->ap_idle(outer_product_U0_ap_idle);
    outer_product_U0->ap_ready(outer_product_U0_ap_ready);
    outer_product_U0->start_out(outer_product_U0_start_out);
    outer_product_U0->start_write(outer_product_U0_start_write);
    outer_product_U0->filtered_gradient_x_dout(filtered_gradient_x_dout);
    outer_product_U0->filtered_gradient_x_empty_n(filtered_gradient_x_empty_n);
    outer_product_U0->filtered_gradient_x_read(outer_product_U0_filtered_gradient_x_read);
    outer_product_U0->filtered_gradient_y_dout(filtered_gradient_y_dout);
    outer_product_U0->filtered_gradient_y_empty_n(filtered_gradient_y_empty_n);
    outer_product_U0->filtered_gradient_y_read(outer_product_U0_filtered_gradient_y_read);
    outer_product_U0->filtered_gradient_z_dout(filtered_gradient_z_dout);
    outer_product_U0->filtered_gradient_z_empty_n(filtered_gradient_z_empty_n);
    outer_product_U0->filtered_gradient_z_read(outer_product_U0_filtered_gradient_z_read);
    outer_product_U0->out_product_val_din(outer_product_U0_out_product_val_din);
    outer_product_U0->out_product_val_full_n(out_product_val_full_n);
    outer_product_U0->out_product_val_write(outer_product_U0_out_product_val_write);
    tensor_weight_y_U0 = new a0_tensor_weight_y("tensor_weight_y_U0");
    tensor_weight_y_U0->ap_clk(ap_clk);
    tensor_weight_y_U0->ap_rst(ap_rst_n_inv);
    tensor_weight_y_U0->ap_start(tensor_weight_y_U0_ap_start);
    tensor_weight_y_U0->start_full_n(start_for_tensor_weight_x_U0_full_n);
    tensor_weight_y_U0->ap_done(tensor_weight_y_U0_ap_done);
    tensor_weight_y_U0->ap_continue(tensor_weight_y_U0_ap_continue);
    tensor_weight_y_U0->ap_idle(tensor_weight_y_U0_ap_idle);
    tensor_weight_y_U0->ap_ready(tensor_weight_y_U0_ap_ready);
    tensor_weight_y_U0->start_out(tensor_weight_y_U0_start_out);
    tensor_weight_y_U0->start_write(tensor_weight_y_U0_start_write);
    tensor_weight_y_U0->out_product_val_dout(out_product_val_dout);
    tensor_weight_y_U0->out_product_val_empty_n(out_product_val_empty_n);
    tensor_weight_y_U0->out_product_val_read(tensor_weight_y_U0_out_product_val_read);
    tensor_weight_y_U0->tensor_y_val_din(tensor_weight_y_U0_tensor_y_val_din);
    tensor_weight_y_U0->tensor_y_val_full_n(tensor_y_val_full_n);
    tensor_weight_y_U0->tensor_y_val_write(tensor_weight_y_U0_tensor_y_val_write);
    tensor_weight_x_U0 = new a0_tensor_weight_x("tensor_weight_x_U0");
    tensor_weight_x_U0->ap_clk(ap_clk);
    tensor_weight_x_U0->ap_rst(ap_rst_n_inv);
    tensor_weight_x_U0->ap_start(tensor_weight_x_U0_ap_start);
    tensor_weight_x_U0->start_full_n(start_for_flow_calc_U0_full_n);
    tensor_weight_x_U0->ap_done(tensor_weight_x_U0_ap_done);
    tensor_weight_x_U0->ap_continue(tensor_weight_x_U0_ap_continue);
    tensor_weight_x_U0->ap_idle(tensor_weight_x_U0_ap_idle);
    tensor_weight_x_U0->ap_ready(tensor_weight_x_U0_ap_ready);
    tensor_weight_x_U0->start_out(tensor_weight_x_U0_start_out);
    tensor_weight_x_U0->start_write(tensor_weight_x_U0_start_write);
    tensor_weight_x_U0->tensor_y_val_dout(tensor_y_val_dout);
    tensor_weight_x_U0->tensor_y_val_empty_n(tensor_y_val_empty_n);
    tensor_weight_x_U0->tensor_y_val_read(tensor_weight_x_U0_tensor_y_val_read);
    tensor_weight_x_U0->tensor_val_din(tensor_weight_x_U0_tensor_val_din);
    tensor_weight_x_U0->tensor_val_full_n(tensor_val_full_n);
    tensor_weight_x_U0->tensor_val_write(tensor_weight_x_U0_tensor_val_write);
    flow_calc_U0 = new a0_flow_calc("flow_calc_U0");
    flow_calc_U0->ap_clk(ap_clk);
    flow_calc_U0->ap_rst(ap_rst_n_inv);
    flow_calc_U0->ap_start(flow_calc_U0_ap_start);
    flow_calc_U0->ap_done(flow_calc_U0_ap_done);
    flow_calc_U0->ap_continue(flow_calc_U0_ap_continue);
    flow_calc_U0->ap_idle(flow_calc_U0_ap_idle);
    flow_calc_U0->ap_ready(flow_calc_U0_ap_ready);
    flow_calc_U0->outputs_din(flow_calc_U0_outputs_din);
    flow_calc_U0->outputs_full_n(outputs_full_n);
    flow_calc_U0->outputs_write(flow_calc_U0_outputs_write);
    flow_calc_U0->tensor_val_dout(tensor_val_dout);
    flow_calc_U0->tensor_val_empty_n(tensor_val_empty_n);
    flow_calc_U0->tensor_val_read(flow_calc_U0_tensor_val_read);
    frame1_a_U = new a0_fifo_w32_d1_A("frame1_a_U");
    frame1_a_U->clk(ap_clk);
    frame1_a_U->reset(ap_rst_n_inv);
    frame1_a_U->if_read_ce(ap_var_for_const0);
    frame1_a_U->if_write_ce(ap_var_for_const0);
    frame1_a_U->if_din(Loop_FRAMES_CP_OUTER_U0_frame1_a_din);
    frame1_a_U->if_full_n(frame1_a_full_n);
    frame1_a_U->if_write(Loop_FRAMES_CP_OUTER_U0_frame1_a_write);
    frame1_a_U->if_dout(frame1_a_dout);
    frame1_a_U->if_empty_n(frame1_a_empty_n);
    frame1_a_U->if_read(gradient_z_calc_U0_frame1_a_read);
    frame2_a_U = new a0_fifo_w32_d1_A("frame2_a_U");
    frame2_a_U->clk(ap_clk);
    frame2_a_U->reset(ap_rst_n_inv);
    frame2_a_U->if_read_ce(ap_var_for_const0);
    frame2_a_U->if_write_ce(ap_var_for_const0);
    frame2_a_U->if_din(Loop_FRAMES_CP_OUTER_U0_frame2_a_din);
    frame2_a_U->if_full_n(frame2_a_full_n);
    frame2_a_U->if_write(Loop_FRAMES_CP_OUTER_U0_frame2_a_write);
    frame2_a_U->if_dout(frame2_a_dout);
    frame2_a_U->if_empty_n(frame2_a_empty_n);
    frame2_a_U->if_read(gradient_z_calc_U0_frame2_a_read);
    frame3_a_U = new a0_fifo_w32_d1_A("frame3_a_U");
    frame3_a_U->clk(ap_clk);
    frame3_a_U->reset(ap_rst_n_inv);
    frame3_a_U->if_read_ce(ap_var_for_const0);
    frame3_a_U->if_write_ce(ap_var_for_const0);
    frame3_a_U->if_din(Loop_FRAMES_CP_OUTER_U0_frame3_a_din);
    frame3_a_U->if_full_n(frame3_a_full_n);
    frame3_a_U->if_write(Loop_FRAMES_CP_OUTER_U0_frame3_a_write);
    frame3_a_U->if_dout(frame3_a_dout);
    frame3_a_U->if_empty_n(frame3_a_empty_n);
    frame3_a_U->if_read(gradient_xy_calc_U0_frame3_a_read);
    frame3_b_U = new a0_fifo_w32_d1_A("frame3_b_U");
    frame3_b_U->clk(ap_clk);
    frame3_b_U->reset(ap_rst_n_inv);
    frame3_b_U->if_read_ce(ap_var_for_const0);
    frame3_b_U->if_write_ce(ap_var_for_const0);
    frame3_b_U->if_din(Loop_FRAMES_CP_OUTER_U0_frame3_b_din);
    frame3_b_U->if_full_n(frame3_b_full_n);
    frame3_b_U->if_write(Loop_FRAMES_CP_OUTER_U0_frame3_b_write);
    frame3_b_U->if_dout(frame3_b_dout);
    frame3_b_U->if_empty_n(frame3_b_empty_n);
    frame3_b_U->if_read(gradient_z_calc_U0_frame3_b_read);
    frame4_a_U = new a0_fifo_w32_d1_A("frame4_a_U");
    frame4_a_U->clk(ap_clk);
    frame4_a_U->reset(ap_rst_n_inv);
    frame4_a_U->if_read_ce(ap_var_for_const0);
    frame4_a_U->if_write_ce(ap_var_for_const0);
    frame4_a_U->if_din(Loop_FRAMES_CP_OUTER_U0_frame4_a_din);
    frame4_a_U->if_full_n(frame4_a_full_n);
    frame4_a_U->if_write(Loop_FRAMES_CP_OUTER_U0_frame4_a_write);
    frame4_a_U->if_dout(frame4_a_dout);
    frame4_a_U->if_empty_n(frame4_a_empty_n);
    frame4_a_U->if_read(gradient_z_calc_U0_frame4_a_read);
    frame5_a_U = new a0_fifo_w32_d1_A("frame5_a_U");
    frame5_a_U->clk(ap_clk);
    frame5_a_U->reset(ap_rst_n_inv);
    frame5_a_U->if_read_ce(ap_var_for_const0);
    frame5_a_U->if_write_ce(ap_var_for_const0);
    frame5_a_U->if_din(Loop_FRAMES_CP_OUTER_U0_frame5_a_din);
    frame5_a_U->if_full_n(frame5_a_full_n);
    frame5_a_U->if_write(Loop_FRAMES_CP_OUTER_U0_frame5_a_write);
    frame5_a_U->if_dout(frame5_a_dout);
    frame5_a_U->if_empty_n(frame5_a_empty_n);
    frame5_a_U->if_read(gradient_z_calc_U0_frame5_a_read);
    gradient_x_U = new a0_fifo_w32_d1_A("gradient_x_U");
    gradient_x_U->clk(ap_clk);
    gradient_x_U->reset(ap_rst_n_inv);
    gradient_x_U->if_read_ce(ap_var_for_const0);
    gradient_x_U->if_write_ce(ap_var_for_const0);
    gradient_x_U->if_din(gradient_xy_calc_U0_gradient_x_din);
    gradient_x_U->if_full_n(gradient_x_full_n);
    gradient_x_U->if_write(gradient_xy_calc_U0_gradient_x_write);
    gradient_x_U->if_dout(gradient_x_dout);
    gradient_x_U->if_empty_n(gradient_x_empty_n);
    gradient_x_U->if_read(gradient_weight_y_U0_gradient_x_read);
    gradient_y_U = new a0_fifo_w32_d1_A("gradient_y_U");
    gradient_y_U->clk(ap_clk);
    gradient_y_U->reset(ap_rst_n_inv);
    gradient_y_U->if_read_ce(ap_var_for_const0);
    gradient_y_U->if_write_ce(ap_var_for_const0);
    gradient_y_U->if_din(gradient_xy_calc_U0_gradient_y_din);
    gradient_y_U->if_full_n(gradient_y_full_n);
    gradient_y_U->if_write(gradient_xy_calc_U0_gradient_y_write);
    gradient_y_U->if_dout(gradient_y_dout);
    gradient_y_U->if_empty_n(gradient_y_empty_n);
    gradient_y_U->if_read(gradient_weight_y_U0_gradient_y_read);
    gradient_z_U = new a0_fifo_w32_d4096_A("gradient_z_U");
    gradient_z_U->clk(ap_clk);
    gradient_z_U->reset(ap_rst_n_inv);
    gradient_z_U->if_read_ce(ap_var_for_const0);
    gradient_z_U->if_write_ce(ap_var_for_const0);
    gradient_z_U->if_din(gradient_z_calc_U0_gradient_z_din);
    gradient_z_U->if_full_n(gradient_z_full_n);
    gradient_z_U->if_write(gradient_z_calc_U0_gradient_z_write);
    gradient_z_U->if_dout(gradient_z_dout);
    gradient_z_U->if_empty_n(gradient_z_empty_n);
    gradient_z_U->if_read(gradient_weight_y_U0_gradient_z_read);
    y_filtered_x_U = new a0_fifo_w32_d1_A("y_filtered_x_U");
    y_filtered_x_U->clk(ap_clk);
    y_filtered_x_U->reset(ap_rst_n_inv);
    y_filtered_x_U->if_read_ce(ap_var_for_const0);
    y_filtered_x_U->if_write_ce(ap_var_for_const0);
    y_filtered_x_U->if_din(gradient_weight_y_U0_y_filtered_x_din);
    y_filtered_x_U->if_full_n(y_filtered_x_full_n);
    y_filtered_x_U->if_write(gradient_weight_y_U0_y_filtered_x_write);
    y_filtered_x_U->if_dout(y_filtered_x_dout);
    y_filtered_x_U->if_empty_n(y_filtered_x_empty_n);
    y_filtered_x_U->if_read(gradient_weight_x_U0_y_filtered_x_read);
    y_filtered_y_U = new a0_fifo_w32_d1_A("y_filtered_y_U");
    y_filtered_y_U->clk(ap_clk);
    y_filtered_y_U->reset(ap_rst_n_inv);
    y_filtered_y_U->if_read_ce(ap_var_for_const0);
    y_filtered_y_U->if_write_ce(ap_var_for_const0);
    y_filtered_y_U->if_din(gradient_weight_y_U0_y_filtered_y_din);
    y_filtered_y_U->if_full_n(y_filtered_y_full_n);
    y_filtered_y_U->if_write(gradient_weight_y_U0_y_filtered_y_write);
    y_filtered_y_U->if_dout(y_filtered_y_dout);
    y_filtered_y_U->if_empty_n(y_filtered_y_empty_n);
    y_filtered_y_U->if_read(gradient_weight_x_U0_y_filtered_y_read);
    y_filtered_z_U = new a0_fifo_w32_d1_A("y_filtered_z_U");
    y_filtered_z_U->clk(ap_clk);
    y_filtered_z_U->reset(ap_rst_n_inv);
    y_filtered_z_U->if_read_ce(ap_var_for_const0);
    y_filtered_z_U->if_write_ce(ap_var_for_const0);
    y_filtered_z_U->if_din(gradient_weight_y_U0_y_filtered_z_din);
    y_filtered_z_U->if_full_n(y_filtered_z_full_n);
    y_filtered_z_U->if_write(gradient_weight_y_U0_y_filtered_z_write);
    y_filtered_z_U->if_dout(y_filtered_z_dout);
    y_filtered_z_U->if_empty_n(y_filtered_z_empty_n);
    y_filtered_z_U->if_read(gradient_weight_x_U0_y_filtered_z_read);
    filtered_gradient_x_U = new a0_fifo_w32_d1_A("filtered_gradient_x_U");
    filtered_gradient_x_U->clk(ap_clk);
    filtered_gradient_x_U->reset(ap_rst_n_inv);
    filtered_gradient_x_U->if_read_ce(ap_var_for_const0);
    filtered_gradient_x_U->if_write_ce(ap_var_for_const0);
    filtered_gradient_x_U->if_din(gradient_weight_x_U0_filtered_gradient_x_din);
    filtered_gradient_x_U->if_full_n(filtered_gradient_x_full_n);
    filtered_gradient_x_U->if_write(gradient_weight_x_U0_filtered_gradient_x_write);
    filtered_gradient_x_U->if_dout(filtered_gradient_x_dout);
    filtered_gradient_x_U->if_empty_n(filtered_gradient_x_empty_n);
    filtered_gradient_x_U->if_read(outer_product_U0_filtered_gradient_x_read);
    filtered_gradient_y_U = new a0_fifo_w32_d1_A("filtered_gradient_y_U");
    filtered_gradient_y_U->clk(ap_clk);
    filtered_gradient_y_U->reset(ap_rst_n_inv);
    filtered_gradient_y_U->if_read_ce(ap_var_for_const0);
    filtered_gradient_y_U->if_write_ce(ap_var_for_const0);
    filtered_gradient_y_U->if_din(gradient_weight_x_U0_filtered_gradient_y_din);
    filtered_gradient_y_U->if_full_n(filtered_gradient_y_full_n);
    filtered_gradient_y_U->if_write(gradient_weight_x_U0_filtered_gradient_y_write);
    filtered_gradient_y_U->if_dout(filtered_gradient_y_dout);
    filtered_gradient_y_U->if_empty_n(filtered_gradient_y_empty_n);
    filtered_gradient_y_U->if_read(outer_product_U0_filtered_gradient_y_read);
    filtered_gradient_z_U = new a0_fifo_w32_d1_A("filtered_gradient_z_U");
    filtered_gradient_z_U->clk(ap_clk);
    filtered_gradient_z_U->reset(ap_rst_n_inv);
    filtered_gradient_z_U->if_read_ce(ap_var_for_const0);
    filtered_gradient_z_U->if_write_ce(ap_var_for_const0);
    filtered_gradient_z_U->if_din(gradient_weight_x_U0_filtered_gradient_z_din);
    filtered_gradient_z_U->if_full_n(filtered_gradient_z_full_n);
    filtered_gradient_z_U->if_write(gradient_weight_x_U0_filtered_gradient_z_write);
    filtered_gradient_z_U->if_dout(filtered_gradient_z_dout);
    filtered_gradient_z_U->if_empty_n(filtered_gradient_z_empty_n);
    filtered_gradient_z_U->if_read(outer_product_U0_filtered_gradient_z_read);
    out_product_val_U = new a0_fifo_w192_d1_A("out_product_val_U");
    out_product_val_U->clk(ap_clk);
    out_product_val_U->reset(ap_rst_n_inv);
    out_product_val_U->if_read_ce(ap_var_for_const0);
    out_product_val_U->if_write_ce(ap_var_for_const0);
    out_product_val_U->if_din(outer_product_U0_out_product_val_din);
    out_product_val_U->if_full_n(out_product_val_full_n);
    out_product_val_U->if_write(outer_product_U0_out_product_val_write);
    out_product_val_U->if_dout(out_product_val_dout);
    out_product_val_U->if_empty_n(out_product_val_empty_n);
    out_product_val_U->if_read(tensor_weight_y_U0_out_product_val_read);
    tensor_y_val_U = new a0_fifo_w192_d1_A("tensor_y_val_U");
    tensor_y_val_U->clk(ap_clk);
    tensor_y_val_U->reset(ap_rst_n_inv);
    tensor_y_val_U->if_read_ce(ap_var_for_const0);
    tensor_y_val_U->if_write_ce(ap_var_for_const0);
    tensor_y_val_U->if_din(tensor_weight_y_U0_tensor_y_val_din);
    tensor_y_val_U->if_full_n(tensor_y_val_full_n);
    tensor_y_val_U->if_write(tensor_weight_y_U0_tensor_y_val_write);
    tensor_y_val_U->if_dout(tensor_y_val_dout);
    tensor_y_val_U->if_empty_n(tensor_y_val_empty_n);
    tensor_y_val_U->if_read(tensor_weight_x_U0_tensor_y_val_read);
    tensor_val_U = new a0_fifo_w192_d1_A("tensor_val_U");
    tensor_val_U->clk(ap_clk);
    tensor_val_U->reset(ap_rst_n_inv);
    tensor_val_U->if_read_ce(ap_var_for_const0);
    tensor_val_U->if_write_ce(ap_var_for_const0);
    tensor_val_U->if_din(tensor_weight_x_U0_tensor_val_din);
    tensor_val_U->if_full_n(tensor_val_full_n);
    tensor_val_U->if_write(tensor_weight_x_U0_tensor_val_write);
    tensor_val_U->if_dout(tensor_val_dout);
    tensor_val_U->if_empty_n(tensor_val_empty_n);
    tensor_val_U->if_read(flow_calc_U0_tensor_val_read);
    start_for_gradienEe0_U = new a0_start_for_gradienEe0("start_for_gradienEe0_U");
    start_for_gradienEe0_U->clk(ap_clk);
    start_for_gradienEe0_U->reset(ap_rst_n_inv);
    start_for_gradienEe0_U->if_read_ce(ap_var_for_const0);
    start_for_gradienEe0_U->if_write_ce(ap_var_for_const0);
    start_for_gradienEe0_U->if_din(start_for_gradient_xy_calc_U0_din);
    start_for_gradienEe0_U->if_full_n(start_for_gradient_xy_calc_U0_full_n);
    start_for_gradienEe0_U->if_write(Loop_FRAMES_CP_OUTER_U0_start_write);
    start_for_gradienEe0_U->if_dout(start_for_gradient_xy_calc_U0_dout);
    start_for_gradienEe0_U->if_empty_n(start_for_gradient_xy_calc_U0_empty_n);
    start_for_gradienEe0_U->if_read(gradient_xy_calc_U0_ap_ready);
    start_for_gradienFfa_U = new a0_start_for_gradienFfa("start_for_gradienFfa_U");
    start_for_gradienFfa_U->clk(ap_clk);
    start_for_gradienFfa_U->reset(ap_rst_n_inv);
    start_for_gradienFfa_U->if_read_ce(ap_var_for_const0);
    start_for_gradienFfa_U->if_write_ce(ap_var_for_const0);
    start_for_gradienFfa_U->if_din(start_for_gradient_z_calc_U0_din);
    start_for_gradienFfa_U->if_full_n(start_for_gradient_z_calc_U0_full_n);
    start_for_gradienFfa_U->if_write(Loop_FRAMES_CP_OUTER_U0_start_write);
    start_for_gradienFfa_U->if_dout(start_for_gradient_z_calc_U0_dout);
    start_for_gradienFfa_U->if_empty_n(start_for_gradient_z_calc_U0_empty_n);
    start_for_gradienFfa_U->if_read(gradient_z_calc_U0_ap_ready);
    start_for_gradienGfk_U = new a0_start_for_gradienGfk("start_for_gradienGfk_U");
    start_for_gradienGfk_U->clk(ap_clk);
    start_for_gradienGfk_U->reset(ap_rst_n_inv);
    start_for_gradienGfk_U->if_read_ce(ap_var_for_const0);
    start_for_gradienGfk_U->if_write_ce(ap_var_for_const0);
    start_for_gradienGfk_U->if_din(start_for_gradient_weight_y_U0_din);
    start_for_gradienGfk_U->if_full_n(start_for_gradient_weight_y_U0_full_n);
    start_for_gradienGfk_U->if_write(gradient_xy_calc_U0_start_write);
    start_for_gradienGfk_U->if_dout(start_for_gradient_weight_y_U0_dout);
    start_for_gradienGfk_U->if_empty_n(start_for_gradient_weight_y_U0_empty_n);
    start_for_gradienGfk_U->if_read(gradient_weight_y_U0_ap_ready);
    start_for_gradienHfu_U = new a0_start_for_gradienHfu("start_for_gradienHfu_U");
    start_for_gradienHfu_U->clk(ap_clk);
    start_for_gradienHfu_U->reset(ap_rst_n_inv);
    start_for_gradienHfu_U->if_read_ce(ap_var_for_const0);
    start_for_gradienHfu_U->if_write_ce(ap_var_for_const0);
    start_for_gradienHfu_U->if_din(start_for_gradient_weight_x_U0_din);
    start_for_gradienHfu_U->if_full_n(start_for_gradient_weight_x_U0_full_n);
    start_for_gradienHfu_U->if_write(gradient_weight_y_U0_start_write);
    start_for_gradienHfu_U->if_dout(start_for_gradient_weight_x_U0_dout);
    start_for_gradienHfu_U->if_empty_n(start_for_gradient_weight_x_U0_empty_n);
    start_for_gradienHfu_U->if_read(gradient_weight_x_U0_ap_ready);
    start_for_outer_pIfE_U = new a0_start_for_outer_pIfE("start_for_outer_pIfE_U");
    start_for_outer_pIfE_U->clk(ap_clk);
    start_for_outer_pIfE_U->reset(ap_rst_n_inv);
    start_for_outer_pIfE_U->if_read_ce(ap_var_for_const0);
    start_for_outer_pIfE_U->if_write_ce(ap_var_for_const0);
    start_for_outer_pIfE_U->if_din(start_for_outer_product_U0_din);
    start_for_outer_pIfE_U->if_full_n(start_for_outer_product_U0_full_n);
    start_for_outer_pIfE_U->if_write(gradient_weight_x_U0_start_write);
    start_for_outer_pIfE_U->if_dout(start_for_outer_product_U0_dout);
    start_for_outer_pIfE_U->if_empty_n(start_for_outer_product_U0_empty_n);
    start_for_outer_pIfE_U->if_read(outer_product_U0_ap_ready);
    start_for_tensor_JfO_U = new a0_start_for_tensor_JfO("start_for_tensor_JfO_U");
    start_for_tensor_JfO_U->clk(ap_clk);
    start_for_tensor_JfO_U->reset(ap_rst_n_inv);
    start_for_tensor_JfO_U->if_read_ce(ap_var_for_const0);
    start_for_tensor_JfO_U->if_write_ce(ap_var_for_const0);
    start_for_tensor_JfO_U->if_din(start_for_tensor_weight_y_U0_din);
    start_for_tensor_JfO_U->if_full_n(start_for_tensor_weight_y_U0_full_n);
    start_for_tensor_JfO_U->if_write(outer_product_U0_start_write);
    start_for_tensor_JfO_U->if_dout(start_for_tensor_weight_y_U0_dout);
    start_for_tensor_JfO_U->if_empty_n(start_for_tensor_weight_y_U0_empty_n);
    start_for_tensor_JfO_U->if_read(tensor_weight_y_U0_ap_ready);
    start_for_tensor_KfY_U = new a0_start_for_tensor_KfY("start_for_tensor_KfY_U");
    start_for_tensor_KfY_U->clk(ap_clk);
    start_for_tensor_KfY_U->reset(ap_rst_n_inv);
    start_for_tensor_KfY_U->if_read_ce(ap_var_for_const0);
    start_for_tensor_KfY_U->if_write_ce(ap_var_for_const0);
    start_for_tensor_KfY_U->if_din(start_for_tensor_weight_x_U0_din);
    start_for_tensor_KfY_U->if_full_n(start_for_tensor_weight_x_U0_full_n);
    start_for_tensor_KfY_U->if_write(tensor_weight_y_U0_start_write);
    start_for_tensor_KfY_U->if_dout(start_for_tensor_weight_x_U0_dout);
    start_for_tensor_KfY_U->if_empty_n(start_for_tensor_weight_x_U0_empty_n);
    start_for_tensor_KfY_U->if_read(tensor_weight_x_U0_ap_ready);
    start_for_flow_caLf8_U = new a0_start_for_flow_caLf8("start_for_flow_caLf8_U");
    start_for_flow_caLf8_U->clk(ap_clk);
    start_for_flow_caLf8_U->reset(ap_rst_n_inv);
    start_for_flow_caLf8_U->if_read_ce(ap_var_for_const0);
    start_for_flow_caLf8_U->if_write_ce(ap_var_for_const0);
    start_for_flow_caLf8_U->if_din(start_for_flow_calc_U0_din);
    start_for_flow_caLf8_U->if_full_n(start_for_flow_calc_U0_full_n);
    start_for_flow_caLf8_U->if_write(tensor_weight_x_U0_start_write);
    start_for_flow_caLf8_U->if_dout(start_for_flow_calc_U0_dout);
    start_for_flow_caLf8_U->if_empty_n(start_for_flow_calc_U0_empty_n);
    start_for_flow_caLf8_U->if_read(flow_calc_U0_ap_ready);

    SC_METHOD(thread_Loop_FRAMES_CP_OUTER_U0_ap_continue);

    SC_METHOD(thread_Loop_FRAMES_CP_OUTER_U0_ap_start);
    sensitive << ( ap_rst_n_inv );
    sensitive << ( ap_start );

    SC_METHOD(thread_Loop_FRAMES_CP_OUTER_U0_start_full_n);
    sensitive << ( start_for_gradient_xy_calc_U0_full_n );
    sensitive << ( start_for_gradient_z_calc_U0_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( flow_calc_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( Loop_FRAMES_CP_OUTER_U0_ap_idle );
    sensitive << ( gradient_xy_calc_U0_ap_idle );
    sensitive << ( gradient_z_calc_U0_ap_idle );
    sensitive << ( gradient_weight_y_U0_ap_idle );
    sensitive << ( gradient_weight_x_U0_ap_idle );
    sensitive << ( outer_product_U0_ap_idle );
    sensitive << ( tensor_weight_y_U0_ap_idle );
    sensitive << ( tensor_weight_x_U0_ap_idle );
    sensitive << ( flow_calc_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( Loop_FRAMES_CP_OUTER_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( flow_calc_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( Loop_FRAMES_CP_OUTER_U0_ap_ready );

    SC_METHOD(thread_flow_calc_U0_ap_continue);

    SC_METHOD(thread_flow_calc_U0_ap_start);
    sensitive << ( start_for_flow_calc_U0_empty_n );

    SC_METHOD(thread_flow_calc_U0_start_full_n);

    SC_METHOD(thread_flow_calc_U0_start_write);

    SC_METHOD(thread_frames_V_read);
    sensitive << ( Loop_FRAMES_CP_OUTER_U0_frames_V_read );

    SC_METHOD(thread_gradient_weight_x_U0_ap_continue);

    SC_METHOD(thread_gradient_weight_x_U0_ap_start);
    sensitive << ( start_for_gradient_weight_x_U0_empty_n );

    SC_METHOD(thread_gradient_weight_y_U0_ap_continue);

    SC_METHOD(thread_gradient_weight_y_U0_ap_start);
    sensitive << ( start_for_gradient_weight_y_U0_empty_n );

    SC_METHOD(thread_gradient_xy_calc_U0_ap_continue);

    SC_METHOD(thread_gradient_xy_calc_U0_ap_start);
    sensitive << ( start_for_gradient_xy_calc_U0_empty_n );

    SC_METHOD(thread_gradient_z_calc_U0_ap_continue);

    SC_METHOD(thread_gradient_z_calc_U0_ap_start);
    sensitive << ( start_for_gradient_z_calc_U0_empty_n );

    SC_METHOD(thread_gradient_z_calc_U0_start_full_n);

    SC_METHOD(thread_gradient_z_calc_U0_start_write);

    SC_METHOD(thread_outer_product_U0_ap_continue);

    SC_METHOD(thread_outer_product_U0_ap_start);
    sensitive << ( start_for_outer_product_U0_empty_n );

    SC_METHOD(thread_outputs_din);
    sensitive << ( flow_calc_U0_outputs_din );

    SC_METHOD(thread_outputs_write);
    sensitive << ( flow_calc_U0_outputs_write );

    SC_METHOD(thread_start_for_flow_calc_U0_din);

    SC_METHOD(thread_start_for_gradient_weight_x_U0_din);

    SC_METHOD(thread_start_for_gradient_weight_y_U0_din);

    SC_METHOD(thread_start_for_gradient_xy_calc_U0_din);

    SC_METHOD(thread_start_for_gradient_z_calc_U0_din);

    SC_METHOD(thread_start_for_outer_product_U0_din);

    SC_METHOD(thread_start_for_tensor_weight_x_U0_din);

    SC_METHOD(thread_start_for_tensor_weight_y_U0_din);

    SC_METHOD(thread_tensor_weight_x_U0_ap_continue);

    SC_METHOD(thread_tensor_weight_x_U0_ap_start);
    sensitive << ( start_for_tensor_weight_x_U0_empty_n );

    SC_METHOD(thread_tensor_weight_y_U0_ap_continue);

    SC_METHOD(thread_tensor_weight_y_U0_ap_start);
    sensitive << ( start_for_tensor_weight_y_U0_empty_n );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_optical_flow_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, frames_V_dout, "(port)frames_V_dout");
    sc_trace(mVcdFile, frames_V_empty_n, "(port)frames_V_empty_n");
    sc_trace(mVcdFile, frames_V_read, "(port)frames_V_read");
    sc_trace(mVcdFile, outputs_din, "(port)outputs_din");
    sc_trace(mVcdFile, outputs_full_n, "(port)outputs_full_n");
    sc_trace(mVcdFile, outputs_write, "(port)outputs_write");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_ap_start, "Loop_FRAMES_CP_OUTER_U0_ap_start");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_start_full_n, "Loop_FRAMES_CP_OUTER_U0_start_full_n");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_ap_done, "Loop_FRAMES_CP_OUTER_U0_ap_done");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_ap_continue, "Loop_FRAMES_CP_OUTER_U0_ap_continue");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_ap_idle, "Loop_FRAMES_CP_OUTER_U0_ap_idle");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_ap_ready, "Loop_FRAMES_CP_OUTER_U0_ap_ready");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_start_out, "Loop_FRAMES_CP_OUTER_U0_start_out");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_start_write, "Loop_FRAMES_CP_OUTER_U0_start_write");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frames_V_read, "Loop_FRAMES_CP_OUTER_U0_frames_V_read");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame1_a_din, "Loop_FRAMES_CP_OUTER_U0_frame1_a_din");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame1_a_write, "Loop_FRAMES_CP_OUTER_U0_frame1_a_write");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame2_a_din, "Loop_FRAMES_CP_OUTER_U0_frame2_a_din");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame2_a_write, "Loop_FRAMES_CP_OUTER_U0_frame2_a_write");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame3_a_din, "Loop_FRAMES_CP_OUTER_U0_frame3_a_din");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame3_a_write, "Loop_FRAMES_CP_OUTER_U0_frame3_a_write");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame3_b_din, "Loop_FRAMES_CP_OUTER_U0_frame3_b_din");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame3_b_write, "Loop_FRAMES_CP_OUTER_U0_frame3_b_write");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame4_a_din, "Loop_FRAMES_CP_OUTER_U0_frame4_a_din");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame4_a_write, "Loop_FRAMES_CP_OUTER_U0_frame4_a_write");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame5_a_din, "Loop_FRAMES_CP_OUTER_U0_frame5_a_din");
    sc_trace(mVcdFile, Loop_FRAMES_CP_OUTER_U0_frame5_a_write, "Loop_FRAMES_CP_OUTER_U0_frame5_a_write");
    sc_trace(mVcdFile, gradient_xy_calc_U0_ap_start, "gradient_xy_calc_U0_ap_start");
    sc_trace(mVcdFile, gradient_xy_calc_U0_ap_done, "gradient_xy_calc_U0_ap_done");
    sc_trace(mVcdFile, gradient_xy_calc_U0_ap_continue, "gradient_xy_calc_U0_ap_continue");
    sc_trace(mVcdFile, gradient_xy_calc_U0_ap_idle, "gradient_xy_calc_U0_ap_idle");
    sc_trace(mVcdFile, gradient_xy_calc_U0_ap_ready, "gradient_xy_calc_U0_ap_ready");
    sc_trace(mVcdFile, gradient_xy_calc_U0_start_out, "gradient_xy_calc_U0_start_out");
    sc_trace(mVcdFile, gradient_xy_calc_U0_start_write, "gradient_xy_calc_U0_start_write");
    sc_trace(mVcdFile, gradient_xy_calc_U0_frame3_a_read, "gradient_xy_calc_U0_frame3_a_read");
    sc_trace(mVcdFile, gradient_xy_calc_U0_gradient_x_din, "gradient_xy_calc_U0_gradient_x_din");
    sc_trace(mVcdFile, gradient_xy_calc_U0_gradient_x_write, "gradient_xy_calc_U0_gradient_x_write");
    sc_trace(mVcdFile, gradient_xy_calc_U0_gradient_y_din, "gradient_xy_calc_U0_gradient_y_din");
    sc_trace(mVcdFile, gradient_xy_calc_U0_gradient_y_write, "gradient_xy_calc_U0_gradient_y_write");
    sc_trace(mVcdFile, gradient_z_calc_U0_ap_start, "gradient_z_calc_U0_ap_start");
    sc_trace(mVcdFile, gradient_z_calc_U0_ap_done, "gradient_z_calc_U0_ap_done");
    sc_trace(mVcdFile, gradient_z_calc_U0_ap_continue, "gradient_z_calc_U0_ap_continue");
    sc_trace(mVcdFile, gradient_z_calc_U0_ap_idle, "gradient_z_calc_U0_ap_idle");
    sc_trace(mVcdFile, gradient_z_calc_U0_ap_ready, "gradient_z_calc_U0_ap_ready");
    sc_trace(mVcdFile, gradient_z_calc_U0_frame1_a_read, "gradient_z_calc_U0_frame1_a_read");
    sc_trace(mVcdFile, gradient_z_calc_U0_frame2_a_read, "gradient_z_calc_U0_frame2_a_read");
    sc_trace(mVcdFile, gradient_z_calc_U0_frame3_b_read, "gradient_z_calc_U0_frame3_b_read");
    sc_trace(mVcdFile, gradient_z_calc_U0_frame4_a_read, "gradient_z_calc_U0_frame4_a_read");
    sc_trace(mVcdFile, gradient_z_calc_U0_frame5_a_read, "gradient_z_calc_U0_frame5_a_read");
    sc_trace(mVcdFile, gradient_z_calc_U0_gradient_z_din, "gradient_z_calc_U0_gradient_z_din");
    sc_trace(mVcdFile, gradient_z_calc_U0_gradient_z_write, "gradient_z_calc_U0_gradient_z_write");
    sc_trace(mVcdFile, gradient_weight_y_U0_ap_start, "gradient_weight_y_U0_ap_start");
    sc_trace(mVcdFile, gradient_weight_y_U0_ap_done, "gradient_weight_y_U0_ap_done");
    sc_trace(mVcdFile, gradient_weight_y_U0_ap_continue, "gradient_weight_y_U0_ap_continue");
    sc_trace(mVcdFile, gradient_weight_y_U0_ap_idle, "gradient_weight_y_U0_ap_idle");
    sc_trace(mVcdFile, gradient_weight_y_U0_ap_ready, "gradient_weight_y_U0_ap_ready");
    sc_trace(mVcdFile, gradient_weight_y_U0_start_out, "gradient_weight_y_U0_start_out");
    sc_trace(mVcdFile, gradient_weight_y_U0_start_write, "gradient_weight_y_U0_start_write");
    sc_trace(mVcdFile, gradient_weight_y_U0_gradient_x_read, "gradient_weight_y_U0_gradient_x_read");
    sc_trace(mVcdFile, gradient_weight_y_U0_gradient_y_read, "gradient_weight_y_U0_gradient_y_read");
    sc_trace(mVcdFile, gradient_weight_y_U0_gradient_z_read, "gradient_weight_y_U0_gradient_z_read");
    sc_trace(mVcdFile, gradient_weight_y_U0_y_filtered_x_din, "gradient_weight_y_U0_y_filtered_x_din");
    sc_trace(mVcdFile, gradient_weight_y_U0_y_filtered_x_write, "gradient_weight_y_U0_y_filtered_x_write");
    sc_trace(mVcdFile, gradient_weight_y_U0_y_filtered_y_din, "gradient_weight_y_U0_y_filtered_y_din");
    sc_trace(mVcdFile, gradient_weight_y_U0_y_filtered_y_write, "gradient_weight_y_U0_y_filtered_y_write");
    sc_trace(mVcdFile, gradient_weight_y_U0_y_filtered_z_din, "gradient_weight_y_U0_y_filtered_z_din");
    sc_trace(mVcdFile, gradient_weight_y_U0_y_filtered_z_write, "gradient_weight_y_U0_y_filtered_z_write");
    sc_trace(mVcdFile, gradient_weight_x_U0_ap_start, "gradient_weight_x_U0_ap_start");
    sc_trace(mVcdFile, gradient_weight_x_U0_ap_done, "gradient_weight_x_U0_ap_done");
    sc_trace(mVcdFile, gradient_weight_x_U0_ap_continue, "gradient_weight_x_U0_ap_continue");
    sc_trace(mVcdFile, gradient_weight_x_U0_ap_idle, "gradient_weight_x_U0_ap_idle");
    sc_trace(mVcdFile, gradient_weight_x_U0_ap_ready, "gradient_weight_x_U0_ap_ready");
    sc_trace(mVcdFile, gradient_weight_x_U0_start_out, "gradient_weight_x_U0_start_out");
    sc_trace(mVcdFile, gradient_weight_x_U0_start_write, "gradient_weight_x_U0_start_write");
    sc_trace(mVcdFile, gradient_weight_x_U0_y_filtered_x_read, "gradient_weight_x_U0_y_filtered_x_read");
    sc_trace(mVcdFile, gradient_weight_x_U0_y_filtered_y_read, "gradient_weight_x_U0_y_filtered_y_read");
    sc_trace(mVcdFile, gradient_weight_x_U0_y_filtered_z_read, "gradient_weight_x_U0_y_filtered_z_read");
    sc_trace(mVcdFile, gradient_weight_x_U0_filtered_gradient_x_din, "gradient_weight_x_U0_filtered_gradient_x_din");
    sc_trace(mVcdFile, gradient_weight_x_U0_filtered_gradient_x_write, "gradient_weight_x_U0_filtered_gradient_x_write");
    sc_trace(mVcdFile, gradient_weight_x_U0_filtered_gradient_y_din, "gradient_weight_x_U0_filtered_gradient_y_din");
    sc_trace(mVcdFile, gradient_weight_x_U0_filtered_gradient_y_write, "gradient_weight_x_U0_filtered_gradient_y_write");
    sc_trace(mVcdFile, gradient_weight_x_U0_filtered_gradient_z_din, "gradient_weight_x_U0_filtered_gradient_z_din");
    sc_trace(mVcdFile, gradient_weight_x_U0_filtered_gradient_z_write, "gradient_weight_x_U0_filtered_gradient_z_write");
    sc_trace(mVcdFile, outer_product_U0_ap_start, "outer_product_U0_ap_start");
    sc_trace(mVcdFile, outer_product_U0_ap_done, "outer_product_U0_ap_done");
    sc_trace(mVcdFile, outer_product_U0_ap_continue, "outer_product_U0_ap_continue");
    sc_trace(mVcdFile, outer_product_U0_ap_idle, "outer_product_U0_ap_idle");
    sc_trace(mVcdFile, outer_product_U0_ap_ready, "outer_product_U0_ap_ready");
    sc_trace(mVcdFile, outer_product_U0_start_out, "outer_product_U0_start_out");
    sc_trace(mVcdFile, outer_product_U0_start_write, "outer_product_U0_start_write");
    sc_trace(mVcdFile, outer_product_U0_filtered_gradient_x_read, "outer_product_U0_filtered_gradient_x_read");
    sc_trace(mVcdFile, outer_product_U0_filtered_gradient_y_read, "outer_product_U0_filtered_gradient_y_read");
    sc_trace(mVcdFile, outer_product_U0_filtered_gradient_z_read, "outer_product_U0_filtered_gradient_z_read");
    sc_trace(mVcdFile, outer_product_U0_out_product_val_din, "outer_product_U0_out_product_val_din");
    sc_trace(mVcdFile, outer_product_U0_out_product_val_write, "outer_product_U0_out_product_val_write");
    sc_trace(mVcdFile, tensor_weight_y_U0_ap_start, "tensor_weight_y_U0_ap_start");
    sc_trace(mVcdFile, tensor_weight_y_U0_ap_done, "tensor_weight_y_U0_ap_done");
    sc_trace(mVcdFile, tensor_weight_y_U0_ap_continue, "tensor_weight_y_U0_ap_continue");
    sc_trace(mVcdFile, tensor_weight_y_U0_ap_idle, "tensor_weight_y_U0_ap_idle");
    sc_trace(mVcdFile, tensor_weight_y_U0_ap_ready, "tensor_weight_y_U0_ap_ready");
    sc_trace(mVcdFile, tensor_weight_y_U0_start_out, "tensor_weight_y_U0_start_out");
    sc_trace(mVcdFile, tensor_weight_y_U0_start_write, "tensor_weight_y_U0_start_write");
    sc_trace(mVcdFile, tensor_weight_y_U0_out_product_val_read, "tensor_weight_y_U0_out_product_val_read");
    sc_trace(mVcdFile, tensor_weight_y_U0_tensor_y_val_din, "tensor_weight_y_U0_tensor_y_val_din");
    sc_trace(mVcdFile, tensor_weight_y_U0_tensor_y_val_write, "tensor_weight_y_U0_tensor_y_val_write");
    sc_trace(mVcdFile, tensor_weight_x_U0_ap_start, "tensor_weight_x_U0_ap_start");
    sc_trace(mVcdFile, tensor_weight_x_U0_ap_done, "tensor_weight_x_U0_ap_done");
    sc_trace(mVcdFile, tensor_weight_x_U0_ap_continue, "tensor_weight_x_U0_ap_continue");
    sc_trace(mVcdFile, tensor_weight_x_U0_ap_idle, "tensor_weight_x_U0_ap_idle");
    sc_trace(mVcdFile, tensor_weight_x_U0_ap_ready, "tensor_weight_x_U0_ap_ready");
    sc_trace(mVcdFile, tensor_weight_x_U0_start_out, "tensor_weight_x_U0_start_out");
    sc_trace(mVcdFile, tensor_weight_x_U0_start_write, "tensor_weight_x_U0_start_write");
    sc_trace(mVcdFile, tensor_weight_x_U0_tensor_y_val_read, "tensor_weight_x_U0_tensor_y_val_read");
    sc_trace(mVcdFile, tensor_weight_x_U0_tensor_val_din, "tensor_weight_x_U0_tensor_val_din");
    sc_trace(mVcdFile, tensor_weight_x_U0_tensor_val_write, "tensor_weight_x_U0_tensor_val_write");
    sc_trace(mVcdFile, flow_calc_U0_ap_start, "flow_calc_U0_ap_start");
    sc_trace(mVcdFile, flow_calc_U0_ap_done, "flow_calc_U0_ap_done");
    sc_trace(mVcdFile, flow_calc_U0_ap_continue, "flow_calc_U0_ap_continue");
    sc_trace(mVcdFile, flow_calc_U0_ap_idle, "flow_calc_U0_ap_idle");
    sc_trace(mVcdFile, flow_calc_U0_ap_ready, "flow_calc_U0_ap_ready");
    sc_trace(mVcdFile, flow_calc_U0_outputs_din, "flow_calc_U0_outputs_din");
    sc_trace(mVcdFile, flow_calc_U0_outputs_write, "flow_calc_U0_outputs_write");
    sc_trace(mVcdFile, flow_calc_U0_tensor_val_read, "flow_calc_U0_tensor_val_read");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, frame1_a_full_n, "frame1_a_full_n");
    sc_trace(mVcdFile, frame1_a_dout, "frame1_a_dout");
    sc_trace(mVcdFile, frame1_a_empty_n, "frame1_a_empty_n");
    sc_trace(mVcdFile, frame2_a_full_n, "frame2_a_full_n");
    sc_trace(mVcdFile, frame2_a_dout, "frame2_a_dout");
    sc_trace(mVcdFile, frame2_a_empty_n, "frame2_a_empty_n");
    sc_trace(mVcdFile, frame3_a_full_n, "frame3_a_full_n");
    sc_trace(mVcdFile, frame3_a_dout, "frame3_a_dout");
    sc_trace(mVcdFile, frame3_a_empty_n, "frame3_a_empty_n");
    sc_trace(mVcdFile, frame3_b_full_n, "frame3_b_full_n");
    sc_trace(mVcdFile, frame3_b_dout, "frame3_b_dout");
    sc_trace(mVcdFile, frame3_b_empty_n, "frame3_b_empty_n");
    sc_trace(mVcdFile, frame4_a_full_n, "frame4_a_full_n");
    sc_trace(mVcdFile, frame4_a_dout, "frame4_a_dout");
    sc_trace(mVcdFile, frame4_a_empty_n, "frame4_a_empty_n");
    sc_trace(mVcdFile, frame5_a_full_n, "frame5_a_full_n");
    sc_trace(mVcdFile, frame5_a_dout, "frame5_a_dout");
    sc_trace(mVcdFile, frame5_a_empty_n, "frame5_a_empty_n");
    sc_trace(mVcdFile, gradient_x_full_n, "gradient_x_full_n");
    sc_trace(mVcdFile, gradient_x_dout, "gradient_x_dout");
    sc_trace(mVcdFile, gradient_x_empty_n, "gradient_x_empty_n");
    sc_trace(mVcdFile, gradient_y_full_n, "gradient_y_full_n");
    sc_trace(mVcdFile, gradient_y_dout, "gradient_y_dout");
    sc_trace(mVcdFile, gradient_y_empty_n, "gradient_y_empty_n");
    sc_trace(mVcdFile, gradient_z_full_n, "gradient_z_full_n");
    sc_trace(mVcdFile, gradient_z_dout, "gradient_z_dout");
    sc_trace(mVcdFile, gradient_z_empty_n, "gradient_z_empty_n");
    sc_trace(mVcdFile, y_filtered_x_full_n, "y_filtered_x_full_n");
    sc_trace(mVcdFile, y_filtered_x_dout, "y_filtered_x_dout");
    sc_trace(mVcdFile, y_filtered_x_empty_n, "y_filtered_x_empty_n");
    sc_trace(mVcdFile, y_filtered_y_full_n, "y_filtered_y_full_n");
    sc_trace(mVcdFile, y_filtered_y_dout, "y_filtered_y_dout");
    sc_trace(mVcdFile, y_filtered_y_empty_n, "y_filtered_y_empty_n");
    sc_trace(mVcdFile, y_filtered_z_full_n, "y_filtered_z_full_n");
    sc_trace(mVcdFile, y_filtered_z_dout, "y_filtered_z_dout");
    sc_trace(mVcdFile, y_filtered_z_empty_n, "y_filtered_z_empty_n");
    sc_trace(mVcdFile, filtered_gradient_x_full_n, "filtered_gradient_x_full_n");
    sc_trace(mVcdFile, filtered_gradient_x_dout, "filtered_gradient_x_dout");
    sc_trace(mVcdFile, filtered_gradient_x_empty_n, "filtered_gradient_x_empty_n");
    sc_trace(mVcdFile, filtered_gradient_y_full_n, "filtered_gradient_y_full_n");
    sc_trace(mVcdFile, filtered_gradient_y_dout, "filtered_gradient_y_dout");
    sc_trace(mVcdFile, filtered_gradient_y_empty_n, "filtered_gradient_y_empty_n");
    sc_trace(mVcdFile, filtered_gradient_z_full_n, "filtered_gradient_z_full_n");
    sc_trace(mVcdFile, filtered_gradient_z_dout, "filtered_gradient_z_dout");
    sc_trace(mVcdFile, filtered_gradient_z_empty_n, "filtered_gradient_z_empty_n");
    sc_trace(mVcdFile, out_product_val_full_n, "out_product_val_full_n");
    sc_trace(mVcdFile, out_product_val_dout, "out_product_val_dout");
    sc_trace(mVcdFile, out_product_val_empty_n, "out_product_val_empty_n");
    sc_trace(mVcdFile, tensor_y_val_full_n, "tensor_y_val_full_n");
    sc_trace(mVcdFile, tensor_y_val_dout, "tensor_y_val_dout");
    sc_trace(mVcdFile, tensor_y_val_empty_n, "tensor_y_val_empty_n");
    sc_trace(mVcdFile, tensor_val_full_n, "tensor_val_full_n");
    sc_trace(mVcdFile, tensor_val_dout, "tensor_val_dout");
    sc_trace(mVcdFile, tensor_val_empty_n, "tensor_val_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_gradient_xy_calc_U0_din, "start_for_gradient_xy_calc_U0_din");
    sc_trace(mVcdFile, start_for_gradient_xy_calc_U0_full_n, "start_for_gradient_xy_calc_U0_full_n");
    sc_trace(mVcdFile, start_for_gradient_xy_calc_U0_dout, "start_for_gradient_xy_calc_U0_dout");
    sc_trace(mVcdFile, start_for_gradient_xy_calc_U0_empty_n, "start_for_gradient_xy_calc_U0_empty_n");
    sc_trace(mVcdFile, start_for_gradient_z_calc_U0_din, "start_for_gradient_z_calc_U0_din");
    sc_trace(mVcdFile, start_for_gradient_z_calc_U0_full_n, "start_for_gradient_z_calc_U0_full_n");
    sc_trace(mVcdFile, start_for_gradient_z_calc_U0_dout, "start_for_gradient_z_calc_U0_dout");
    sc_trace(mVcdFile, start_for_gradient_z_calc_U0_empty_n, "start_for_gradient_z_calc_U0_empty_n");
    sc_trace(mVcdFile, start_for_gradient_weight_y_U0_din, "start_for_gradient_weight_y_U0_din");
    sc_trace(mVcdFile, start_for_gradient_weight_y_U0_full_n, "start_for_gradient_weight_y_U0_full_n");
    sc_trace(mVcdFile, start_for_gradient_weight_y_U0_dout, "start_for_gradient_weight_y_U0_dout");
    sc_trace(mVcdFile, start_for_gradient_weight_y_U0_empty_n, "start_for_gradient_weight_y_U0_empty_n");
    sc_trace(mVcdFile, gradient_z_calc_U0_start_full_n, "gradient_z_calc_U0_start_full_n");
    sc_trace(mVcdFile, gradient_z_calc_U0_start_write, "gradient_z_calc_U0_start_write");
    sc_trace(mVcdFile, start_for_gradient_weight_x_U0_din, "start_for_gradient_weight_x_U0_din");
    sc_trace(mVcdFile, start_for_gradient_weight_x_U0_full_n, "start_for_gradient_weight_x_U0_full_n");
    sc_trace(mVcdFile, start_for_gradient_weight_x_U0_dout, "start_for_gradient_weight_x_U0_dout");
    sc_trace(mVcdFile, start_for_gradient_weight_x_U0_empty_n, "start_for_gradient_weight_x_U0_empty_n");
    sc_trace(mVcdFile, start_for_outer_product_U0_din, "start_for_outer_product_U0_din");
    sc_trace(mVcdFile, start_for_outer_product_U0_full_n, "start_for_outer_product_U0_full_n");
    sc_trace(mVcdFile, start_for_outer_product_U0_dout, "start_for_outer_product_U0_dout");
    sc_trace(mVcdFile, start_for_outer_product_U0_empty_n, "start_for_outer_product_U0_empty_n");
    sc_trace(mVcdFile, start_for_tensor_weight_y_U0_din, "start_for_tensor_weight_y_U0_din");
    sc_trace(mVcdFile, start_for_tensor_weight_y_U0_full_n, "start_for_tensor_weight_y_U0_full_n");
    sc_trace(mVcdFile, start_for_tensor_weight_y_U0_dout, "start_for_tensor_weight_y_U0_dout");
    sc_trace(mVcdFile, start_for_tensor_weight_y_U0_empty_n, "start_for_tensor_weight_y_U0_empty_n");
    sc_trace(mVcdFile, start_for_tensor_weight_x_U0_din, "start_for_tensor_weight_x_U0_din");
    sc_trace(mVcdFile, start_for_tensor_weight_x_U0_full_n, "start_for_tensor_weight_x_U0_full_n");
    sc_trace(mVcdFile, start_for_tensor_weight_x_U0_dout, "start_for_tensor_weight_x_U0_dout");
    sc_trace(mVcdFile, start_for_tensor_weight_x_U0_empty_n, "start_for_tensor_weight_x_U0_empty_n");
    sc_trace(mVcdFile, start_for_flow_calc_U0_din, "start_for_flow_calc_U0_din");
    sc_trace(mVcdFile, start_for_flow_calc_U0_full_n, "start_for_flow_calc_U0_full_n");
    sc_trace(mVcdFile, start_for_flow_calc_U0_dout, "start_for_flow_calc_U0_dout");
    sc_trace(mVcdFile, start_for_flow_calc_U0_empty_n, "start_for_flow_calc_U0_empty_n");
    sc_trace(mVcdFile, flow_calc_U0_start_full_n, "flow_calc_U0_start_full_n");
    sc_trace(mVcdFile, flow_calc_U0_start_write, "flow_calc_U0_start_write");
#endif

    }
    mHdltvinHandle.open("a0_optical_flow.hdltvin.dat");
    mHdltvoutHandle.open("a0_optical_flow.hdltvout.dat");
}

a0_optical_flow::~a0_optical_flow() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Loop_FRAMES_CP_OUTER_U0;
    delete gradient_xy_calc_U0;
    delete gradient_z_calc_U0;
    delete gradient_weight_y_U0;
    delete gradient_weight_x_U0;
    delete outer_product_U0;
    delete tensor_weight_y_U0;
    delete tensor_weight_x_U0;
    delete flow_calc_U0;
    delete frame1_a_U;
    delete frame2_a_U;
    delete frame3_a_U;
    delete frame3_b_U;
    delete frame4_a_U;
    delete frame5_a_U;
    delete gradient_x_U;
    delete gradient_y_U;
    delete gradient_z_U;
    delete y_filtered_x_U;
    delete y_filtered_y_U;
    delete y_filtered_z_U;
    delete filtered_gradient_x_U;
    delete filtered_gradient_y_U;
    delete filtered_gradient_z_U;
    delete out_product_val_U;
    delete tensor_y_val_U;
    delete tensor_val_U;
    delete start_for_gradienEe0_U;
    delete start_for_gradienFfa_U;
    delete start_for_gradienGfk_U;
    delete start_for_gradienHfu_U;
    delete start_for_outer_pIfE_U;
    delete start_for_tensor_JfO_U;
    delete start_for_tensor_KfY_U;
    delete start_for_flow_caLf8_U;
}

void a0_optical_flow::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void a0_optical_flow::thread_Loop_FRAMES_CP_OUTER_U0_ap_continue() {
    Loop_FRAMES_CP_OUTER_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_Loop_FRAMES_CP_OUTER_U0_ap_start() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        Loop_FRAMES_CP_OUTER_U0_ap_start = ap_const_logic_0;
    } else {
        Loop_FRAMES_CP_OUTER_U0_ap_start = ap_start.read();
    }
}

void a0_optical_flow::thread_Loop_FRAMES_CP_OUTER_U0_start_full_n() {
    Loop_FRAMES_CP_OUTER_U0_start_full_n = (start_for_gradient_xy_calc_U0_full_n.read() & start_for_gradient_z_calc_U0_full_n.read());
}

void a0_optical_flow::thread_ap_done() {
    ap_done = flow_calc_U0_ap_done.read();
}

void a0_optical_flow::thread_ap_idle() {
    ap_idle = (Loop_FRAMES_CP_OUTER_U0_ap_idle.read() & gradient_xy_calc_U0_ap_idle.read() & gradient_z_calc_U0_ap_idle.read() & gradient_weight_y_U0_ap_idle.read() & gradient_weight_x_U0_ap_idle.read() & outer_product_U0_ap_idle.read() & tensor_weight_y_U0_ap_idle.read() & tensor_weight_x_U0_ap_idle.read() & flow_calc_U0_ap_idle.read());
}

void a0_optical_flow::thread_ap_ready() {
    ap_ready = Loop_FRAMES_CP_OUTER_U0_ap_ready.read();
}

void a0_optical_flow::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void a0_optical_flow::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_ap_sync_done() {
    ap_sync_done = flow_calc_U0_ap_done.read();
}

void a0_optical_flow::thread_ap_sync_ready() {
    ap_sync_ready = Loop_FRAMES_CP_OUTER_U0_ap_ready.read();
}

void a0_optical_flow::thread_flow_calc_U0_ap_continue() {
    flow_calc_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_flow_calc_U0_ap_start() {
    flow_calc_U0_ap_start = start_for_flow_calc_U0_empty_n.read();
}

void a0_optical_flow::thread_flow_calc_U0_start_full_n() {
    flow_calc_U0_start_full_n = ap_const_logic_1;
}

void a0_optical_flow::thread_flow_calc_U0_start_write() {
    flow_calc_U0_start_write = ap_const_logic_0;
}

void a0_optical_flow::thread_frames_V_read() {
    frames_V_read = Loop_FRAMES_CP_OUTER_U0_frames_V_read.read();
}

void a0_optical_flow::thread_gradient_weight_x_U0_ap_continue() {
    gradient_weight_x_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_gradient_weight_x_U0_ap_start() {
    gradient_weight_x_U0_ap_start = start_for_gradient_weight_x_U0_empty_n.read();
}

void a0_optical_flow::thread_gradient_weight_y_U0_ap_continue() {
    gradient_weight_y_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_gradient_weight_y_U0_ap_start() {
    gradient_weight_y_U0_ap_start = start_for_gradient_weight_y_U0_empty_n.read();
}

void a0_optical_flow::thread_gradient_xy_calc_U0_ap_continue() {
    gradient_xy_calc_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_gradient_xy_calc_U0_ap_start() {
    gradient_xy_calc_U0_ap_start = start_for_gradient_xy_calc_U0_empty_n.read();
}

void a0_optical_flow::thread_gradient_z_calc_U0_ap_continue() {
    gradient_z_calc_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_gradient_z_calc_U0_ap_start() {
    gradient_z_calc_U0_ap_start = start_for_gradient_z_calc_U0_empty_n.read();
}

void a0_optical_flow::thread_gradient_z_calc_U0_start_full_n() {
    gradient_z_calc_U0_start_full_n = ap_const_logic_1;
}

void a0_optical_flow::thread_gradient_z_calc_U0_start_write() {
    gradient_z_calc_U0_start_write = ap_const_logic_0;
}

void a0_optical_flow::thread_outer_product_U0_ap_continue() {
    outer_product_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_outer_product_U0_ap_start() {
    outer_product_U0_ap_start = start_for_outer_product_U0_empty_n.read();
}

void a0_optical_flow::thread_outputs_din() {
    outputs_din = flow_calc_U0_outputs_din.read();
}

void a0_optical_flow::thread_outputs_write() {
    outputs_write = flow_calc_U0_outputs_write.read();
}

void a0_optical_flow::thread_start_for_flow_calc_U0_din() {
    start_for_flow_calc_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_start_for_gradient_weight_x_U0_din() {
    start_for_gradient_weight_x_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_start_for_gradient_weight_y_U0_din() {
    start_for_gradient_weight_y_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_start_for_gradient_xy_calc_U0_din() {
    start_for_gradient_xy_calc_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_start_for_gradient_z_calc_U0_din() {
    start_for_gradient_z_calc_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_start_for_outer_product_U0_din() {
    start_for_outer_product_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_start_for_tensor_weight_x_U0_din() {
    start_for_tensor_weight_x_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_start_for_tensor_weight_y_U0_din() {
    start_for_tensor_weight_y_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void a0_optical_flow::thread_tensor_weight_x_U0_ap_continue() {
    tensor_weight_x_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_tensor_weight_x_U0_ap_start() {
    tensor_weight_x_U0_ap_start = start_for_tensor_weight_x_U0_empty_n.read();
}

void a0_optical_flow::thread_tensor_weight_y_U0_ap_continue() {
    tensor_weight_y_U0_ap_continue = ap_const_logic_1;
}

void a0_optical_flow::thread_tensor_weight_y_U0_ap_start() {
    tensor_weight_y_U0_ap_start = start_for_tensor_weight_y_U0_empty_n.read();
}

void a0_optical_flow::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"frames_V_dout\" :  \"" << frames_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"frames_V_empty_n\" :  \"" << frames_V_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"frames_V_read\" :  \"" << frames_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_din\" :  \"" << outputs_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outputs_full_n\" :  \"" << outputs_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outputs_write\" :  \"" << outputs_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

