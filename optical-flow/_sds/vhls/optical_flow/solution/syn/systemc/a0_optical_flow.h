// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_optical_flow_HH_
#define _a0_optical_flow_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "a0_Loop_FRAMES_CP_OUTER.h"
#include "a0_gradient_xy_calc.h"
#include "a0_gradient_z_calc.h"
#include "a0_gradient_weight_y.h"
#include "a0_gradient_weight_x.h"
#include "a0_outer_product.h"
#include "a0_tensor_weight_y.h"
#include "a0_tensor_weight_x.h"
#include "a0_flow_calc.h"
#include "a0_fifo_w32_d1_A.h"
#include "a0_fifo_w32_d4096_A.h"
#include "a0_fifo_w192_d1_A.h"
#include "a0_start_for_gradienEe0.h"
#include "a0_start_for_gradienFfa.h"
#include "a0_start_for_gradienGfk.h"
#include "a0_start_for_gradienHfu.h"
#include "a0_start_for_outer_pIfE.h"
#include "a0_start_for_tensor_JfO.h"
#include "a0_start_for_tensor_KfY.h"
#include "a0_start_for_flow_caLf8.h"

namespace ap_rtl {

struct a0_optical_flow : public sc_module {
    // Port declarations 12
    sc_in< sc_lv<64> > frames_V_dout;
    sc_in< sc_logic > frames_V_empty_n;
    sc_out< sc_logic > frames_V_read;
    sc_out< sc_lv<64> > outputs_din;
    sc_in< sc_logic > outputs_full_n;
    sc_out< sc_logic > outputs_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    a0_optical_flow(sc_module_name name);
    SC_HAS_PROCESS(a0_optical_flow);

    ~a0_optical_flow();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    a0_Loop_FRAMES_CP_OUTER* Loop_FRAMES_CP_OUTER_U0;
    a0_gradient_xy_calc* gradient_xy_calc_U0;
    a0_gradient_z_calc* gradient_z_calc_U0;
    a0_gradient_weight_y* gradient_weight_y_U0;
    a0_gradient_weight_x* gradient_weight_x_U0;
    a0_outer_product* outer_product_U0;
    a0_tensor_weight_y* tensor_weight_y_U0;
    a0_tensor_weight_x* tensor_weight_x_U0;
    a0_flow_calc* flow_calc_U0;
    a0_fifo_w32_d1_A* frame1_a_U;
    a0_fifo_w32_d1_A* frame2_a_U;
    a0_fifo_w32_d1_A* frame3_a_U;
    a0_fifo_w32_d1_A* frame3_b_U;
    a0_fifo_w32_d1_A* frame4_a_U;
    a0_fifo_w32_d1_A* frame5_a_U;
    a0_fifo_w32_d1_A* gradient_x_U;
    a0_fifo_w32_d1_A* gradient_y_U;
    a0_fifo_w32_d4096_A* gradient_z_U;
    a0_fifo_w32_d1_A* y_filtered_x_U;
    a0_fifo_w32_d1_A* y_filtered_y_U;
    a0_fifo_w32_d1_A* y_filtered_z_U;
    a0_fifo_w32_d1_A* filtered_gradient_x_U;
    a0_fifo_w32_d1_A* filtered_gradient_y_U;
    a0_fifo_w32_d1_A* filtered_gradient_z_U;
    a0_fifo_w192_d1_A* out_product_val_U;
    a0_fifo_w192_d1_A* tensor_y_val_U;
    a0_fifo_w192_d1_A* tensor_val_U;
    a0_start_for_gradienEe0* start_for_gradienEe0_U;
    a0_start_for_gradienFfa* start_for_gradienFfa_U;
    a0_start_for_gradienGfk* start_for_gradienGfk_U;
    a0_start_for_gradienHfu* start_for_gradienHfu_U;
    a0_start_for_outer_pIfE* start_for_outer_pIfE_U;
    a0_start_for_tensor_JfO* start_for_tensor_JfO_U;
    a0_start_for_tensor_KfY* start_for_tensor_KfY_U;
    a0_start_for_flow_caLf8* start_for_flow_caLf8_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_ap_start;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_start_full_n;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_ap_done;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_ap_continue;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_ap_idle;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_ap_ready;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_start_out;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_start_write;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_frames_V_read;
    sc_signal< sc_lv<32> > Loop_FRAMES_CP_OUTER_U0_frame1_a_din;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_frame1_a_write;
    sc_signal< sc_lv<32> > Loop_FRAMES_CP_OUTER_U0_frame2_a_din;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_frame2_a_write;
    sc_signal< sc_lv<32> > Loop_FRAMES_CP_OUTER_U0_frame3_a_din;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_frame3_a_write;
    sc_signal< sc_lv<32> > Loop_FRAMES_CP_OUTER_U0_frame3_b_din;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_frame3_b_write;
    sc_signal< sc_lv<32> > Loop_FRAMES_CP_OUTER_U0_frame4_a_din;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_frame4_a_write;
    sc_signal< sc_lv<32> > Loop_FRAMES_CP_OUTER_U0_frame5_a_din;
    sc_signal< sc_logic > Loop_FRAMES_CP_OUTER_U0_frame5_a_write;
    sc_signal< sc_logic > gradient_xy_calc_U0_ap_start;
    sc_signal< sc_logic > gradient_xy_calc_U0_ap_done;
    sc_signal< sc_logic > gradient_xy_calc_U0_ap_continue;
    sc_signal< sc_logic > gradient_xy_calc_U0_ap_idle;
    sc_signal< sc_logic > gradient_xy_calc_U0_ap_ready;
    sc_signal< sc_logic > gradient_xy_calc_U0_start_out;
    sc_signal< sc_logic > gradient_xy_calc_U0_start_write;
    sc_signal< sc_logic > gradient_xy_calc_U0_frame3_a_read;
    sc_signal< sc_lv<32> > gradient_xy_calc_U0_gradient_x_din;
    sc_signal< sc_logic > gradient_xy_calc_U0_gradient_x_write;
    sc_signal< sc_lv<32> > gradient_xy_calc_U0_gradient_y_din;
    sc_signal< sc_logic > gradient_xy_calc_U0_gradient_y_write;
    sc_signal< sc_logic > gradient_z_calc_U0_ap_start;
    sc_signal< sc_logic > gradient_z_calc_U0_ap_done;
    sc_signal< sc_logic > gradient_z_calc_U0_ap_continue;
    sc_signal< sc_logic > gradient_z_calc_U0_ap_idle;
    sc_signal< sc_logic > gradient_z_calc_U0_ap_ready;
    sc_signal< sc_logic > gradient_z_calc_U0_frame1_a_read;
    sc_signal< sc_logic > gradient_z_calc_U0_frame2_a_read;
    sc_signal< sc_logic > gradient_z_calc_U0_frame3_b_read;
    sc_signal< sc_logic > gradient_z_calc_U0_frame4_a_read;
    sc_signal< sc_logic > gradient_z_calc_U0_frame5_a_read;
    sc_signal< sc_lv<32> > gradient_z_calc_U0_gradient_z_din;
    sc_signal< sc_logic > gradient_z_calc_U0_gradient_z_write;
    sc_signal< sc_logic > gradient_weight_y_U0_ap_start;
    sc_signal< sc_logic > gradient_weight_y_U0_ap_done;
    sc_signal< sc_logic > gradient_weight_y_U0_ap_continue;
    sc_signal< sc_logic > gradient_weight_y_U0_ap_idle;
    sc_signal< sc_logic > gradient_weight_y_U0_ap_ready;
    sc_signal< sc_logic > gradient_weight_y_U0_start_out;
    sc_signal< sc_logic > gradient_weight_y_U0_start_write;
    sc_signal< sc_logic > gradient_weight_y_U0_gradient_x_read;
    sc_signal< sc_logic > gradient_weight_y_U0_gradient_y_read;
    sc_signal< sc_logic > gradient_weight_y_U0_gradient_z_read;
    sc_signal< sc_lv<32> > gradient_weight_y_U0_y_filtered_x_din;
    sc_signal< sc_logic > gradient_weight_y_U0_y_filtered_x_write;
    sc_signal< sc_lv<32> > gradient_weight_y_U0_y_filtered_y_din;
    sc_signal< sc_logic > gradient_weight_y_U0_y_filtered_y_write;
    sc_signal< sc_lv<32> > gradient_weight_y_U0_y_filtered_z_din;
    sc_signal< sc_logic > gradient_weight_y_U0_y_filtered_z_write;
    sc_signal< sc_logic > gradient_weight_x_U0_ap_start;
    sc_signal< sc_logic > gradient_weight_x_U0_ap_done;
    sc_signal< sc_logic > gradient_weight_x_U0_ap_continue;
    sc_signal< sc_logic > gradient_weight_x_U0_ap_idle;
    sc_signal< sc_logic > gradient_weight_x_U0_ap_ready;
    sc_signal< sc_logic > gradient_weight_x_U0_start_out;
    sc_signal< sc_logic > gradient_weight_x_U0_start_write;
    sc_signal< sc_logic > gradient_weight_x_U0_y_filtered_x_read;
    sc_signal< sc_logic > gradient_weight_x_U0_y_filtered_y_read;
    sc_signal< sc_logic > gradient_weight_x_U0_y_filtered_z_read;
    sc_signal< sc_lv<32> > gradient_weight_x_U0_filtered_gradient_x_din;
    sc_signal< sc_logic > gradient_weight_x_U0_filtered_gradient_x_write;
    sc_signal< sc_lv<32> > gradient_weight_x_U0_filtered_gradient_y_din;
    sc_signal< sc_logic > gradient_weight_x_U0_filtered_gradient_y_write;
    sc_signal< sc_lv<32> > gradient_weight_x_U0_filtered_gradient_z_din;
    sc_signal< sc_logic > gradient_weight_x_U0_filtered_gradient_z_write;
    sc_signal< sc_logic > outer_product_U0_ap_start;
    sc_signal< sc_logic > outer_product_U0_ap_done;
    sc_signal< sc_logic > outer_product_U0_ap_continue;
    sc_signal< sc_logic > outer_product_U0_ap_idle;
    sc_signal< sc_logic > outer_product_U0_ap_ready;
    sc_signal< sc_logic > outer_product_U0_start_out;
    sc_signal< sc_logic > outer_product_U0_start_write;
    sc_signal< sc_logic > outer_product_U0_filtered_gradient_x_read;
    sc_signal< sc_logic > outer_product_U0_filtered_gradient_y_read;
    sc_signal< sc_logic > outer_product_U0_filtered_gradient_z_read;
    sc_signal< sc_lv<192> > outer_product_U0_out_product_val_din;
    sc_signal< sc_logic > outer_product_U0_out_product_val_write;
    sc_signal< sc_logic > tensor_weight_y_U0_ap_start;
    sc_signal< sc_logic > tensor_weight_y_U0_ap_done;
    sc_signal< sc_logic > tensor_weight_y_U0_ap_continue;
    sc_signal< sc_logic > tensor_weight_y_U0_ap_idle;
    sc_signal< sc_logic > tensor_weight_y_U0_ap_ready;
    sc_signal< sc_logic > tensor_weight_y_U0_start_out;
    sc_signal< sc_logic > tensor_weight_y_U0_start_write;
    sc_signal< sc_logic > tensor_weight_y_U0_out_product_val_read;
    sc_signal< sc_lv<192> > tensor_weight_y_U0_tensor_y_val_din;
    sc_signal< sc_logic > tensor_weight_y_U0_tensor_y_val_write;
    sc_signal< sc_logic > tensor_weight_x_U0_ap_start;
    sc_signal< sc_logic > tensor_weight_x_U0_ap_done;
    sc_signal< sc_logic > tensor_weight_x_U0_ap_continue;
    sc_signal< sc_logic > tensor_weight_x_U0_ap_idle;
    sc_signal< sc_logic > tensor_weight_x_U0_ap_ready;
    sc_signal< sc_logic > tensor_weight_x_U0_start_out;
    sc_signal< sc_logic > tensor_weight_x_U0_start_write;
    sc_signal< sc_logic > tensor_weight_x_U0_tensor_y_val_read;
    sc_signal< sc_lv<192> > tensor_weight_x_U0_tensor_val_din;
    sc_signal< sc_logic > tensor_weight_x_U0_tensor_val_write;
    sc_signal< sc_logic > flow_calc_U0_ap_start;
    sc_signal< sc_logic > flow_calc_U0_ap_done;
    sc_signal< sc_logic > flow_calc_U0_ap_continue;
    sc_signal< sc_logic > flow_calc_U0_ap_idle;
    sc_signal< sc_logic > flow_calc_U0_ap_ready;
    sc_signal< sc_lv<64> > flow_calc_U0_outputs_din;
    sc_signal< sc_logic > flow_calc_U0_outputs_write;
    sc_signal< sc_logic > flow_calc_U0_tensor_val_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > frame1_a_full_n;
    sc_signal< sc_lv<32> > frame1_a_dout;
    sc_signal< sc_logic > frame1_a_empty_n;
    sc_signal< sc_logic > frame2_a_full_n;
    sc_signal< sc_lv<32> > frame2_a_dout;
    sc_signal< sc_logic > frame2_a_empty_n;
    sc_signal< sc_logic > frame3_a_full_n;
    sc_signal< sc_lv<32> > frame3_a_dout;
    sc_signal< sc_logic > frame3_a_empty_n;
    sc_signal< sc_logic > frame3_b_full_n;
    sc_signal< sc_lv<32> > frame3_b_dout;
    sc_signal< sc_logic > frame3_b_empty_n;
    sc_signal< sc_logic > frame4_a_full_n;
    sc_signal< sc_lv<32> > frame4_a_dout;
    sc_signal< sc_logic > frame4_a_empty_n;
    sc_signal< sc_logic > frame5_a_full_n;
    sc_signal< sc_lv<32> > frame5_a_dout;
    sc_signal< sc_logic > frame5_a_empty_n;
    sc_signal< sc_logic > gradient_x_full_n;
    sc_signal< sc_lv<32> > gradient_x_dout;
    sc_signal< sc_logic > gradient_x_empty_n;
    sc_signal< sc_logic > gradient_y_full_n;
    sc_signal< sc_lv<32> > gradient_y_dout;
    sc_signal< sc_logic > gradient_y_empty_n;
    sc_signal< sc_logic > gradient_z_full_n;
    sc_signal< sc_lv<32> > gradient_z_dout;
    sc_signal< sc_logic > gradient_z_empty_n;
    sc_signal< sc_logic > y_filtered_x_full_n;
    sc_signal< sc_lv<32> > y_filtered_x_dout;
    sc_signal< sc_logic > y_filtered_x_empty_n;
    sc_signal< sc_logic > y_filtered_y_full_n;
    sc_signal< sc_lv<32> > y_filtered_y_dout;
    sc_signal< sc_logic > y_filtered_y_empty_n;
    sc_signal< sc_logic > y_filtered_z_full_n;
    sc_signal< sc_lv<32> > y_filtered_z_dout;
    sc_signal< sc_logic > y_filtered_z_empty_n;
    sc_signal< sc_logic > filtered_gradient_x_full_n;
    sc_signal< sc_lv<32> > filtered_gradient_x_dout;
    sc_signal< sc_logic > filtered_gradient_x_empty_n;
    sc_signal< sc_logic > filtered_gradient_y_full_n;
    sc_signal< sc_lv<32> > filtered_gradient_y_dout;
    sc_signal< sc_logic > filtered_gradient_y_empty_n;
    sc_signal< sc_logic > filtered_gradient_z_full_n;
    sc_signal< sc_lv<32> > filtered_gradient_z_dout;
    sc_signal< sc_logic > filtered_gradient_z_empty_n;
    sc_signal< sc_logic > out_product_val_full_n;
    sc_signal< sc_lv<192> > out_product_val_dout;
    sc_signal< sc_logic > out_product_val_empty_n;
    sc_signal< sc_logic > tensor_y_val_full_n;
    sc_signal< sc_lv<192> > tensor_y_val_dout;
    sc_signal< sc_logic > tensor_y_val_empty_n;
    sc_signal< sc_logic > tensor_val_full_n;
    sc_signal< sc_lv<192> > tensor_val_dout;
    sc_signal< sc_logic > tensor_val_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_gradient_xy_calc_U0_din;
    sc_signal< sc_logic > start_for_gradient_xy_calc_U0_full_n;
    sc_signal< sc_lv<1> > start_for_gradient_xy_calc_U0_dout;
    sc_signal< sc_logic > start_for_gradient_xy_calc_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_gradient_z_calc_U0_din;
    sc_signal< sc_logic > start_for_gradient_z_calc_U0_full_n;
    sc_signal< sc_lv<1> > start_for_gradient_z_calc_U0_dout;
    sc_signal< sc_logic > start_for_gradient_z_calc_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_gradient_weight_y_U0_din;
    sc_signal< sc_logic > start_for_gradient_weight_y_U0_full_n;
    sc_signal< sc_lv<1> > start_for_gradient_weight_y_U0_dout;
    sc_signal< sc_logic > start_for_gradient_weight_y_U0_empty_n;
    sc_signal< sc_logic > gradient_z_calc_U0_start_full_n;
    sc_signal< sc_logic > gradient_z_calc_U0_start_write;
    sc_signal< sc_lv<1> > start_for_gradient_weight_x_U0_din;
    sc_signal< sc_logic > start_for_gradient_weight_x_U0_full_n;
    sc_signal< sc_lv<1> > start_for_gradient_weight_x_U0_dout;
    sc_signal< sc_logic > start_for_gradient_weight_x_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_outer_product_U0_din;
    sc_signal< sc_logic > start_for_outer_product_U0_full_n;
    sc_signal< sc_lv<1> > start_for_outer_product_U0_dout;
    sc_signal< sc_logic > start_for_outer_product_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_tensor_weight_y_U0_din;
    sc_signal< sc_logic > start_for_tensor_weight_y_U0_full_n;
    sc_signal< sc_lv<1> > start_for_tensor_weight_y_U0_dout;
    sc_signal< sc_logic > start_for_tensor_weight_y_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_tensor_weight_x_U0_din;
    sc_signal< sc_logic > start_for_tensor_weight_x_U0_full_n;
    sc_signal< sc_lv<1> > start_for_tensor_weight_x_U0_dout;
    sc_signal< sc_logic > start_for_tensor_weight_x_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_flow_calc_U0_din;
    sc_signal< sc_logic > start_for_flow_calc_U0_full_n;
    sc_signal< sc_lv<1> > start_for_flow_calc_U0_dout;
    sc_signal< sc_logic > start_for_flow_calc_U0_empty_n;
    sc_signal< sc_logic > flow_calc_U0_start_full_n;
    sc_signal< sc_logic > flow_calc_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_Loop_FRAMES_CP_OUTER_U0_ap_continue();
    void thread_Loop_FRAMES_CP_OUTER_U0_ap_start();
    void thread_Loop_FRAMES_CP_OUTER_U0_start_full_n();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_flow_calc_U0_ap_continue();
    void thread_flow_calc_U0_ap_start();
    void thread_flow_calc_U0_start_full_n();
    void thread_flow_calc_U0_start_write();
    void thread_frames_V_read();
    void thread_gradient_weight_x_U0_ap_continue();
    void thread_gradient_weight_x_U0_ap_start();
    void thread_gradient_weight_y_U0_ap_continue();
    void thread_gradient_weight_y_U0_ap_start();
    void thread_gradient_xy_calc_U0_ap_continue();
    void thread_gradient_xy_calc_U0_ap_start();
    void thread_gradient_z_calc_U0_ap_continue();
    void thread_gradient_z_calc_U0_ap_start();
    void thread_gradient_z_calc_U0_start_full_n();
    void thread_gradient_z_calc_U0_start_write();
    void thread_outer_product_U0_ap_continue();
    void thread_outer_product_U0_ap_start();
    void thread_outputs_din();
    void thread_outputs_write();
    void thread_start_for_flow_calc_U0_din();
    void thread_start_for_gradient_weight_x_U0_din();
    void thread_start_for_gradient_weight_y_U0_din();
    void thread_start_for_gradient_xy_calc_U0_din();
    void thread_start_for_gradient_z_calc_U0_din();
    void thread_start_for_outer_product_U0_din();
    void thread_start_for_tensor_weight_x_U0_din();
    void thread_start_for_tensor_weight_y_U0_din();
    void thread_tensor_weight_x_U0_ap_continue();
    void thread_tensor_weight_x_U0_ap_start();
    void thread_tensor_weight_y_U0_ap_continue();
    void thread_tensor_weight_y_U0_ap_start();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
