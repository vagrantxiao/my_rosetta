-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_tensor_weight_x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    tensor_y_val_dout : IN STD_LOGIC_VECTOR (191 downto 0);
    tensor_y_val_empty_n : IN STD_LOGIC;
    tensor_y_val_read : OUT STD_LOGIC;
    tensor_val_din : OUT STD_LOGIC_VECTOR (191 downto 0);
    tensor_val_full_n : IN STD_LOGIC;
    tensor_val_write : OUT STD_LOGIC );
end;


architecture behav of a0_tensor_weight_x is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3EA60AA6 : STD_LOGIC_VECTOR (31 downto 0) := "00111110101001100000101010100110";
    constant ap_const_lv32_3EB3DD98 : STD_LOGIC_VECTOR (31 downto 0) := "00111110101100111101110110011000";
    constant ap_const_lv19_6D1B4 : STD_LOGIC_VECTOR (18 downto 0) := "1101101000110110100";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv11_401 : STD_LOGIC_VECTOR (10 downto 0) := "10000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal tensor_y_val_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_844 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_853 : STD_LOGIC_VECTOR (0 downto 0);
    signal tensor_val_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal tmp_4_reg_867 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_143 : STD_LOGIC_VECTOR (18 downto 0);
    signal c_reg_154 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_val_val_load_22_2_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_2_reg_165_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op69_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal buf_val_val_load_22_2_reg_165_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_2_reg_165_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_2_reg_165_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_2_reg_165_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_2_reg_165_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_2_reg_165_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_2_reg_177_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_2_reg_189_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_2_reg_201_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_2_reg_213_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_2_reg_225_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_417_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_fu_437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_857_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_867_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_479_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_val_val_load_18_reg_906 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_reg_906_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_reg_906_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_reg_906_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_reg_911 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_reg_911_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_reg_911_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_reg_911_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_reg_916 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_reg_916_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_reg_916_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_reg_916_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_reg_921 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_reg_921_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_reg_921_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_reg_921_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_reg_926 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_reg_926_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_reg_926_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_reg_926_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_23_reg_931 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_23_reg_931_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_23_reg_931_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_23_reg_931_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_936 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_0_1_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_0_2_reg_946 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_330_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_0_3_reg_951 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_0_4_reg_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_0_5_reg_961 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_966 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_0_1_reg_971 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_247_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_0_2_reg_976 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_252_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_0_3_reg_981 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_0_4_reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_0_5_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_reg_996 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_350_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_1_reg_1001 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_2_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_3_reg_1011 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_4_reg_1016 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_1_5_reg_1021 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_1_reg_1026 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_1_1_reg_1031 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_1_2_reg_1036 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_1_3_reg_1041 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_1_4_reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_1_5_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_2_reg_1056 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_2_1_reg_1061 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_2_2_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_393_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_2_3_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_399_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_2_4_reg_1076 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_2_5_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_693_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_704_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_715_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_737_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_748_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_val_load_22_2_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_621_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_val_load_21_2_reg_177 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_val_load_20_2_reg_189 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_591_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_val_load_19_2_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_576_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_val_load_18_2_reg_213 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_val_load_17_2_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal buf_val_val_load_7_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_6_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_5_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_4_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_3_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_2_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_17_1_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_18_1_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_19_1_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_20_1_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_21_1_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_val_load_22_1_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_mid2_fu_429_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_75_fu_451_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_566_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_581_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_596_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_611_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_626_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_700_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_733_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_744_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_237_ce : STD_LOGIC;
    signal grp_fu_242_ce : STD_LOGIC;
    signal grp_fu_247_ce : STD_LOGIC;
    signal grp_fu_252_ce : STD_LOGIC;
    signal grp_fu_257_ce : STD_LOGIC;
    signal grp_fu_262_ce : STD_LOGIC;
    signal grp_fu_267_ce : STD_LOGIC;
    signal grp_fu_271_ce : STD_LOGIC;
    signal grp_fu_275_ce : STD_LOGIC;
    signal grp_fu_279_ce : STD_LOGIC;
    signal grp_fu_283_ce : STD_LOGIC;
    signal grp_fu_287_ce : STD_LOGIC;
    signal grp_fu_291_ce : STD_LOGIC;
    signal grp_fu_295_ce : STD_LOGIC;
    signal grp_fu_299_ce : STD_LOGIC;
    signal grp_fu_303_ce : STD_LOGIC;
    signal grp_fu_307_ce : STD_LOGIC;
    signal grp_fu_311_ce : STD_LOGIC;
    signal grp_fu_315_ce : STD_LOGIC;
    signal grp_fu_320_ce : STD_LOGIC;
    signal grp_fu_325_ce : STD_LOGIC;
    signal grp_fu_330_ce : STD_LOGIC;
    signal grp_fu_335_ce : STD_LOGIC;
    signal grp_fu_340_ce : STD_LOGIC;
    signal grp_fu_345_ce : STD_LOGIC;
    signal grp_fu_350_ce : STD_LOGIC;
    signal grp_fu_355_ce : STD_LOGIC;
    signal grp_fu_360_ce : STD_LOGIC;
    signal grp_fu_365_ce : STD_LOGIC;
    signal grp_fu_370_ce : STD_LOGIC;
    signal grp_fu_375_ce : STD_LOGIC;
    signal grp_fu_381_ce : STD_LOGIC;
    signal grp_fu_387_ce : STD_LOGIC;
    signal grp_fu_393_ce : STD_LOGIC;
    signal grp_fu_399_ce : STD_LOGIC;
    signal grp_fu_405_ce : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_198 : BOOLEAN;
    signal ap_condition_569 : BOOLEAN;

    component a0_optical_flow_faddhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component a0_optical_flow_fmulibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    optical_flow_faddhbi_U203 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_reg_936,
        din1 => ap_const_lv32_0,
        ce => grp_fu_237_ce,
        dout => grp_fu_237_p2);

    optical_flow_faddhbi_U204 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_0_1_reg_941,
        din1 => ap_const_lv32_0,
        ce => grp_fu_242_ce,
        dout => grp_fu_242_p2);

    optical_flow_faddhbi_U205 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_0_2_reg_946,
        din1 => ap_const_lv32_0,
        ce => grp_fu_247_ce,
        dout => grp_fu_247_p2);

    optical_flow_faddhbi_U206 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_0_3_reg_951,
        din1 => ap_const_lv32_0,
        ce => grp_fu_252_ce,
        dout => grp_fu_252_p2);

    optical_flow_faddhbi_U207 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_0_4_reg_956,
        din1 => ap_const_lv32_0,
        ce => grp_fu_257_ce,
        dout => grp_fu_257_p2);

    optical_flow_faddhbi_U208 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_0_5_reg_961,
        din1 => ap_const_lv32_0,
        ce => grp_fu_262_ce,
        dout => grp_fu_262_p2);

    optical_flow_faddhbi_U209 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_reg_966,
        din1 => tmp_38_1_reg_996,
        ce => grp_fu_267_ce,
        dout => grp_fu_267_p2);

    optical_flow_faddhbi_U210 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_0_1_reg_971,
        din1 => tmp_38_1_1_reg_1001,
        ce => grp_fu_271_ce,
        dout => grp_fu_271_p2);

    optical_flow_faddhbi_U211 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_0_2_reg_976,
        din1 => tmp_38_1_2_reg_1006,
        ce => grp_fu_275_ce,
        dout => grp_fu_275_p2);

    optical_flow_faddhbi_U212 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_0_3_reg_981,
        din1 => tmp_38_1_3_reg_1011,
        ce => grp_fu_279_ce,
        dout => grp_fu_279_p2);

    optical_flow_faddhbi_U213 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_0_4_reg_986,
        din1 => tmp_38_1_4_reg_1016,
        ce => grp_fu_283_ce,
        dout => grp_fu_283_p2);

    optical_flow_faddhbi_U214 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_0_5_reg_991,
        din1 => tmp_38_1_5_reg_1021,
        ce => grp_fu_287_ce,
        dout => grp_fu_287_p2);

    optical_flow_faddhbi_U215 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_1_reg_1026,
        din1 => tmp_38_2_reg_1056,
        ce => grp_fu_291_ce,
        dout => grp_fu_291_p2);

    optical_flow_faddhbi_U216 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_1_1_reg_1031,
        din1 => tmp_38_2_1_reg_1061,
        ce => grp_fu_295_ce,
        dout => grp_fu_295_p2);

    optical_flow_faddhbi_U217 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_1_2_reg_1036,
        din1 => tmp_38_2_2_reg_1066,
        ce => grp_fu_299_ce,
        dout => grp_fu_299_p2);

    optical_flow_faddhbi_U218 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_1_3_reg_1041,
        din1 => tmp_38_2_3_reg_1071,
        ce => grp_fu_303_ce,
        dout => grp_fu_303_p2);

    optical_flow_faddhbi_U219 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_1_4_reg_1046,
        din1 => tmp_38_2_4_reg_1076,
        ce => grp_fu_307_ce,
        dout => grp_fu_307_p2);

    optical_flow_faddhbi_U220 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_1_5_reg_1051,
        din1 => tmp_38_2_5_reg_1081,
        ce => grp_fu_311_ce,
        dout => grp_fu_311_p2);

    optical_flow_fmulibs_U221 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_7_fu_82,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_315_ce,
        dout => grp_fu_315_p2);

    optical_flow_fmulibs_U222 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_6_fu_86,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_320_ce,
        dout => grp_fu_320_p2);

    optical_flow_fmulibs_U223 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_5_fu_90,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_325_ce,
        dout => grp_fu_325_p2);

    optical_flow_fmulibs_U224 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_4_fu_94,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_330_ce,
        dout => grp_fu_330_p2);

    optical_flow_fmulibs_U225 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_3_fu_98,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_335_ce,
        dout => grp_fu_335_p2);

    optical_flow_fmulibs_U226 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_2_fu_102,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_340_ce,
        dout => grp_fu_340_p2);

    optical_flow_fmulibs_U227 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_18_reg_906_pp0_iter4_reg,
        din1 => ap_const_lv32_3EB3DD98,
        ce => grp_fu_345_ce,
        dout => grp_fu_345_p2);

    optical_flow_fmulibs_U228 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_19_reg_911_pp0_iter4_reg,
        din1 => ap_const_lv32_3EB3DD98,
        ce => grp_fu_350_ce,
        dout => grp_fu_350_p2);

    optical_flow_fmulibs_U229 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_20_reg_916_pp0_iter4_reg,
        din1 => ap_const_lv32_3EB3DD98,
        ce => grp_fu_355_ce,
        dout => grp_fu_355_p2);

    optical_flow_fmulibs_U230 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_21_reg_921_pp0_iter4_reg,
        din1 => ap_const_lv32_3EB3DD98,
        ce => grp_fu_360_ce,
        dout => grp_fu_360_p2);

    optical_flow_fmulibs_U231 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_22_reg_926_pp0_iter4_reg,
        din1 => ap_const_lv32_3EB3DD98,
        ce => grp_fu_365_ce,
        dout => grp_fu_365_p2);

    optical_flow_fmulibs_U232 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_23_reg_931_pp0_iter4_reg,
        din1 => ap_const_lv32_3EB3DD98,
        ce => grp_fu_370_ce,
        dout => grp_fu_370_p2);

    optical_flow_fmulibs_U233 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_17_2_reg_225_pp0_iter8_reg,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_375_ce,
        dout => grp_fu_375_p2);

    optical_flow_fmulibs_U234 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_18_2_reg_213_pp0_iter8_reg,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_381_ce,
        dout => grp_fu_381_p2);

    optical_flow_fmulibs_U235 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_19_2_reg_201_pp0_iter8_reg,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_387_ce,
        dout => grp_fu_387_p2);

    optical_flow_fmulibs_U236 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_20_2_reg_189_pp0_iter8_reg,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_393_ce,
        dout => grp_fu_393_p2);

    optical_flow_fmulibs_U237 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_21_2_reg_177_pp0_iter8_reg,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_399_ce,
        dout => grp_fu_399_p2);

    optical_flow_fmulibs_U238 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_val_load_22_2_reg_165_pp0_iter8_reg,
        din1 => ap_const_lv32_3EA60AA6,
        ce => grp_fu_405_ce,
        dout => grp_fu_405_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_411_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state3)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_198)) then
                if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (tmp_fu_437_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225 <= ap_phi_reg_pp0_iter0_buf_val_val_load_17_2_reg_225;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_198)) then
                if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (tmp_fu_437_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213 <= ap_phi_reg_pp0_iter0_buf_val_val_load_18_2_reg_213;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_198)) then
                if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (tmp_fu_437_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201 <= ap_phi_reg_pp0_iter0_buf_val_val_load_19_2_reg_201;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_198)) then
                if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (tmp_fu_437_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189 <= ap_phi_reg_pp0_iter0_buf_val_val_load_20_2_reg_189;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_198)) then
                if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (tmp_fu_437_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177 <= ap_phi_reg_pp0_iter0_buf_val_val_load_21_2_reg_177;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_198)) then
                if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (tmp_fu_437_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165 <= ap_phi_reg_pp0_iter0_buf_val_val_load_22_2_reg_165;
                end if;
            end if; 
        end if;
    end process;

    buf_val_val_load_17_2_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_569)) then
                if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0))) then 
                    buf_val_val_load_17_2_reg_225 <= tmp_50_fu_561_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_val_load_17_2_reg_225 <= ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225;
                end if;
            end if; 
        end if;
    end process;

    buf_val_val_load_18_2_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_569)) then
                if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0))) then 
                    buf_val_val_load_18_2_reg_213 <= tmp_52_fu_576_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_val_load_18_2_reg_213 <= ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213;
                end if;
            end if; 
        end if;
    end process;

    buf_val_val_load_19_2_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_569)) then
                if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0))) then 
                    buf_val_val_load_19_2_reg_201 <= tmp_54_fu_591_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_val_load_19_2_reg_201 <= ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201;
                end if;
            end if; 
        end if;
    end process;

    buf_val_val_load_20_2_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_569)) then
                if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0))) then 
                    buf_val_val_load_20_2_reg_189 <= tmp_56_fu_606_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_val_load_20_2_reg_189 <= ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189;
                end if;
            end if; 
        end if;
    end process;

    buf_val_val_load_21_2_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_569)) then
                if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0))) then 
                    buf_val_val_load_21_2_reg_177 <= tmp_58_fu_621_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_val_load_21_2_reg_177 <= ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177;
                end if;
            end if; 
        end if;
    end process;

    buf_val_val_load_22_2_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_569)) then
                if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0))) then 
                    buf_val_val_load_22_2_reg_165 <= tmp_60_fu_636_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    buf_val_val_load_22_2_reg_165 <= ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165;
                end if;
            end if; 
        end if;
    end process;

    c_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                c_reg_154 <= c_1_fu_479_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_reg_154 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_143 <= indvar_flatten_next_fu_417_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_143 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_val_load_17_1_fu_106 <= ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4;
                buf_val_val_load_18_1_fu_110 <= ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4;
                buf_val_val_load_19_1_fu_114 <= ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4;
                buf_val_val_load_20_1_fu_118 <= ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4;
                buf_val_val_load_21_1_fu_122 <= ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4;
                buf_val_val_load_22_1_fu_126 <= ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                buf_val_val_load_17_2_reg_225_pp0_iter2_reg <= buf_val_val_load_17_2_reg_225;
                buf_val_val_load_17_2_reg_225_pp0_iter3_reg <= buf_val_val_load_17_2_reg_225_pp0_iter2_reg;
                buf_val_val_load_17_2_reg_225_pp0_iter4_reg <= buf_val_val_load_17_2_reg_225_pp0_iter3_reg;
                buf_val_val_load_17_2_reg_225_pp0_iter5_reg <= buf_val_val_load_17_2_reg_225_pp0_iter4_reg;
                buf_val_val_load_17_2_reg_225_pp0_iter6_reg <= buf_val_val_load_17_2_reg_225_pp0_iter5_reg;
                buf_val_val_load_17_2_reg_225_pp0_iter7_reg <= buf_val_val_load_17_2_reg_225_pp0_iter6_reg;
                buf_val_val_load_17_2_reg_225_pp0_iter8_reg <= buf_val_val_load_17_2_reg_225_pp0_iter7_reg;
                buf_val_val_load_18_2_reg_213_pp0_iter2_reg <= buf_val_val_load_18_2_reg_213;
                buf_val_val_load_18_2_reg_213_pp0_iter3_reg <= buf_val_val_load_18_2_reg_213_pp0_iter2_reg;
                buf_val_val_load_18_2_reg_213_pp0_iter4_reg <= buf_val_val_load_18_2_reg_213_pp0_iter3_reg;
                buf_val_val_load_18_2_reg_213_pp0_iter5_reg <= buf_val_val_load_18_2_reg_213_pp0_iter4_reg;
                buf_val_val_load_18_2_reg_213_pp0_iter6_reg <= buf_val_val_load_18_2_reg_213_pp0_iter5_reg;
                buf_val_val_load_18_2_reg_213_pp0_iter7_reg <= buf_val_val_load_18_2_reg_213_pp0_iter6_reg;
                buf_val_val_load_18_2_reg_213_pp0_iter8_reg <= buf_val_val_load_18_2_reg_213_pp0_iter7_reg;
                buf_val_val_load_18_reg_906_pp0_iter2_reg <= buf_val_val_load_18_reg_906;
                buf_val_val_load_18_reg_906_pp0_iter3_reg <= buf_val_val_load_18_reg_906_pp0_iter2_reg;
                buf_val_val_load_18_reg_906_pp0_iter4_reg <= buf_val_val_load_18_reg_906_pp0_iter3_reg;
                buf_val_val_load_19_2_reg_201_pp0_iter2_reg <= buf_val_val_load_19_2_reg_201;
                buf_val_val_load_19_2_reg_201_pp0_iter3_reg <= buf_val_val_load_19_2_reg_201_pp0_iter2_reg;
                buf_val_val_load_19_2_reg_201_pp0_iter4_reg <= buf_val_val_load_19_2_reg_201_pp0_iter3_reg;
                buf_val_val_load_19_2_reg_201_pp0_iter5_reg <= buf_val_val_load_19_2_reg_201_pp0_iter4_reg;
                buf_val_val_load_19_2_reg_201_pp0_iter6_reg <= buf_val_val_load_19_2_reg_201_pp0_iter5_reg;
                buf_val_val_load_19_2_reg_201_pp0_iter7_reg <= buf_val_val_load_19_2_reg_201_pp0_iter6_reg;
                buf_val_val_load_19_2_reg_201_pp0_iter8_reg <= buf_val_val_load_19_2_reg_201_pp0_iter7_reg;
                buf_val_val_load_19_reg_911_pp0_iter2_reg <= buf_val_val_load_19_reg_911;
                buf_val_val_load_19_reg_911_pp0_iter3_reg <= buf_val_val_load_19_reg_911_pp0_iter2_reg;
                buf_val_val_load_19_reg_911_pp0_iter4_reg <= buf_val_val_load_19_reg_911_pp0_iter3_reg;
                buf_val_val_load_20_2_reg_189_pp0_iter2_reg <= buf_val_val_load_20_2_reg_189;
                buf_val_val_load_20_2_reg_189_pp0_iter3_reg <= buf_val_val_load_20_2_reg_189_pp0_iter2_reg;
                buf_val_val_load_20_2_reg_189_pp0_iter4_reg <= buf_val_val_load_20_2_reg_189_pp0_iter3_reg;
                buf_val_val_load_20_2_reg_189_pp0_iter5_reg <= buf_val_val_load_20_2_reg_189_pp0_iter4_reg;
                buf_val_val_load_20_2_reg_189_pp0_iter6_reg <= buf_val_val_load_20_2_reg_189_pp0_iter5_reg;
                buf_val_val_load_20_2_reg_189_pp0_iter7_reg <= buf_val_val_load_20_2_reg_189_pp0_iter6_reg;
                buf_val_val_load_20_2_reg_189_pp0_iter8_reg <= buf_val_val_load_20_2_reg_189_pp0_iter7_reg;
                buf_val_val_load_20_reg_916_pp0_iter2_reg <= buf_val_val_load_20_reg_916;
                buf_val_val_load_20_reg_916_pp0_iter3_reg <= buf_val_val_load_20_reg_916_pp0_iter2_reg;
                buf_val_val_load_20_reg_916_pp0_iter4_reg <= buf_val_val_load_20_reg_916_pp0_iter3_reg;
                buf_val_val_load_21_2_reg_177_pp0_iter2_reg <= buf_val_val_load_21_2_reg_177;
                buf_val_val_load_21_2_reg_177_pp0_iter3_reg <= buf_val_val_load_21_2_reg_177_pp0_iter2_reg;
                buf_val_val_load_21_2_reg_177_pp0_iter4_reg <= buf_val_val_load_21_2_reg_177_pp0_iter3_reg;
                buf_val_val_load_21_2_reg_177_pp0_iter5_reg <= buf_val_val_load_21_2_reg_177_pp0_iter4_reg;
                buf_val_val_load_21_2_reg_177_pp0_iter6_reg <= buf_val_val_load_21_2_reg_177_pp0_iter5_reg;
                buf_val_val_load_21_2_reg_177_pp0_iter7_reg <= buf_val_val_load_21_2_reg_177_pp0_iter6_reg;
                buf_val_val_load_21_2_reg_177_pp0_iter8_reg <= buf_val_val_load_21_2_reg_177_pp0_iter7_reg;
                buf_val_val_load_21_reg_921_pp0_iter2_reg <= buf_val_val_load_21_reg_921;
                buf_val_val_load_21_reg_921_pp0_iter3_reg <= buf_val_val_load_21_reg_921_pp0_iter2_reg;
                buf_val_val_load_21_reg_921_pp0_iter4_reg <= buf_val_val_load_21_reg_921_pp0_iter3_reg;
                buf_val_val_load_22_2_reg_165_pp0_iter2_reg <= buf_val_val_load_22_2_reg_165;
                buf_val_val_load_22_2_reg_165_pp0_iter3_reg <= buf_val_val_load_22_2_reg_165_pp0_iter2_reg;
                buf_val_val_load_22_2_reg_165_pp0_iter4_reg <= buf_val_val_load_22_2_reg_165_pp0_iter3_reg;
                buf_val_val_load_22_2_reg_165_pp0_iter5_reg <= buf_val_val_load_22_2_reg_165_pp0_iter4_reg;
                buf_val_val_load_22_2_reg_165_pp0_iter6_reg <= buf_val_val_load_22_2_reg_165_pp0_iter5_reg;
                buf_val_val_load_22_2_reg_165_pp0_iter7_reg <= buf_val_val_load_22_2_reg_165_pp0_iter6_reg;
                buf_val_val_load_22_2_reg_165_pp0_iter8_reg <= buf_val_val_load_22_2_reg_165_pp0_iter7_reg;
                buf_val_val_load_22_reg_926_pp0_iter2_reg <= buf_val_val_load_22_reg_926;
                buf_val_val_load_22_reg_926_pp0_iter3_reg <= buf_val_val_load_22_reg_926_pp0_iter2_reg;
                buf_val_val_load_22_reg_926_pp0_iter4_reg <= buf_val_val_load_22_reg_926_pp0_iter3_reg;
                buf_val_val_load_23_reg_931_pp0_iter2_reg <= buf_val_val_load_23_reg_931;
                buf_val_val_load_23_reg_931_pp0_iter3_reg <= buf_val_val_load_23_reg_931_pp0_iter2_reg;
                buf_val_val_load_23_reg_931_pp0_iter4_reg <= buf_val_val_load_23_reg_931_pp0_iter3_reg;
                or_cond_reg_857_pp0_iter10_reg <= or_cond_reg_857_pp0_iter9_reg;
                or_cond_reg_857_pp0_iter11_reg <= or_cond_reg_857_pp0_iter10_reg;
                or_cond_reg_857_pp0_iter12_reg <= or_cond_reg_857_pp0_iter11_reg;
                or_cond_reg_857_pp0_iter13_reg <= or_cond_reg_857_pp0_iter12_reg;
                or_cond_reg_857_pp0_iter14_reg <= or_cond_reg_857_pp0_iter13_reg;
                or_cond_reg_857_pp0_iter2_reg <= or_cond_reg_857_pp0_iter1_reg;
                or_cond_reg_857_pp0_iter3_reg <= or_cond_reg_857_pp0_iter2_reg;
                or_cond_reg_857_pp0_iter4_reg <= or_cond_reg_857_pp0_iter3_reg;
                or_cond_reg_857_pp0_iter5_reg <= or_cond_reg_857_pp0_iter4_reg;
                or_cond_reg_857_pp0_iter6_reg <= or_cond_reg_857_pp0_iter5_reg;
                or_cond_reg_857_pp0_iter7_reg <= or_cond_reg_857_pp0_iter6_reg;
                or_cond_reg_857_pp0_iter8_reg <= or_cond_reg_857_pp0_iter7_reg;
                or_cond_reg_857_pp0_iter9_reg <= or_cond_reg_857_pp0_iter8_reg;
                tmp_4_reg_867_pp0_iter10_reg <= tmp_4_reg_867_pp0_iter9_reg;
                tmp_4_reg_867_pp0_iter11_reg <= tmp_4_reg_867_pp0_iter10_reg;
                tmp_4_reg_867_pp0_iter12_reg <= tmp_4_reg_867_pp0_iter11_reg;
                tmp_4_reg_867_pp0_iter13_reg <= tmp_4_reg_867_pp0_iter12_reg;
                tmp_4_reg_867_pp0_iter14_reg <= tmp_4_reg_867_pp0_iter13_reg;
                tmp_4_reg_867_pp0_iter15_reg <= tmp_4_reg_867_pp0_iter14_reg;
                tmp_4_reg_867_pp0_iter2_reg <= tmp_4_reg_867_pp0_iter1_reg;
                tmp_4_reg_867_pp0_iter3_reg <= tmp_4_reg_867_pp0_iter2_reg;
                tmp_4_reg_867_pp0_iter4_reg <= tmp_4_reg_867_pp0_iter3_reg;
                tmp_4_reg_867_pp0_iter5_reg <= tmp_4_reg_867_pp0_iter4_reg;
                tmp_4_reg_867_pp0_iter6_reg <= tmp_4_reg_867_pp0_iter5_reg;
                tmp_4_reg_867_pp0_iter7_reg <= tmp_4_reg_867_pp0_iter6_reg;
                tmp_4_reg_867_pp0_iter8_reg <= tmp_4_reg_867_pp0_iter7_reg;
                tmp_4_reg_867_pp0_iter9_reg <= tmp_4_reg_867_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_844 = ap_const_lv1_0) and (or_cond_reg_857 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_val_load_18_reg_906 <= buf_val_val_load_17_1_fu_106;
                buf_val_val_load_19_reg_911 <= buf_val_val_load_18_1_fu_110;
                buf_val_val_load_20_reg_916 <= buf_val_val_load_19_1_fu_114;
                buf_val_val_load_21_reg_921 <= buf_val_val_load_20_1_fu_118;
                buf_val_val_load_22_reg_926 <= buf_val_val_load_21_1_fu_122;
                buf_val_val_load_23_reg_931 <= buf_val_val_load_22_1_fu_126;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_val_load_2_fu_102 <= buf_val_val_load_22_1_fu_126;
                buf_val_val_load_3_fu_98 <= buf_val_val_load_21_1_fu_122;
                buf_val_val_load_4_fu_94 <= buf_val_val_load_20_1_fu_118;
                buf_val_val_load_5_fu_90 <= buf_val_val_load_19_1_fu_114;
                buf_val_val_load_6_fu_86 <= buf_val_val_load_18_1_fu_110;
                buf_val_val_load_7_fu_82 <= buf_val_val_load_17_1_fu_106;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_844 <= exitcond_flatten_fu_411_p2;
                or_cond_reg_857_pp0_iter1_reg <= or_cond_reg_857;
                tmp_4_reg_867_pp0_iter1_reg <= tmp_4_reg_867;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_411_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond_reg_857 <= or_cond_fu_467_p2;
                tmp_4_reg_867 <= tmp_4_fu_473_p2;
                tmp_reg_853 <= c_mid2_fu_429_p3(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_857_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_38_0_1_reg_941 <= grp_fu_320_p2;
                tmp_38_0_2_reg_946 <= grp_fu_325_p2;
                tmp_38_0_3_reg_951 <= grp_fu_330_p2;
                tmp_38_0_4_reg_956 <= grp_fu_335_p2;
                tmp_38_0_5_reg_961 <= grp_fu_340_p2;
                tmp_38_reg_936 <= grp_fu_315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_857_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_38_1_1_reg_1001 <= grp_fu_350_p2;
                tmp_38_1_2_reg_1006 <= grp_fu_355_p2;
                tmp_38_1_3_reg_1011 <= grp_fu_360_p2;
                tmp_38_1_4_reg_1016 <= grp_fu_365_p2;
                tmp_38_1_5_reg_1021 <= grp_fu_370_p2;
                tmp_38_1_reg_996 <= grp_fu_345_p2;
                tmp_39_0_1_reg_971 <= grp_fu_242_p2;
                tmp_39_0_2_reg_976 <= grp_fu_247_p2;
                tmp_39_0_3_reg_981 <= grp_fu_252_p2;
                tmp_39_0_4_reg_986 <= grp_fu_257_p2;
                tmp_39_0_5_reg_991 <= grp_fu_262_p2;
                tmp_39_reg_966 <= grp_fu_237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_reg_857_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_38_2_1_reg_1061 <= grp_fu_381_p2;
                tmp_38_2_2_reg_1066 <= grp_fu_387_p2;
                tmp_38_2_3_reg_1071 <= grp_fu_393_p2;
                tmp_38_2_4_reg_1076 <= grp_fu_399_p2;
                tmp_38_2_5_reg_1081 <= grp_fu_405_p2;
                tmp_38_2_reg_1056 <= grp_fu_375_p2;
                tmp_39_1_1_reg_1031 <= grp_fu_271_p2;
                tmp_39_1_2_reg_1036 <= grp_fu_275_p2;
                tmp_39_1_3_reg_1041 <= grp_fu_279_p2;
                tmp_39_1_4_reg_1046 <= grp_fu_283_p2;
                tmp_39_1_5_reg_1051 <= grp_fu_287_p2;
                tmp_39_1_reg_1026 <= grp_fu_267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_reg_867_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_61_reg_1086 <= tmp_61_fu_693_p3;
                tmp_62_reg_1091 <= tmp_62_fu_704_p3;
                tmp_63_reg_1096 <= tmp_63_fu_715_p3;
                tmp_64_reg_1101 <= tmp_64_fu_726_p3;
                tmp_65_reg_1106 <= tmp_65_fu_737_p3;
                tmp_66_reg_1111 <= tmp_66_fu_748_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter15)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(tensor_y_val_empty_n, tensor_val_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, tmp_4_reg_867_pp0_iter15_reg, ap_predicate_op69_read_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_4_reg_867_pp0_iter15_reg = ap_const_lv1_0) and (tensor_val_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((tensor_y_val_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op69_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(tensor_y_val_empty_n, tensor_val_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, tmp_4_reg_867_pp0_iter15_reg, ap_predicate_op69_read_state3)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_4_reg_867_pp0_iter15_reg = ap_const_lv1_0) and (tensor_val_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((tensor_y_val_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op69_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(tensor_y_val_empty_n, tensor_val_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, tmp_4_reg_867_pp0_iter15_reg, ap_predicate_op69_read_state3)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_4_reg_867_pp0_iter15_reg = ap_const_lv1_0) and (tensor_val_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1)) or ((tensor_y_val_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op69_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter16_assign_proc : process(tensor_val_full_n, tmp_4_reg_867_pp0_iter15_reg)
    begin
                ap_block_state18_pp0_stage0_iter16 <= ((tmp_4_reg_867_pp0_iter15_reg = ap_const_lv1_0) and (tensor_val_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(tensor_y_val_empty_n, ap_predicate_op69_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((tensor_y_val_empty_n = ap_const_logic_0) and (ap_predicate_op69_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_198_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_198 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_569_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_569 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter1_state3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_844, tmp_reg_853, tmp_50_fu_561_p1, ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225)
    begin
        if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4 <= tmp_50_fu_561_p1;
        else 
            ap_phi_mux_buf_val_val_load_17_2_phi_fu_229_p4 <= ap_phi_reg_pp0_iter1_buf_val_val_load_17_2_reg_225;
        end if; 
    end process;


    ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_844, tmp_reg_853, tmp_52_fu_576_p1, ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213)
    begin
        if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4 <= tmp_52_fu_576_p1;
        else 
            ap_phi_mux_buf_val_val_load_18_2_phi_fu_217_p4 <= ap_phi_reg_pp0_iter1_buf_val_val_load_18_2_reg_213;
        end if; 
    end process;


    ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_844, tmp_reg_853, tmp_54_fu_591_p1, ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201)
    begin
        if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4 <= tmp_54_fu_591_p1;
        else 
            ap_phi_mux_buf_val_val_load_19_2_phi_fu_205_p4 <= ap_phi_reg_pp0_iter1_buf_val_val_load_19_2_reg_201;
        end if; 
    end process;


    ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_844, tmp_reg_853, tmp_56_fu_606_p1, ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189)
    begin
        if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4 <= tmp_56_fu_606_p1;
        else 
            ap_phi_mux_buf_val_val_load_20_2_phi_fu_193_p4 <= ap_phi_reg_pp0_iter1_buf_val_val_load_20_2_reg_189;
        end if; 
    end process;


    ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_844, tmp_reg_853, tmp_58_fu_621_p1, ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177)
    begin
        if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4 <= tmp_58_fu_621_p1;
        else 
            ap_phi_mux_buf_val_val_load_21_2_phi_fu_181_p4 <= ap_phi_reg_pp0_iter1_buf_val_val_load_21_2_reg_177;
        end if; 
    end process;


    ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_844, tmp_reg_853, tmp_60_fu_636_p1, ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165)
    begin
        if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4 <= tmp_60_fu_636_p1;
        else 
            ap_phi_mux_buf_val_val_load_22_2_phi_fu_169_p4 <= ap_phi_reg_pp0_iter1_buf_val_val_load_22_2_reg_165;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_buf_val_val_load_17_2_reg_225 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_val_load_18_2_reg_213 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_val_load_19_2_reg_201 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_val_load_20_2_reg_189 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_val_load_21_2_reg_177 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_val_load_22_2_reg_165 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op69_read_state3_assign_proc : process(exitcond_flatten_reg_844, tmp_reg_853)
    begin
                ap_predicate_op69_read_state3 <= ((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    c_1_fu_479_p2 <= std_logic_vector(unsigned(c_mid2_fu_429_p3) + unsigned(ap_const_lv11_1));
    c_mid2_fu_429_p3 <= 
        ap_const_lv11_0 when (exitcond_fu_423_p2(0) = '1') else 
        c_reg_154;
    exitcond_flatten_fu_411_p2 <= "1" when (indvar_flatten_reg_143 = ap_const_lv19_6D1B4) else "0";
    exitcond_fu_423_p2 <= "1" when (c_reg_154 = ap_const_lv11_401) else "0";

    grp_fu_237_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_237_ce <= ap_const_logic_1;
        else 
            grp_fu_237_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_242_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_242_ce <= ap_const_logic_1;
        else 
            grp_fu_242_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_247_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_247_ce <= ap_const_logic_1;
        else 
            grp_fu_247_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_252_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_252_ce <= ap_const_logic_1;
        else 
            grp_fu_252_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_257_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_257_ce <= ap_const_logic_1;
        else 
            grp_fu_257_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_262_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_262_ce <= ap_const_logic_1;
        else 
            grp_fu_262_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_267_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_267_ce <= ap_const_logic_1;
        else 
            grp_fu_267_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_271_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_271_ce <= ap_const_logic_1;
        else 
            grp_fu_271_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_275_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_275_ce <= ap_const_logic_1;
        else 
            grp_fu_275_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_279_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_279_ce <= ap_const_logic_1;
        else 
            grp_fu_279_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_283_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_283_ce <= ap_const_logic_1;
        else 
            grp_fu_283_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_287_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_287_ce <= ap_const_logic_1;
        else 
            grp_fu_287_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_291_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_291_ce <= ap_const_logic_1;
        else 
            grp_fu_291_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_295_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_295_ce <= ap_const_logic_1;
        else 
            grp_fu_295_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_299_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_299_ce <= ap_const_logic_1;
        else 
            grp_fu_299_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_303_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_303_ce <= ap_const_logic_1;
        else 
            grp_fu_303_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_307_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_307_ce <= ap_const_logic_1;
        else 
            grp_fu_307_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_311_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_311_ce <= ap_const_logic_1;
        else 
            grp_fu_311_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_315_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_315_ce <= ap_const_logic_1;
        else 
            grp_fu_315_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_320_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_320_ce <= ap_const_logic_1;
        else 
            grp_fu_320_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_325_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_325_ce <= ap_const_logic_1;
        else 
            grp_fu_325_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_330_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_330_ce <= ap_const_logic_1;
        else 
            grp_fu_330_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_335_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_335_ce <= ap_const_logic_1;
        else 
            grp_fu_335_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_340_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_340_ce <= ap_const_logic_1;
        else 
            grp_fu_340_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_345_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_345_ce <= ap_const_logic_1;
        else 
            grp_fu_345_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_350_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_350_ce <= ap_const_logic_1;
        else 
            grp_fu_350_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_355_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_355_ce <= ap_const_logic_1;
        else 
            grp_fu_355_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_360_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_360_ce <= ap_const_logic_1;
        else 
            grp_fu_360_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_365_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_365_ce <= ap_const_logic_1;
        else 
            grp_fu_365_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_370_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_370_ce <= ap_const_logic_1;
        else 
            grp_fu_370_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_375_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_375_ce <= ap_const_logic_1;
        else 
            grp_fu_375_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_381_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_381_ce <= ap_const_logic_1;
        else 
            grp_fu_381_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_387_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_387_ce <= ap_const_logic_1;
        else 
            grp_fu_387_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_393_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_393_ce <= ap_const_logic_1;
        else 
            grp_fu_393_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_399_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_399_ce <= ap_const_logic_1;
        else 
            grp_fu_399_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_405_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_405_ce <= ap_const_logic_1;
        else 
            grp_fu_405_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_fu_461_p2 <= "0" when (tmp_75_fu_451_p4 = ap_const_lv10_0) else "1";
    indvar_flatten_next_fu_417_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_143) + unsigned(ap_const_lv19_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_fu_467_p2 <= (rev_fu_445_p2 and icmp_fu_461_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev_fu_445_p2 <= (tmp_fu_437_p3 xor ap_const_lv1_1);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    tensor_val_blk_n_assign_proc : process(tensor_val_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter16, tmp_4_reg_867_pp0_iter15_reg)
    begin
        if (((tmp_4_reg_867_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            tensor_val_blk_n <= tensor_val_full_n;
        else 
            tensor_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tensor_val_din <= (((((tmp_66_reg_1111 & tmp_65_reg_1106) & tmp_64_reg_1101) & tmp_63_reg_1096) & tmp_62_reg_1091) & tmp_61_reg_1086);

    tensor_val_write_assign_proc : process(ap_enable_reg_pp0_iter16, tmp_4_reg_867_pp0_iter15_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_4_reg_867_pp0_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tensor_val_write <= ap_const_logic_1;
        else 
            tensor_val_write <= ap_const_logic_0;
        end if; 
    end process;


    tensor_y_val_blk_n_assign_proc : process(tensor_y_val_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_844, tmp_reg_853)
    begin
        if (((tmp_reg_853 = ap_const_lv1_0) and (exitcond_flatten_reg_844 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tensor_y_val_blk_n <= tensor_y_val_empty_n;
        else 
            tensor_y_val_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tensor_y_val_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op69_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op69_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tensor_y_val_read <= ap_const_logic_1;
        else 
            tensor_y_val_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_4_fu_473_p2 <= "1" when (c_mid2_fu_429_p3 = ap_const_lv11_0) else "0";
    tmp_50_fu_561_p1 <= tmp_74_fu_557_p1;
    tmp_51_fu_566_p4 <= tensor_y_val_dout(63 downto 32);
    tmp_52_fu_576_p1 <= tmp_51_fu_566_p4;
    tmp_53_fu_581_p4 <= tensor_y_val_dout(95 downto 64);
    tmp_54_fu_591_p1 <= tmp_53_fu_581_p4;
    tmp_55_fu_596_p4 <= tensor_y_val_dout(127 downto 96);
    tmp_56_fu_606_p1 <= tmp_55_fu_596_p4;
    tmp_57_fu_611_p4 <= tensor_y_val_dout(159 downto 128);
    tmp_58_fu_621_p1 <= tmp_57_fu_611_p4;
    tmp_59_fu_626_p4 <= tensor_y_val_dout(191 downto 160);
    tmp_60_fu_636_p1 <= tmp_59_fu_626_p4;
    tmp_61_fu_693_p3 <= 
        tmp_68_fu_689_p1 when (or_cond_reg_857_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_0;
    tmp_62_fu_704_p3 <= 
        tmp_69_fu_700_p1 when (or_cond_reg_857_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_0;
    tmp_63_fu_715_p3 <= 
        tmp_70_fu_711_p1 when (or_cond_reg_857_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_0;
    tmp_64_fu_726_p3 <= 
        tmp_71_fu_722_p1 when (or_cond_reg_857_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_0;
    tmp_65_fu_737_p3 <= 
        tmp_72_fu_733_p1 when (or_cond_reg_857_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_0;
    tmp_66_fu_748_p3 <= 
        tmp_73_fu_744_p1 when (or_cond_reg_857_pp0_iter14_reg(0) = '1') else 
        ap_const_lv32_0;
    tmp_68_fu_689_p1 <= grp_fu_291_p2;
    tmp_69_fu_700_p1 <= grp_fu_295_p2;
    tmp_70_fu_711_p1 <= grp_fu_299_p2;
    tmp_71_fu_722_p1 <= grp_fu_303_p2;
    tmp_72_fu_733_p1 <= grp_fu_307_p2;
    tmp_73_fu_744_p1 <= grp_fu_311_p2;
    tmp_74_fu_557_p1 <= tensor_y_val_dout(32 - 1 downto 0);
    tmp_75_fu_451_p4 <= c_mid2_fu_429_p3(10 downto 1);
    tmp_fu_437_p3 <= c_mid2_fu_429_p3(10 downto 10);
end behav;
