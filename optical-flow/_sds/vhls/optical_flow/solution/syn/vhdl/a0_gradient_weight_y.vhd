-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_gradient_weight_y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    gradient_x_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    gradient_x_empty_n : IN STD_LOGIC;
    gradient_x_read : OUT STD_LOGIC;
    gradient_y_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    gradient_y_empty_n : IN STD_LOGIC;
    gradient_y_read : OUT STD_LOGIC;
    gradient_z_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    gradient_z_empty_n : IN STD_LOGIC;
    gradient_z_read : OUT STD_LOGIC;
    y_filtered_x_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_x_full_n : IN STD_LOGIC;
    y_filtered_x_write : OUT STD_LOGIC;
    y_filtered_y_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_y_full_n : IN STD_LOGIC;
    y_filtered_y_write : OUT STD_LOGIC;
    y_filtered_z_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_z_full_n : IN STD_LOGIC;
    y_filtered_z_write : OUT STD_LOGIC );
end;


architecture behav of a0_gradient_weight_y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3D9A9FBE : STD_LOGIC_VECTOR (31 downto 0) := "00111101100110101001111110111110";
    constant ap_const_lv32_3E083127 : STD_LOGIC_VECTOR (31 downto 0) := "00111110000010000011000100100111";
    constant ap_const_lv32_3E3F62B7 : STD_LOGIC_VECTOR (31 downto 0) := "00111110001111110110001010110111";
    constant ap_const_lv32_3E94A234 : STD_LOGIC_VECTOR (31 downto 0) := "00111110100101001010001000110100";
    constant ap_const_lv9_1B4 : STD_LOGIC_VECTOR (8 downto 0) := "110110100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv19_6DC00 : STD_LOGIC_VECTOR (18 downto 0) := "1101101110000000000";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal gradient_x_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915 : STD_LOGIC_VECTOR (0 downto 0);
    signal gradient_y_blk_n : STD_LOGIC;
    signal gradient_z_blk_n : STD_LOGIC;
    signal y_filtered_x_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal or_cond_mid2_reg_919 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal y_filtered_y_blk_n : STD_LOGIC;
    signal y_filtered_z_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_494 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_reg_505 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_assign_reg_516 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op116_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter32 : BOOLEAN;
    signal ap_predicate_op318_write_state32 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_906_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_782_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_mid2_fu_814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_reg_915_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_fu_834_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid2_reg_919_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_fu_874_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_mid2_reg_923_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_mid2_fu_882_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_reg_932_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_val_1_x_addr_reg_948 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_x_addr_reg_948_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_x_addr_reg_948_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_x_addr_reg_948_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_x_addr_reg_948_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_y_addr_reg_954 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_y_addr_reg_954_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_y_addr_reg_954_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_y_addr_reg_954_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_y_addr_reg_954_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_z_addr_reg_960 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_z_addr_reg_960_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_z_addr_reg_960_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_z_addr_reg_960_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_z_addr_reg_960_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_6_x_addr_reg_966 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_6_y_addr_reg_972 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_6_z_addr_reg_978 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_fu_900_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_val_1_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_1_x_load_reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_1_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_1_y_load_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_1_z_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_1_z_load_reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_x_load_reg_1004_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_y_load_reg_1010_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_6_z_load_reg_1016_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_x_reg_1022_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_reg_1027_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_reg_1032_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_2_x_addr_reg_1037 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_x_addr_reg_1037_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_x_addr_reg_1037_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_x_addr_reg_1037_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_x_addr_reg_1037_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_y_addr_reg_1043 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_y_addr_reg_1043_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_y_addr_reg_1043_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_y_addr_reg_1043_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_y_addr_reg_1043_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_z_addr_reg_1049 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_z_addr_reg_1049_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_z_addr_reg_1049_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_z_addr_reg_1049_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_z_addr_reg_1049_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_653_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_reg_1055 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_658_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_reg_1060 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_663_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_reg_1065 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_2_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_2_x_load_reg_1070 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal buf_val_2_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_2_y_load_reg_1075 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_2_z_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_2_z_load_reg_1080 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_3_x_addr_reg_1085 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_x_addr_reg_1085_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_x_addr_reg_1085_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_x_addr_reg_1085_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_x_addr_reg_1085_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_y_addr_reg_1091 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_y_addr_reg_1091_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_y_addr_reg_1091_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_y_addr_reg_1091_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_y_addr_reg_1091_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_z_addr_reg_1097 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_z_addr_reg_1097_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_z_addr_reg_1097_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_z_addr_reg_1097_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_z_addr_reg_1097_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_x_addr_reg_1103_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_y_addr_reg_1109_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_4_z_addr_reg_1115_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_x_addr_reg_1121_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_y_addr_reg_1127_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_5_z_addr_reg_1133_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_563_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_reg_1139 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_568_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_reg_1149 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_668_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_1_reg_1154 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_1_reg_1159 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_1_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_3_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_3_x_load_reg_1169 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal buf_val_3_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_3_y_load_reg_1174 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_3_z_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_3_z_load_reg_1179 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_1_reg_1184 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_1_reg_1189 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_586_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_1_reg_1194 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_2_reg_1199 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_688_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_2_reg_1204 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_693_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_2_reg_1209 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_4_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_4_x_load_reg_1214 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal buf_val_4_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_4_y_load_reg_1219 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_4_z_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_4_z_load_reg_1224 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_590_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_2_reg_1229 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_2_reg_1234 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_598_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_2_reg_1239 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_698_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_3_reg_1244 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_703_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_3_reg_1249 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_3_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_5_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_5_x_load_reg_1259 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal buf_val_5_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_5_y_load_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_5_z_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_5_z_load_reg_1269 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_602_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_3_reg_1274 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_3_reg_1279 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_610_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_3_reg_1284 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_4_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_718_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_4_reg_1294 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_723_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_4_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_4_reg_1304 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_4_reg_1309 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_4_reg_1314 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_728_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_5_reg_1319 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_733_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_5_reg_1324 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_738_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_5_reg_1329 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_reg_1334 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp1_reg_1339 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp2_reg_1344 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_5_reg_1349 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_630_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_5_reg_1354 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_5_reg_1359 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_x_6_reg_1364 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_6_reg_1369 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_6_reg_1374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal buf_val_1_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_x_ce0 : STD_LOGIC;
    signal buf_val_1_x_ce1 : STD_LOGIC;
    signal buf_val_1_x_we1 : STD_LOGIC;
    signal buf_val_2_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_x_ce0 : STD_LOGIC;
    signal buf_val_2_x_ce1 : STD_LOGIC;
    signal buf_val_2_x_we1 : STD_LOGIC;
    signal buf_val_3_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_x_ce0 : STD_LOGIC;
    signal buf_val_3_x_ce1 : STD_LOGIC;
    signal buf_val_3_x_we1 : STD_LOGIC;
    signal buf_val_4_x_ce0 : STD_LOGIC;
    signal buf_val_4_x_ce1 : STD_LOGIC;
    signal buf_val_4_x_we1 : STD_LOGIC;
    signal buf_val_5_x_ce0 : STD_LOGIC;
    signal buf_val_5_x_ce1 : STD_LOGIC;
    signal buf_val_5_x_we1 : STD_LOGIC;
    signal buf_val_6_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_6_x_ce0 : STD_LOGIC;
    signal buf_val_6_x_ce1 : STD_LOGIC;
    signal buf_val_6_x_we1 : STD_LOGIC;
    signal buf_val_6_x_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_1_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_y_ce0 : STD_LOGIC;
    signal buf_val_1_y_ce1 : STD_LOGIC;
    signal buf_val_1_y_we1 : STD_LOGIC;
    signal buf_val_2_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_y_ce0 : STD_LOGIC;
    signal buf_val_2_y_ce1 : STD_LOGIC;
    signal buf_val_2_y_we1 : STD_LOGIC;
    signal buf_val_3_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_y_ce0 : STD_LOGIC;
    signal buf_val_3_y_ce1 : STD_LOGIC;
    signal buf_val_3_y_we1 : STD_LOGIC;
    signal buf_val_4_y_ce0 : STD_LOGIC;
    signal buf_val_4_y_ce1 : STD_LOGIC;
    signal buf_val_4_y_we1 : STD_LOGIC;
    signal buf_val_5_y_ce0 : STD_LOGIC;
    signal buf_val_5_y_ce1 : STD_LOGIC;
    signal buf_val_5_y_we1 : STD_LOGIC;
    signal buf_val_6_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_6_y_ce0 : STD_LOGIC;
    signal buf_val_6_y_ce1 : STD_LOGIC;
    signal buf_val_6_y_we1 : STD_LOGIC;
    signal buf_val_6_y_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_1_z_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_1_z_ce0 : STD_LOGIC;
    signal buf_val_1_z_ce1 : STD_LOGIC;
    signal buf_val_1_z_we1 : STD_LOGIC;
    signal buf_val_2_z_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_2_z_ce0 : STD_LOGIC;
    signal buf_val_2_z_ce1 : STD_LOGIC;
    signal buf_val_2_z_we1 : STD_LOGIC;
    signal buf_val_3_z_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_3_z_ce0 : STD_LOGIC;
    signal buf_val_3_z_ce1 : STD_LOGIC;
    signal buf_val_3_z_we1 : STD_LOGIC;
    signal buf_val_4_z_ce0 : STD_LOGIC;
    signal buf_val_4_z_ce1 : STD_LOGIC;
    signal buf_val_4_z_we1 : STD_LOGIC;
    signal buf_val_5_z_ce0 : STD_LOGIC;
    signal buf_val_5_z_ce1 : STD_LOGIC;
    signal buf_val_5_z_we1 : STD_LOGIC;
    signal buf_val_6_z_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_6_z_ce0 : STD_LOGIC;
    signal buf_val_6_z_ce1 : STD_LOGIC;
    signal buf_val_6_z_we1 : STD_LOGIC;
    signal buf_val_6_z_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_buf_val_z_load_2_6_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_buf_val_y_load_2_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter12_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter13_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter14_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter15_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter16_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter17_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter18_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter19_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter20_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter21_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter22_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter23_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter24_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter25_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter26_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter27_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter28_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter29_buf_val_x_load_2_6_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_36_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_s_fu_802_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid1_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_mid1_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_mid1_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_842_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_fu_858_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_mid2_fu_794_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_563_ce : STD_LOGIC;
    signal grp_fu_568_ce : STD_LOGIC;
    signal grp_fu_573_ce : STD_LOGIC;
    signal grp_fu_578_ce : STD_LOGIC;
    signal grp_fu_582_ce : STD_LOGIC;
    signal grp_fu_586_ce : STD_LOGIC;
    signal grp_fu_590_ce : STD_LOGIC;
    signal grp_fu_594_ce : STD_LOGIC;
    signal grp_fu_598_ce : STD_LOGIC;
    signal grp_fu_602_ce : STD_LOGIC;
    signal grp_fu_606_ce : STD_LOGIC;
    signal grp_fu_610_ce : STD_LOGIC;
    signal grp_fu_614_ce : STD_LOGIC;
    signal grp_fu_618_ce : STD_LOGIC;
    signal grp_fu_622_ce : STD_LOGIC;
    signal grp_fu_626_ce : STD_LOGIC;
    signal grp_fu_630_ce : STD_LOGIC;
    signal grp_fu_634_ce : STD_LOGIC;
    signal grp_fu_638_ce : STD_LOGIC;
    signal grp_fu_643_ce : STD_LOGIC;
    signal grp_fu_648_ce : STD_LOGIC;
    signal grp_fu_653_ce : STD_LOGIC;
    signal grp_fu_658_ce : STD_LOGIC;
    signal grp_fu_663_ce : STD_LOGIC;
    signal grp_fu_668_ce : STD_LOGIC;
    signal grp_fu_673_ce : STD_LOGIC;
    signal grp_fu_678_ce : STD_LOGIC;
    signal grp_fu_683_ce : STD_LOGIC;
    signal grp_fu_688_ce : STD_LOGIC;
    signal grp_fu_693_ce : STD_LOGIC;
    signal grp_fu_698_ce : STD_LOGIC;
    signal grp_fu_703_ce : STD_LOGIC;
    signal grp_fu_708_ce : STD_LOGIC;
    signal grp_fu_713_ce : STD_LOGIC;
    signal grp_fu_718_ce : STD_LOGIC;
    signal grp_fu_723_ce : STD_LOGIC;
    signal grp_fu_728_ce : STD_LOGIC;
    signal grp_fu_733_ce : STD_LOGIC;
    signal grp_fu_738_ce : STD_LOGIC;
    signal grp_fu_743_ce : STD_LOGIC;
    signal grp_fu_748_ce : STD_LOGIC;
    signal grp_fu_753_ce : STD_LOGIC;
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_375 : BOOLEAN;
    signal ap_condition_76 : BOOLEAN;

    component a0_optical_flow_faddhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component a0_optical_flow_fmulibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component a0_gradient_weight_yjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buf_val_1_x_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_1_x_address0,
        ce0 => buf_val_1_x_ce0,
        q0 => buf_val_1_x_q0,
        address1 => buf_val_1_x_addr_reg_948_pp0_iter4_reg,
        ce1 => buf_val_1_x_ce1,
        we1 => buf_val_1_x_we1,
        d1 => buf_val_2_x_q0);

    buf_val_2_x_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_2_x_address0,
        ce0 => buf_val_2_x_ce0,
        q0 => buf_val_2_x_q0,
        address1 => buf_val_2_x_addr_reg_1037_pp0_iter8_reg,
        ce1 => buf_val_2_x_ce1,
        we1 => buf_val_2_x_we1,
        d1 => buf_val_3_x_q0);

    buf_val_3_x_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_3_x_address0,
        ce0 => buf_val_3_x_ce0,
        q0 => buf_val_3_x_q0,
        address1 => buf_val_3_x_addr_reg_1085_pp0_iter12_reg,
        ce1 => buf_val_3_x_ce1,
        we1 => buf_val_3_x_we1,
        d1 => buf_val_4_x_q0);

    buf_val_4_x_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_4_x_addr_reg_1103_pp0_iter11_reg,
        ce0 => buf_val_4_x_ce0,
        q0 => buf_val_4_x_q0,
        address1 => buf_val_4_x_addr_reg_1103_pp0_iter16_reg,
        ce1 => buf_val_4_x_ce1,
        we1 => buf_val_4_x_we1,
        d1 => buf_val_5_x_q0);

    buf_val_5_x_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_5_x_addr_reg_1121_pp0_iter15_reg,
        ce0 => buf_val_5_x_ce0,
        q0 => buf_val_5_x_q0,
        address1 => buf_val_5_x_addr_reg_1121_pp0_iter16_reg,
        ce1 => buf_val_5_x_ce1,
        we1 => buf_val_5_x_we1,
        d1 => buf_val_6_x_load_reg_1004_pp0_iter16_reg);

    buf_val_6_x_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_6_x_address0,
        ce0 => buf_val_6_x_ce0,
        q0 => buf_val_6_x_q0,
        address1 => buf_val_6_x_addr_reg_966,
        ce1 => buf_val_6_x_ce1,
        we1 => buf_val_6_x_we1,
        d1 => buf_val_6_x_d1);

    buf_val_1_y_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_1_y_address0,
        ce0 => buf_val_1_y_ce0,
        q0 => buf_val_1_y_q0,
        address1 => buf_val_1_y_addr_reg_954_pp0_iter4_reg,
        ce1 => buf_val_1_y_ce1,
        we1 => buf_val_1_y_we1,
        d1 => buf_val_2_y_q0);

    buf_val_2_y_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_2_y_address0,
        ce0 => buf_val_2_y_ce0,
        q0 => buf_val_2_y_q0,
        address1 => buf_val_2_y_addr_reg_1043_pp0_iter8_reg,
        ce1 => buf_val_2_y_ce1,
        we1 => buf_val_2_y_we1,
        d1 => buf_val_3_y_q0);

    buf_val_3_y_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_3_y_address0,
        ce0 => buf_val_3_y_ce0,
        q0 => buf_val_3_y_q0,
        address1 => buf_val_3_y_addr_reg_1091_pp0_iter12_reg,
        ce1 => buf_val_3_y_ce1,
        we1 => buf_val_3_y_we1,
        d1 => buf_val_4_y_q0);

    buf_val_4_y_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_4_y_addr_reg_1109_pp0_iter11_reg,
        ce0 => buf_val_4_y_ce0,
        q0 => buf_val_4_y_q0,
        address1 => buf_val_4_y_addr_reg_1109_pp0_iter16_reg,
        ce1 => buf_val_4_y_ce1,
        we1 => buf_val_4_y_we1,
        d1 => buf_val_5_y_q0);

    buf_val_5_y_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_5_y_addr_reg_1127_pp0_iter15_reg,
        ce0 => buf_val_5_y_ce0,
        q0 => buf_val_5_y_q0,
        address1 => buf_val_5_y_addr_reg_1127_pp0_iter16_reg,
        ce1 => buf_val_5_y_ce1,
        we1 => buf_val_5_y_we1,
        d1 => buf_val_6_y_load_reg_1010_pp0_iter16_reg);

    buf_val_6_y_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_6_y_address0,
        ce0 => buf_val_6_y_ce0,
        q0 => buf_val_6_y_q0,
        address1 => buf_val_6_y_addr_reg_972,
        ce1 => buf_val_6_y_ce1,
        we1 => buf_val_6_y_we1,
        d1 => buf_val_6_y_d1);

    buf_val_1_z_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_1_z_address0,
        ce0 => buf_val_1_z_ce0,
        q0 => buf_val_1_z_q0,
        address1 => buf_val_1_z_addr_reg_960_pp0_iter4_reg,
        ce1 => buf_val_1_z_ce1,
        we1 => buf_val_1_z_we1,
        d1 => buf_val_2_z_q0);

    buf_val_2_z_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_2_z_address0,
        ce0 => buf_val_2_z_ce0,
        q0 => buf_val_2_z_q0,
        address1 => buf_val_2_z_addr_reg_1049_pp0_iter8_reg,
        ce1 => buf_val_2_z_ce1,
        we1 => buf_val_2_z_we1,
        d1 => buf_val_3_z_q0);

    buf_val_3_z_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_3_z_address0,
        ce0 => buf_val_3_z_ce0,
        q0 => buf_val_3_z_q0,
        address1 => buf_val_3_z_addr_reg_1097_pp0_iter12_reg,
        ce1 => buf_val_3_z_ce1,
        we1 => buf_val_3_z_we1,
        d1 => buf_val_4_z_q0);

    buf_val_4_z_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_4_z_addr_reg_1115_pp0_iter11_reg,
        ce0 => buf_val_4_z_ce0,
        q0 => buf_val_4_z_q0,
        address1 => buf_val_4_z_addr_reg_1115_pp0_iter16_reg,
        ce1 => buf_val_4_z_ce1,
        we1 => buf_val_4_z_we1,
        d1 => buf_val_5_z_q0);

    buf_val_5_z_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_5_z_addr_reg_1133_pp0_iter15_reg,
        ce0 => buf_val_5_z_ce0,
        q0 => buf_val_5_z_q0,
        address1 => buf_val_5_z_addr_reg_1133_pp0_iter16_reg,
        ce1 => buf_val_5_z_ce1,
        we1 => buf_val_5_z_we1,
        d1 => buf_val_6_z_load_reg_1016_pp0_iter16_reg);

    buf_val_6_z_U : component a0_gradient_weight_yjbC
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_6_z_address0,
        ce0 => buf_val_6_z_ce0,
        q0 => buf_val_6_z_q0,
        address1 => buf_val_6_z_addr_reg_978,
        ce1 => buf_val_6_z_ce1,
        we1 => buf_val_6_z_we1,
        d1 => buf_val_6_z_d1);

    optical_flow_faddhbi_U57 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_75_reg_1055,
        din1 => ap_const_lv32_0,
        ce => grp_fu_563_ce,
        dout => grp_fu_563_p2);

    optical_flow_faddhbi_U58 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_76_reg_1060,
        din1 => ap_const_lv32_0,
        ce => grp_fu_568_ce,
        dout => grp_fu_568_p2);

    optical_flow_faddhbi_U59 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_77_reg_1065,
        din1 => ap_const_lv32_0,
        ce => grp_fu_573_ce,
        dout => grp_fu_573_p2);

    optical_flow_faddhbi_U60 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_reg_1139,
        din1 => tmp_126_1_reg_1154,
        ce => grp_fu_578_ce,
        dout => grp_fu_578_p2);

    optical_flow_faddhbi_U61 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_reg_1144,
        din1 => tmp_127_1_reg_1159,
        ce => grp_fu_582_ce,
        dout => grp_fu_582_p2);

    optical_flow_faddhbi_U62 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_reg_1149,
        din1 => tmp_128_1_reg_1164,
        ce => grp_fu_586_ce,
        dout => grp_fu_586_p2);

    optical_flow_faddhbi_U63 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_1_reg_1184,
        din1 => tmp_126_2_reg_1199,
        ce => grp_fu_590_ce,
        dout => grp_fu_590_p2);

    optical_flow_faddhbi_U64 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_1_reg_1189,
        din1 => tmp_127_2_reg_1204,
        ce => grp_fu_594_ce,
        dout => grp_fu_594_p2);

    optical_flow_faddhbi_U65 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_1_reg_1194,
        din1 => tmp_128_2_reg_1209,
        ce => grp_fu_598_ce,
        dout => grp_fu_598_p2);

    optical_flow_faddhbi_U66 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_2_reg_1229,
        din1 => tmp_126_3_reg_1244,
        ce => grp_fu_602_ce,
        dout => grp_fu_602_p2);

    optical_flow_faddhbi_U67 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_2_reg_1234,
        din1 => tmp_127_3_reg_1249,
        ce => grp_fu_606_ce,
        dout => grp_fu_606_p2);

    optical_flow_faddhbi_U68 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_2_reg_1239,
        din1 => tmp_128_3_reg_1254,
        ce => grp_fu_610_ce,
        dout => grp_fu_610_p2);

    optical_flow_faddhbi_U69 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_3_reg_1274,
        din1 => tmp_126_4_reg_1289,
        ce => grp_fu_614_ce,
        dout => grp_fu_614_p2);

    optical_flow_faddhbi_U70 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_3_reg_1279,
        din1 => tmp_127_4_reg_1294,
        ce => grp_fu_618_ce,
        dout => grp_fu_618_p2);

    optical_flow_faddhbi_U71 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_3_reg_1284,
        din1 => tmp_128_4_reg_1299,
        ce => grp_fu_622_ce,
        dout => grp_fu_622_p2);

    optical_flow_faddhbi_U72 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_4_reg_1304,
        din1 => tmp_126_5_reg_1319,
        ce => grp_fu_626_ce,
        dout => grp_fu_626_p2);

    optical_flow_faddhbi_U73 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_4_reg_1309,
        din1 => tmp_127_5_reg_1324,
        ce => grp_fu_630_ce,
        dout => grp_fu_630_p2);

    optical_flow_faddhbi_U74 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_4_reg_1314,
        din1 => tmp_128_5_reg_1329,
        ce => grp_fu_634_ce,
        dout => grp_fu_634_p2);

    optical_flow_faddhbi_U75 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_x_5_reg_1349,
        din1 => ap_phi_reg_pp0_iter29_buf_val_x_load_2_6_reg_551,
        ce => grp_fu_638_ce,
        dout => grp_fu_638_p2);

    optical_flow_faddhbi_U76 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_y_5_reg_1354,
        din1 => ap_phi_reg_pp0_iter29_buf_val_y_load_2_6_reg_539,
        ce => grp_fu_643_ce,
        dout => grp_fu_643_p2);

    optical_flow_faddhbi_U77 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => acc_z_5_reg_1359,
        din1 => ap_phi_reg_pp0_iter29_buf_val_z_load_2_6_reg_527,
        ce => grp_fu_648_ce,
        dout => grp_fu_648_p2);

    optical_flow_fmulibs_U78 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_1_x_load_reg_989,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_653_ce,
        dout => grp_fu_653_p2);

    optical_flow_fmulibs_U79 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_1_y_load_reg_994,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_658_ce,
        dout => grp_fu_658_p2);

    optical_flow_fmulibs_U80 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_1_z_load_reg_999,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_663_ce,
        dout => grp_fu_663_p2);

    optical_flow_fmulibs_U81 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_2_x_load_reg_1070,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_668_ce,
        dout => grp_fu_668_p2);

    optical_flow_fmulibs_U82 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_2_y_load_reg_1075,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_673_ce,
        dout => grp_fu_673_p2);

    optical_flow_fmulibs_U83 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_2_z_load_reg_1080,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_678_ce,
        dout => grp_fu_678_p2);

    optical_flow_fmulibs_U84 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_3_x_load_reg_1169,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_683_ce,
        dout => grp_fu_683_p2);

    optical_flow_fmulibs_U85 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_3_y_load_reg_1174,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_688_ce,
        dout => grp_fu_688_p2);

    optical_flow_fmulibs_U86 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_3_z_load_reg_1179,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_693_ce,
        dout => grp_fu_693_p2);

    optical_flow_fmulibs_U87 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_4_x_load_reg_1214,
        din1 => ap_const_lv32_3E94A234,
        ce => grp_fu_698_ce,
        dout => grp_fu_698_p2);

    optical_flow_fmulibs_U88 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_4_y_load_reg_1219,
        din1 => ap_const_lv32_3E94A234,
        ce => grp_fu_703_ce,
        dout => grp_fu_703_p2);

    optical_flow_fmulibs_U89 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_4_z_load_reg_1224,
        din1 => ap_const_lv32_3E94A234,
        ce => grp_fu_708_ce,
        dout => grp_fu_708_p2);

    optical_flow_fmulibs_U90 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_5_x_load_reg_1259,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_713_ce,
        dout => grp_fu_713_p2);

    optical_flow_fmulibs_U91 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_5_y_load_reg_1264,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_718_ce,
        dout => grp_fu_718_p2);

    optical_flow_fmulibs_U92 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_5_z_load_reg_1269,
        din1 => ap_const_lv32_3E3F62B7,
        ce => grp_fu_723_ce,
        dout => grp_fu_723_p2);

    optical_flow_fmulibs_U93 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_6_x_load_reg_1004_pp0_iter21_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_728_ce,
        dout => grp_fu_728_p2);

    optical_flow_fmulibs_U94 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_6_y_load_reg_1010_pp0_iter21_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_733_ce,
        dout => grp_fu_733_p2);

    optical_flow_fmulibs_U95 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => buf_val_6_z_load_reg_1016_pp0_iter21_reg,
        din1 => ap_const_lv32_3E083127,
        ce => grp_fu_738_ce,
        dout => grp_fu_738_p2);

    optical_flow_fmulibs_U96 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_x_reg_1022_pp0_iter24_reg,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_743_ce,
        dout => grp_fu_743_p2);

    optical_flow_fmulibs_U97 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_y_reg_1027_pp0_iter24_reg,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_748_ce,
        dout => grp_fu_748_p2);

    optical_flow_fmulibs_U98 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_z_reg_1032_pp0_iter24_reg,
        din1 => ap_const_lv32_3D9A9FBE,
        ce => grp_fu_753_ce,
        dout => grp_fu_753_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter29_buf_val_x_load_2_6_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((tmp_mid2_reg_915_pp0_iter27_reg = ap_const_lv1_1) and (exitcond_flatten_reg_906_pp0_iter27_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter29_buf_val_x_load_2_6_reg_551 <= phitmp_reg_1334;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter29_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter28_buf_val_x_load_2_6_reg_551;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter29_buf_val_y_load_2_6_reg_539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((tmp_mid2_reg_915_pp0_iter27_reg = ap_const_lv1_1) and (exitcond_flatten_reg_906_pp0_iter27_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter29_buf_val_y_load_2_6_reg_539 <= phitmp1_reg_1339;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter29_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter28_buf_val_y_load_2_6_reg_539;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter29_buf_val_z_load_2_6_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((tmp_mid2_reg_915_pp0_iter27_reg = ap_const_lv1_1) and (exitcond_flatten_reg_906_pp0_iter27_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter29_buf_val_z_load_2_6_reg_527 <= phitmp2_reg_1344;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter29_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter28_buf_val_z_load_2_6_reg_527;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_x_load_2_6_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_375)) then
                if (((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_x_load_2_6_reg_551 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter1_buf_val_x_load_2_6_reg_551;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_y_load_2_6_reg_539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_375)) then
                if (((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_y_load_2_6_reg_539 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter1_buf_val_y_load_2_6_reg_539;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_z_load_2_6_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_375)) then
                if (((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_z_load_2_6_reg_527 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter1_buf_val_z_load_2_6_reg_527;
                end if;
            end if; 
        end if;
    end process;

    col_assign_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_776_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                col_assign_reg_516 <= c_fu_900_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_assign_reg_516 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_776_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_494 <= indvar_flatten_next_fu_782_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_494 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    r_reg_505_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_776_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                r_reg_505 <= r_mid2_fu_882_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_reg_505 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter11_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_1_reg_1184 <= grp_fu_578_p2;
                acc_y_1_reg_1189 <= grp_fu_582_p2;
                acc_z_1_reg_1194 <= grp_fu_586_p2;
                tmp_126_2_reg_1199 <= grp_fu_683_p2;
                tmp_127_2_reg_1204 <= grp_fu_688_p2;
                tmp_128_2_reg_1209 <= grp_fu_693_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter15_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_2_reg_1229 <= grp_fu_590_p2;
                acc_y_2_reg_1234 <= grp_fu_594_p2;
                acc_z_2_reg_1239 <= grp_fu_598_p2;
                tmp_126_3_reg_1244 <= grp_fu_698_p2;
                tmp_127_3_reg_1249 <= grp_fu_703_p2;
                tmp_128_3_reg_1254 <= grp_fu_708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter19_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_3_reg_1274 <= grp_fu_602_p2;
                acc_y_3_reg_1279 <= grp_fu_606_p2;
                acc_z_3_reg_1284 <= grp_fu_610_p2;
                tmp_126_4_reg_1289 <= grp_fu_713_p2;
                tmp_127_4_reg_1294 <= grp_fu_718_p2;
                tmp_128_4_reg_1299 <= grp_fu_723_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter23_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_4_reg_1304 <= grp_fu_614_p2;
                acc_y_4_reg_1309 <= grp_fu_618_p2;
                acc_z_4_reg_1314 <= grp_fu_622_p2;
                tmp_126_5_reg_1319 <= grp_fu_728_p2;
                tmp_127_5_reg_1324 <= grp_fu_733_p2;
                tmp_128_5_reg_1329 <= grp_fu_738_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter27_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_5_reg_1349 <= grp_fu_626_p2;
                acc_y_5_reg_1354 <= grp_fu_630_p2;
                acc_z_5_reg_1359 <= grp_fu_634_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter31_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_6_reg_1364 <= grp_fu_638_p2;
                acc_y_6_reg_1369 <= grp_fu_643_p2;
                acc_z_6_reg_1374 <= grp_fu_648_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_reg_1139 <= grp_fu_563_p2;
                acc_y_reg_1144 <= grp_fu_568_p2;
                acc_z_reg_1149 <= grp_fu_573_p2;
                tmp_126_1_reg_1154 <= grp_fu_668_p2;
                tmp_127_1_reg_1159 <= grp_fu_673_p2;
                tmp_128_1_reg_1164 <= grp_fu_678_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter9_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter10_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter9_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter10_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter9_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter10_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter11_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter10_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter11_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter10_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter12_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter11_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter12_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter11_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter12_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter11_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter13_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter12_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter13_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter12_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter13_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter12_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter14_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter13_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter14_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter13_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter14_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter13_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter15_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter14_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter15_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter14_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter15_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter14_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter16_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter15_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter16_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter15_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter16_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter15_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter17_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter16_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter17_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter16_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter17_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter16_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter18_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter17_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter18_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter17_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter18_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter17_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter19_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter18_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter19_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter18_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter19_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter18_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter0_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter1_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter0_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter1_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter0_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter20_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter19_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter20_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter19_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter20_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter19_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter21_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter20_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter21_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter20_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter21_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter20_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter22_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter21_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter22_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter21_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter22_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter21_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter23_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter22_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter23_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter22_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter23_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter22_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter24_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter23_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter24_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter23_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter24_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter23_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter25_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter24_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter25_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter24_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter25_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter24_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter26_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter25_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter26_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter25_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter26_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter25_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter27_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter26_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter27_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter26_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter27_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter26_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter28_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter27_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter28_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter27_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter28_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter27_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter2_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter3_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter2_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter3_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter2_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter3_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter4_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter3_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter4_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter3_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter4_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter5_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter4_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter5_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter4_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter5_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter6_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter5_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter6_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter5_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter6_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter7_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter6_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter7_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter6_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter7_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter8_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter7_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter8_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter7_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_buf_val_x_load_2_6_reg_551 <= ap_phi_reg_pp0_iter8_buf_val_x_load_2_6_reg_551;
                ap_phi_reg_pp0_iter9_buf_val_y_load_2_6_reg_539 <= ap_phi_reg_pp0_iter8_buf_val_y_load_2_6_reg_539;
                ap_phi_reg_pp0_iter9_buf_val_z_load_2_6_reg_527 <= ap_phi_reg_pp0_iter8_buf_val_z_load_2_6_reg_527;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_776_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_1_x_addr_reg_948 <= tmp_40_fu_890_p1(10 - 1 downto 0);
                buf_val_1_y_addr_reg_954 <= tmp_40_fu_890_p1(10 - 1 downto 0);
                buf_val_1_z_addr_reg_960 <= tmp_40_fu_890_p1(10 - 1 downto 0);
                buf_val_6_x_addr_reg_966 <= tmp_40_fu_890_p1(10 - 1 downto 0);
                buf_val_6_y_addr_reg_972 <= tmp_40_fu_890_p1(10 - 1 downto 0);
                buf_val_6_z_addr_reg_978 <= tmp_40_fu_890_p1(10 - 1 downto 0);
                or_cond_mid2_reg_919 <= or_cond_mid2_fu_834_p3;
                tmp_37_mid2_reg_923 <= tmp_37_mid2_fu_874_p3;
                    tmp_40_reg_932(10 downto 0) <= tmp_40_fu_890_p1(10 downto 0);
                tmp_mid2_reg_915 <= tmp_mid2_fu_814_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_1_x_addr_reg_948_pp0_iter1_reg <= buf_val_1_x_addr_reg_948;
                buf_val_1_y_addr_reg_954_pp0_iter1_reg <= buf_val_1_y_addr_reg_954;
                buf_val_1_z_addr_reg_960_pp0_iter1_reg <= buf_val_1_z_addr_reg_960;
                exitcond_flatten_reg_906 <= exitcond_flatten_fu_776_p2;
                exitcond_flatten_reg_906_pp0_iter1_reg <= exitcond_flatten_reg_906;
                or_cond_mid2_reg_919_pp0_iter1_reg <= or_cond_mid2_reg_919;
                tmp_37_mid2_reg_923_pp0_iter1_reg <= tmp_37_mid2_reg_923;
                    tmp_40_reg_932_pp0_iter1_reg(10 downto 0) <= tmp_40_reg_932(10 downto 0);
                tmp_mid2_reg_915_pp0_iter1_reg <= tmp_mid2_reg_915;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                buf_val_1_x_addr_reg_948_pp0_iter2_reg <= buf_val_1_x_addr_reg_948_pp0_iter1_reg;
                buf_val_1_x_addr_reg_948_pp0_iter3_reg <= buf_val_1_x_addr_reg_948_pp0_iter2_reg;
                buf_val_1_x_addr_reg_948_pp0_iter4_reg <= buf_val_1_x_addr_reg_948_pp0_iter3_reg;
                buf_val_1_y_addr_reg_954_pp0_iter2_reg <= buf_val_1_y_addr_reg_954_pp0_iter1_reg;
                buf_val_1_y_addr_reg_954_pp0_iter3_reg <= buf_val_1_y_addr_reg_954_pp0_iter2_reg;
                buf_val_1_y_addr_reg_954_pp0_iter4_reg <= buf_val_1_y_addr_reg_954_pp0_iter3_reg;
                buf_val_1_z_addr_reg_960_pp0_iter2_reg <= buf_val_1_z_addr_reg_960_pp0_iter1_reg;
                buf_val_1_z_addr_reg_960_pp0_iter3_reg <= buf_val_1_z_addr_reg_960_pp0_iter2_reg;
                buf_val_1_z_addr_reg_960_pp0_iter4_reg <= buf_val_1_z_addr_reg_960_pp0_iter3_reg;
                buf_val_2_x_addr_reg_1037_pp0_iter5_reg <= buf_val_2_x_addr_reg_1037;
                buf_val_2_x_addr_reg_1037_pp0_iter6_reg <= buf_val_2_x_addr_reg_1037_pp0_iter5_reg;
                buf_val_2_x_addr_reg_1037_pp0_iter7_reg <= buf_val_2_x_addr_reg_1037_pp0_iter6_reg;
                buf_val_2_x_addr_reg_1037_pp0_iter8_reg <= buf_val_2_x_addr_reg_1037_pp0_iter7_reg;
                buf_val_2_y_addr_reg_1043_pp0_iter5_reg <= buf_val_2_y_addr_reg_1043;
                buf_val_2_y_addr_reg_1043_pp0_iter6_reg <= buf_val_2_y_addr_reg_1043_pp0_iter5_reg;
                buf_val_2_y_addr_reg_1043_pp0_iter7_reg <= buf_val_2_y_addr_reg_1043_pp0_iter6_reg;
                buf_val_2_y_addr_reg_1043_pp0_iter8_reg <= buf_val_2_y_addr_reg_1043_pp0_iter7_reg;
                buf_val_2_z_addr_reg_1049_pp0_iter5_reg <= buf_val_2_z_addr_reg_1049;
                buf_val_2_z_addr_reg_1049_pp0_iter6_reg <= buf_val_2_z_addr_reg_1049_pp0_iter5_reg;
                buf_val_2_z_addr_reg_1049_pp0_iter7_reg <= buf_val_2_z_addr_reg_1049_pp0_iter6_reg;
                buf_val_2_z_addr_reg_1049_pp0_iter8_reg <= buf_val_2_z_addr_reg_1049_pp0_iter7_reg;
                buf_val_3_x_addr_reg_1085_pp0_iter10_reg <= buf_val_3_x_addr_reg_1085_pp0_iter9_reg;
                buf_val_3_x_addr_reg_1085_pp0_iter11_reg <= buf_val_3_x_addr_reg_1085_pp0_iter10_reg;
                buf_val_3_x_addr_reg_1085_pp0_iter12_reg <= buf_val_3_x_addr_reg_1085_pp0_iter11_reg;
                buf_val_3_x_addr_reg_1085_pp0_iter9_reg <= buf_val_3_x_addr_reg_1085;
                buf_val_3_y_addr_reg_1091_pp0_iter10_reg <= buf_val_3_y_addr_reg_1091_pp0_iter9_reg;
                buf_val_3_y_addr_reg_1091_pp0_iter11_reg <= buf_val_3_y_addr_reg_1091_pp0_iter10_reg;
                buf_val_3_y_addr_reg_1091_pp0_iter12_reg <= buf_val_3_y_addr_reg_1091_pp0_iter11_reg;
                buf_val_3_y_addr_reg_1091_pp0_iter9_reg <= buf_val_3_y_addr_reg_1091;
                buf_val_3_z_addr_reg_1097_pp0_iter10_reg <= buf_val_3_z_addr_reg_1097_pp0_iter9_reg;
                buf_val_3_z_addr_reg_1097_pp0_iter11_reg <= buf_val_3_z_addr_reg_1097_pp0_iter10_reg;
                buf_val_3_z_addr_reg_1097_pp0_iter12_reg <= buf_val_3_z_addr_reg_1097_pp0_iter11_reg;
                buf_val_3_z_addr_reg_1097_pp0_iter9_reg <= buf_val_3_z_addr_reg_1097;
                buf_val_4_x_addr_reg_1103_pp0_iter10_reg <= buf_val_4_x_addr_reg_1103_pp0_iter9_reg;
                buf_val_4_x_addr_reg_1103_pp0_iter11_reg <= buf_val_4_x_addr_reg_1103_pp0_iter10_reg;
                buf_val_4_x_addr_reg_1103_pp0_iter12_reg <= buf_val_4_x_addr_reg_1103_pp0_iter11_reg;
                buf_val_4_x_addr_reg_1103_pp0_iter13_reg <= buf_val_4_x_addr_reg_1103_pp0_iter12_reg;
                buf_val_4_x_addr_reg_1103_pp0_iter14_reg <= buf_val_4_x_addr_reg_1103_pp0_iter13_reg;
                buf_val_4_x_addr_reg_1103_pp0_iter15_reg <= buf_val_4_x_addr_reg_1103_pp0_iter14_reg;
                buf_val_4_x_addr_reg_1103_pp0_iter16_reg <= buf_val_4_x_addr_reg_1103_pp0_iter15_reg;
                buf_val_4_x_addr_reg_1103_pp0_iter9_reg <= buf_val_4_x_addr_reg_1103;
                buf_val_4_y_addr_reg_1109_pp0_iter10_reg <= buf_val_4_y_addr_reg_1109_pp0_iter9_reg;
                buf_val_4_y_addr_reg_1109_pp0_iter11_reg <= buf_val_4_y_addr_reg_1109_pp0_iter10_reg;
                buf_val_4_y_addr_reg_1109_pp0_iter12_reg <= buf_val_4_y_addr_reg_1109_pp0_iter11_reg;
                buf_val_4_y_addr_reg_1109_pp0_iter13_reg <= buf_val_4_y_addr_reg_1109_pp0_iter12_reg;
                buf_val_4_y_addr_reg_1109_pp0_iter14_reg <= buf_val_4_y_addr_reg_1109_pp0_iter13_reg;
                buf_val_4_y_addr_reg_1109_pp0_iter15_reg <= buf_val_4_y_addr_reg_1109_pp0_iter14_reg;
                buf_val_4_y_addr_reg_1109_pp0_iter16_reg <= buf_val_4_y_addr_reg_1109_pp0_iter15_reg;
                buf_val_4_y_addr_reg_1109_pp0_iter9_reg <= buf_val_4_y_addr_reg_1109;
                buf_val_4_z_addr_reg_1115_pp0_iter10_reg <= buf_val_4_z_addr_reg_1115_pp0_iter9_reg;
                buf_val_4_z_addr_reg_1115_pp0_iter11_reg <= buf_val_4_z_addr_reg_1115_pp0_iter10_reg;
                buf_val_4_z_addr_reg_1115_pp0_iter12_reg <= buf_val_4_z_addr_reg_1115_pp0_iter11_reg;
                buf_val_4_z_addr_reg_1115_pp0_iter13_reg <= buf_val_4_z_addr_reg_1115_pp0_iter12_reg;
                buf_val_4_z_addr_reg_1115_pp0_iter14_reg <= buf_val_4_z_addr_reg_1115_pp0_iter13_reg;
                buf_val_4_z_addr_reg_1115_pp0_iter15_reg <= buf_val_4_z_addr_reg_1115_pp0_iter14_reg;
                buf_val_4_z_addr_reg_1115_pp0_iter16_reg <= buf_val_4_z_addr_reg_1115_pp0_iter15_reg;
                buf_val_4_z_addr_reg_1115_pp0_iter9_reg <= buf_val_4_z_addr_reg_1115;
                buf_val_5_x_addr_reg_1121_pp0_iter10_reg <= buf_val_5_x_addr_reg_1121_pp0_iter9_reg;
                buf_val_5_x_addr_reg_1121_pp0_iter11_reg <= buf_val_5_x_addr_reg_1121_pp0_iter10_reg;
                buf_val_5_x_addr_reg_1121_pp0_iter12_reg <= buf_val_5_x_addr_reg_1121_pp0_iter11_reg;
                buf_val_5_x_addr_reg_1121_pp0_iter13_reg <= buf_val_5_x_addr_reg_1121_pp0_iter12_reg;
                buf_val_5_x_addr_reg_1121_pp0_iter14_reg <= buf_val_5_x_addr_reg_1121_pp0_iter13_reg;
                buf_val_5_x_addr_reg_1121_pp0_iter15_reg <= buf_val_5_x_addr_reg_1121_pp0_iter14_reg;
                buf_val_5_x_addr_reg_1121_pp0_iter16_reg <= buf_val_5_x_addr_reg_1121_pp0_iter15_reg;
                buf_val_5_x_addr_reg_1121_pp0_iter9_reg <= buf_val_5_x_addr_reg_1121;
                buf_val_5_y_addr_reg_1127_pp0_iter10_reg <= buf_val_5_y_addr_reg_1127_pp0_iter9_reg;
                buf_val_5_y_addr_reg_1127_pp0_iter11_reg <= buf_val_5_y_addr_reg_1127_pp0_iter10_reg;
                buf_val_5_y_addr_reg_1127_pp0_iter12_reg <= buf_val_5_y_addr_reg_1127_pp0_iter11_reg;
                buf_val_5_y_addr_reg_1127_pp0_iter13_reg <= buf_val_5_y_addr_reg_1127_pp0_iter12_reg;
                buf_val_5_y_addr_reg_1127_pp0_iter14_reg <= buf_val_5_y_addr_reg_1127_pp0_iter13_reg;
                buf_val_5_y_addr_reg_1127_pp0_iter15_reg <= buf_val_5_y_addr_reg_1127_pp0_iter14_reg;
                buf_val_5_y_addr_reg_1127_pp0_iter16_reg <= buf_val_5_y_addr_reg_1127_pp0_iter15_reg;
                buf_val_5_y_addr_reg_1127_pp0_iter9_reg <= buf_val_5_y_addr_reg_1127;
                buf_val_5_z_addr_reg_1133_pp0_iter10_reg <= buf_val_5_z_addr_reg_1133_pp0_iter9_reg;
                buf_val_5_z_addr_reg_1133_pp0_iter11_reg <= buf_val_5_z_addr_reg_1133_pp0_iter10_reg;
                buf_val_5_z_addr_reg_1133_pp0_iter12_reg <= buf_val_5_z_addr_reg_1133_pp0_iter11_reg;
                buf_val_5_z_addr_reg_1133_pp0_iter13_reg <= buf_val_5_z_addr_reg_1133_pp0_iter12_reg;
                buf_val_5_z_addr_reg_1133_pp0_iter14_reg <= buf_val_5_z_addr_reg_1133_pp0_iter13_reg;
                buf_val_5_z_addr_reg_1133_pp0_iter15_reg <= buf_val_5_z_addr_reg_1133_pp0_iter14_reg;
                buf_val_5_z_addr_reg_1133_pp0_iter16_reg <= buf_val_5_z_addr_reg_1133_pp0_iter15_reg;
                buf_val_5_z_addr_reg_1133_pp0_iter9_reg <= buf_val_5_z_addr_reg_1133;
                buf_val_6_x_load_reg_1004_pp0_iter10_reg <= buf_val_6_x_load_reg_1004_pp0_iter9_reg;
                buf_val_6_x_load_reg_1004_pp0_iter11_reg <= buf_val_6_x_load_reg_1004_pp0_iter10_reg;
                buf_val_6_x_load_reg_1004_pp0_iter12_reg <= buf_val_6_x_load_reg_1004_pp0_iter11_reg;
                buf_val_6_x_load_reg_1004_pp0_iter13_reg <= buf_val_6_x_load_reg_1004_pp0_iter12_reg;
                buf_val_6_x_load_reg_1004_pp0_iter14_reg <= buf_val_6_x_load_reg_1004_pp0_iter13_reg;
                buf_val_6_x_load_reg_1004_pp0_iter15_reg <= buf_val_6_x_load_reg_1004_pp0_iter14_reg;
                buf_val_6_x_load_reg_1004_pp0_iter16_reg <= buf_val_6_x_load_reg_1004_pp0_iter15_reg;
                buf_val_6_x_load_reg_1004_pp0_iter17_reg <= buf_val_6_x_load_reg_1004_pp0_iter16_reg;
                buf_val_6_x_load_reg_1004_pp0_iter18_reg <= buf_val_6_x_load_reg_1004_pp0_iter17_reg;
                buf_val_6_x_load_reg_1004_pp0_iter19_reg <= buf_val_6_x_load_reg_1004_pp0_iter18_reg;
                buf_val_6_x_load_reg_1004_pp0_iter20_reg <= buf_val_6_x_load_reg_1004_pp0_iter19_reg;
                buf_val_6_x_load_reg_1004_pp0_iter21_reg <= buf_val_6_x_load_reg_1004_pp0_iter20_reg;
                buf_val_6_x_load_reg_1004_pp0_iter2_reg <= buf_val_6_x_load_reg_1004;
                buf_val_6_x_load_reg_1004_pp0_iter3_reg <= buf_val_6_x_load_reg_1004_pp0_iter2_reg;
                buf_val_6_x_load_reg_1004_pp0_iter4_reg <= buf_val_6_x_load_reg_1004_pp0_iter3_reg;
                buf_val_6_x_load_reg_1004_pp0_iter5_reg <= buf_val_6_x_load_reg_1004_pp0_iter4_reg;
                buf_val_6_x_load_reg_1004_pp0_iter6_reg <= buf_val_6_x_load_reg_1004_pp0_iter5_reg;
                buf_val_6_x_load_reg_1004_pp0_iter7_reg <= buf_val_6_x_load_reg_1004_pp0_iter6_reg;
                buf_val_6_x_load_reg_1004_pp0_iter8_reg <= buf_val_6_x_load_reg_1004_pp0_iter7_reg;
                buf_val_6_x_load_reg_1004_pp0_iter9_reg <= buf_val_6_x_load_reg_1004_pp0_iter8_reg;
                buf_val_6_y_load_reg_1010_pp0_iter10_reg <= buf_val_6_y_load_reg_1010_pp0_iter9_reg;
                buf_val_6_y_load_reg_1010_pp0_iter11_reg <= buf_val_6_y_load_reg_1010_pp0_iter10_reg;
                buf_val_6_y_load_reg_1010_pp0_iter12_reg <= buf_val_6_y_load_reg_1010_pp0_iter11_reg;
                buf_val_6_y_load_reg_1010_pp0_iter13_reg <= buf_val_6_y_load_reg_1010_pp0_iter12_reg;
                buf_val_6_y_load_reg_1010_pp0_iter14_reg <= buf_val_6_y_load_reg_1010_pp0_iter13_reg;
                buf_val_6_y_load_reg_1010_pp0_iter15_reg <= buf_val_6_y_load_reg_1010_pp0_iter14_reg;
                buf_val_6_y_load_reg_1010_pp0_iter16_reg <= buf_val_6_y_load_reg_1010_pp0_iter15_reg;
                buf_val_6_y_load_reg_1010_pp0_iter17_reg <= buf_val_6_y_load_reg_1010_pp0_iter16_reg;
                buf_val_6_y_load_reg_1010_pp0_iter18_reg <= buf_val_6_y_load_reg_1010_pp0_iter17_reg;
                buf_val_6_y_load_reg_1010_pp0_iter19_reg <= buf_val_6_y_load_reg_1010_pp0_iter18_reg;
                buf_val_6_y_load_reg_1010_pp0_iter20_reg <= buf_val_6_y_load_reg_1010_pp0_iter19_reg;
                buf_val_6_y_load_reg_1010_pp0_iter21_reg <= buf_val_6_y_load_reg_1010_pp0_iter20_reg;
                buf_val_6_y_load_reg_1010_pp0_iter2_reg <= buf_val_6_y_load_reg_1010;
                buf_val_6_y_load_reg_1010_pp0_iter3_reg <= buf_val_6_y_load_reg_1010_pp0_iter2_reg;
                buf_val_6_y_load_reg_1010_pp0_iter4_reg <= buf_val_6_y_load_reg_1010_pp0_iter3_reg;
                buf_val_6_y_load_reg_1010_pp0_iter5_reg <= buf_val_6_y_load_reg_1010_pp0_iter4_reg;
                buf_val_6_y_load_reg_1010_pp0_iter6_reg <= buf_val_6_y_load_reg_1010_pp0_iter5_reg;
                buf_val_6_y_load_reg_1010_pp0_iter7_reg <= buf_val_6_y_load_reg_1010_pp0_iter6_reg;
                buf_val_6_y_load_reg_1010_pp0_iter8_reg <= buf_val_6_y_load_reg_1010_pp0_iter7_reg;
                buf_val_6_y_load_reg_1010_pp0_iter9_reg <= buf_val_6_y_load_reg_1010_pp0_iter8_reg;
                buf_val_6_z_load_reg_1016_pp0_iter10_reg <= buf_val_6_z_load_reg_1016_pp0_iter9_reg;
                buf_val_6_z_load_reg_1016_pp0_iter11_reg <= buf_val_6_z_load_reg_1016_pp0_iter10_reg;
                buf_val_6_z_load_reg_1016_pp0_iter12_reg <= buf_val_6_z_load_reg_1016_pp0_iter11_reg;
                buf_val_6_z_load_reg_1016_pp0_iter13_reg <= buf_val_6_z_load_reg_1016_pp0_iter12_reg;
                buf_val_6_z_load_reg_1016_pp0_iter14_reg <= buf_val_6_z_load_reg_1016_pp0_iter13_reg;
                buf_val_6_z_load_reg_1016_pp0_iter15_reg <= buf_val_6_z_load_reg_1016_pp0_iter14_reg;
                buf_val_6_z_load_reg_1016_pp0_iter16_reg <= buf_val_6_z_load_reg_1016_pp0_iter15_reg;
                buf_val_6_z_load_reg_1016_pp0_iter17_reg <= buf_val_6_z_load_reg_1016_pp0_iter16_reg;
                buf_val_6_z_load_reg_1016_pp0_iter18_reg <= buf_val_6_z_load_reg_1016_pp0_iter17_reg;
                buf_val_6_z_load_reg_1016_pp0_iter19_reg <= buf_val_6_z_load_reg_1016_pp0_iter18_reg;
                buf_val_6_z_load_reg_1016_pp0_iter20_reg <= buf_val_6_z_load_reg_1016_pp0_iter19_reg;
                buf_val_6_z_load_reg_1016_pp0_iter21_reg <= buf_val_6_z_load_reg_1016_pp0_iter20_reg;
                buf_val_6_z_load_reg_1016_pp0_iter2_reg <= buf_val_6_z_load_reg_1016;
                buf_val_6_z_load_reg_1016_pp0_iter3_reg <= buf_val_6_z_load_reg_1016_pp0_iter2_reg;
                buf_val_6_z_load_reg_1016_pp0_iter4_reg <= buf_val_6_z_load_reg_1016_pp0_iter3_reg;
                buf_val_6_z_load_reg_1016_pp0_iter5_reg <= buf_val_6_z_load_reg_1016_pp0_iter4_reg;
                buf_val_6_z_load_reg_1016_pp0_iter6_reg <= buf_val_6_z_load_reg_1016_pp0_iter5_reg;
                buf_val_6_z_load_reg_1016_pp0_iter7_reg <= buf_val_6_z_load_reg_1016_pp0_iter6_reg;
                buf_val_6_z_load_reg_1016_pp0_iter8_reg <= buf_val_6_z_load_reg_1016_pp0_iter7_reg;
                buf_val_6_z_load_reg_1016_pp0_iter9_reg <= buf_val_6_z_load_reg_1016_pp0_iter8_reg;
                exitcond_flatten_reg_906_pp0_iter10_reg <= exitcond_flatten_reg_906_pp0_iter9_reg;
                exitcond_flatten_reg_906_pp0_iter11_reg <= exitcond_flatten_reg_906_pp0_iter10_reg;
                exitcond_flatten_reg_906_pp0_iter12_reg <= exitcond_flatten_reg_906_pp0_iter11_reg;
                exitcond_flatten_reg_906_pp0_iter13_reg <= exitcond_flatten_reg_906_pp0_iter12_reg;
                exitcond_flatten_reg_906_pp0_iter14_reg <= exitcond_flatten_reg_906_pp0_iter13_reg;
                exitcond_flatten_reg_906_pp0_iter15_reg <= exitcond_flatten_reg_906_pp0_iter14_reg;
                exitcond_flatten_reg_906_pp0_iter16_reg <= exitcond_flatten_reg_906_pp0_iter15_reg;
                exitcond_flatten_reg_906_pp0_iter17_reg <= exitcond_flatten_reg_906_pp0_iter16_reg;
                exitcond_flatten_reg_906_pp0_iter18_reg <= exitcond_flatten_reg_906_pp0_iter17_reg;
                exitcond_flatten_reg_906_pp0_iter19_reg <= exitcond_flatten_reg_906_pp0_iter18_reg;
                exitcond_flatten_reg_906_pp0_iter20_reg <= exitcond_flatten_reg_906_pp0_iter19_reg;
                exitcond_flatten_reg_906_pp0_iter21_reg <= exitcond_flatten_reg_906_pp0_iter20_reg;
                exitcond_flatten_reg_906_pp0_iter22_reg <= exitcond_flatten_reg_906_pp0_iter21_reg;
                exitcond_flatten_reg_906_pp0_iter23_reg <= exitcond_flatten_reg_906_pp0_iter22_reg;
                exitcond_flatten_reg_906_pp0_iter24_reg <= exitcond_flatten_reg_906_pp0_iter23_reg;
                exitcond_flatten_reg_906_pp0_iter25_reg <= exitcond_flatten_reg_906_pp0_iter24_reg;
                exitcond_flatten_reg_906_pp0_iter26_reg <= exitcond_flatten_reg_906_pp0_iter25_reg;
                exitcond_flatten_reg_906_pp0_iter27_reg <= exitcond_flatten_reg_906_pp0_iter26_reg;
                exitcond_flatten_reg_906_pp0_iter2_reg <= exitcond_flatten_reg_906_pp0_iter1_reg;
                exitcond_flatten_reg_906_pp0_iter3_reg <= exitcond_flatten_reg_906_pp0_iter2_reg;
                exitcond_flatten_reg_906_pp0_iter4_reg <= exitcond_flatten_reg_906_pp0_iter3_reg;
                exitcond_flatten_reg_906_pp0_iter5_reg <= exitcond_flatten_reg_906_pp0_iter4_reg;
                exitcond_flatten_reg_906_pp0_iter6_reg <= exitcond_flatten_reg_906_pp0_iter5_reg;
                exitcond_flatten_reg_906_pp0_iter7_reg <= exitcond_flatten_reg_906_pp0_iter6_reg;
                exitcond_flatten_reg_906_pp0_iter8_reg <= exitcond_flatten_reg_906_pp0_iter7_reg;
                exitcond_flatten_reg_906_pp0_iter9_reg <= exitcond_flatten_reg_906_pp0_iter8_reg;
                or_cond_mid2_reg_919_pp0_iter10_reg <= or_cond_mid2_reg_919_pp0_iter9_reg;
                or_cond_mid2_reg_919_pp0_iter11_reg <= or_cond_mid2_reg_919_pp0_iter10_reg;
                or_cond_mid2_reg_919_pp0_iter12_reg <= or_cond_mid2_reg_919_pp0_iter11_reg;
                or_cond_mid2_reg_919_pp0_iter13_reg <= or_cond_mid2_reg_919_pp0_iter12_reg;
                or_cond_mid2_reg_919_pp0_iter14_reg <= or_cond_mid2_reg_919_pp0_iter13_reg;
                or_cond_mid2_reg_919_pp0_iter15_reg <= or_cond_mid2_reg_919_pp0_iter14_reg;
                or_cond_mid2_reg_919_pp0_iter16_reg <= or_cond_mid2_reg_919_pp0_iter15_reg;
                or_cond_mid2_reg_919_pp0_iter17_reg <= or_cond_mid2_reg_919_pp0_iter16_reg;
                or_cond_mid2_reg_919_pp0_iter18_reg <= or_cond_mid2_reg_919_pp0_iter17_reg;
                or_cond_mid2_reg_919_pp0_iter19_reg <= or_cond_mid2_reg_919_pp0_iter18_reg;
                or_cond_mid2_reg_919_pp0_iter20_reg <= or_cond_mid2_reg_919_pp0_iter19_reg;
                or_cond_mid2_reg_919_pp0_iter21_reg <= or_cond_mid2_reg_919_pp0_iter20_reg;
                or_cond_mid2_reg_919_pp0_iter22_reg <= or_cond_mid2_reg_919_pp0_iter21_reg;
                or_cond_mid2_reg_919_pp0_iter23_reg <= or_cond_mid2_reg_919_pp0_iter22_reg;
                or_cond_mid2_reg_919_pp0_iter24_reg <= or_cond_mid2_reg_919_pp0_iter23_reg;
                or_cond_mid2_reg_919_pp0_iter25_reg <= or_cond_mid2_reg_919_pp0_iter24_reg;
                or_cond_mid2_reg_919_pp0_iter26_reg <= or_cond_mid2_reg_919_pp0_iter25_reg;
                or_cond_mid2_reg_919_pp0_iter27_reg <= or_cond_mid2_reg_919_pp0_iter26_reg;
                or_cond_mid2_reg_919_pp0_iter28_reg <= or_cond_mid2_reg_919_pp0_iter27_reg;
                or_cond_mid2_reg_919_pp0_iter29_reg <= or_cond_mid2_reg_919_pp0_iter28_reg;
                or_cond_mid2_reg_919_pp0_iter2_reg <= or_cond_mid2_reg_919_pp0_iter1_reg;
                or_cond_mid2_reg_919_pp0_iter30_reg <= or_cond_mid2_reg_919_pp0_iter29_reg;
                or_cond_mid2_reg_919_pp0_iter31_reg <= or_cond_mid2_reg_919_pp0_iter30_reg;
                or_cond_mid2_reg_919_pp0_iter32_reg <= or_cond_mid2_reg_919_pp0_iter31_reg;
                or_cond_mid2_reg_919_pp0_iter3_reg <= or_cond_mid2_reg_919_pp0_iter2_reg;
                or_cond_mid2_reg_919_pp0_iter4_reg <= or_cond_mid2_reg_919_pp0_iter3_reg;
                or_cond_mid2_reg_919_pp0_iter5_reg <= or_cond_mid2_reg_919_pp0_iter4_reg;
                or_cond_mid2_reg_919_pp0_iter6_reg <= or_cond_mid2_reg_919_pp0_iter5_reg;
                or_cond_mid2_reg_919_pp0_iter7_reg <= or_cond_mid2_reg_919_pp0_iter6_reg;
                or_cond_mid2_reg_919_pp0_iter8_reg <= or_cond_mid2_reg_919_pp0_iter7_reg;
                or_cond_mid2_reg_919_pp0_iter9_reg <= or_cond_mid2_reg_919_pp0_iter8_reg;
                tmp_37_mid2_reg_923_pp0_iter10_reg <= tmp_37_mid2_reg_923_pp0_iter9_reg;
                tmp_37_mid2_reg_923_pp0_iter11_reg <= tmp_37_mid2_reg_923_pp0_iter10_reg;
                tmp_37_mid2_reg_923_pp0_iter12_reg <= tmp_37_mid2_reg_923_pp0_iter11_reg;
                tmp_37_mid2_reg_923_pp0_iter13_reg <= tmp_37_mid2_reg_923_pp0_iter12_reg;
                tmp_37_mid2_reg_923_pp0_iter14_reg <= tmp_37_mid2_reg_923_pp0_iter13_reg;
                tmp_37_mid2_reg_923_pp0_iter15_reg <= tmp_37_mid2_reg_923_pp0_iter14_reg;
                tmp_37_mid2_reg_923_pp0_iter16_reg <= tmp_37_mid2_reg_923_pp0_iter15_reg;
                tmp_37_mid2_reg_923_pp0_iter17_reg <= tmp_37_mid2_reg_923_pp0_iter16_reg;
                tmp_37_mid2_reg_923_pp0_iter18_reg <= tmp_37_mid2_reg_923_pp0_iter17_reg;
                tmp_37_mid2_reg_923_pp0_iter19_reg <= tmp_37_mid2_reg_923_pp0_iter18_reg;
                tmp_37_mid2_reg_923_pp0_iter20_reg <= tmp_37_mid2_reg_923_pp0_iter19_reg;
                tmp_37_mid2_reg_923_pp0_iter21_reg <= tmp_37_mid2_reg_923_pp0_iter20_reg;
                tmp_37_mid2_reg_923_pp0_iter22_reg <= tmp_37_mid2_reg_923_pp0_iter21_reg;
                tmp_37_mid2_reg_923_pp0_iter23_reg <= tmp_37_mid2_reg_923_pp0_iter22_reg;
                tmp_37_mid2_reg_923_pp0_iter24_reg <= tmp_37_mid2_reg_923_pp0_iter23_reg;
                tmp_37_mid2_reg_923_pp0_iter25_reg <= tmp_37_mid2_reg_923_pp0_iter24_reg;
                tmp_37_mid2_reg_923_pp0_iter26_reg <= tmp_37_mid2_reg_923_pp0_iter25_reg;
                tmp_37_mid2_reg_923_pp0_iter27_reg <= tmp_37_mid2_reg_923_pp0_iter26_reg;
                tmp_37_mid2_reg_923_pp0_iter28_reg <= tmp_37_mid2_reg_923_pp0_iter27_reg;
                tmp_37_mid2_reg_923_pp0_iter29_reg <= tmp_37_mid2_reg_923_pp0_iter28_reg;
                tmp_37_mid2_reg_923_pp0_iter2_reg <= tmp_37_mid2_reg_923_pp0_iter1_reg;
                tmp_37_mid2_reg_923_pp0_iter30_reg <= tmp_37_mid2_reg_923_pp0_iter29_reg;
                tmp_37_mid2_reg_923_pp0_iter31_reg <= tmp_37_mid2_reg_923_pp0_iter30_reg;
                tmp_37_mid2_reg_923_pp0_iter32_reg <= tmp_37_mid2_reg_923_pp0_iter31_reg;
                tmp_37_mid2_reg_923_pp0_iter3_reg <= tmp_37_mid2_reg_923_pp0_iter2_reg;
                tmp_37_mid2_reg_923_pp0_iter4_reg <= tmp_37_mid2_reg_923_pp0_iter3_reg;
                tmp_37_mid2_reg_923_pp0_iter5_reg <= tmp_37_mid2_reg_923_pp0_iter4_reg;
                tmp_37_mid2_reg_923_pp0_iter6_reg <= tmp_37_mid2_reg_923_pp0_iter5_reg;
                tmp_37_mid2_reg_923_pp0_iter7_reg <= tmp_37_mid2_reg_923_pp0_iter6_reg;
                tmp_37_mid2_reg_923_pp0_iter8_reg <= tmp_37_mid2_reg_923_pp0_iter7_reg;
                tmp_37_mid2_reg_923_pp0_iter9_reg <= tmp_37_mid2_reg_923_pp0_iter8_reg;
                    tmp_40_reg_932_pp0_iter2_reg(10 downto 0) <= tmp_40_reg_932_pp0_iter1_reg(10 downto 0);
                    tmp_40_reg_932_pp0_iter3_reg(10 downto 0) <= tmp_40_reg_932_pp0_iter2_reg(10 downto 0);
                    tmp_40_reg_932_pp0_iter4_reg(10 downto 0) <= tmp_40_reg_932_pp0_iter3_reg(10 downto 0);
                    tmp_40_reg_932_pp0_iter5_reg(10 downto 0) <= tmp_40_reg_932_pp0_iter4_reg(10 downto 0);
                    tmp_40_reg_932_pp0_iter6_reg(10 downto 0) <= tmp_40_reg_932_pp0_iter5_reg(10 downto 0);
                    tmp_40_reg_932_pp0_iter7_reg(10 downto 0) <= tmp_40_reg_932_pp0_iter6_reg(10 downto 0);
                tmp_mid2_reg_915_pp0_iter10_reg <= tmp_mid2_reg_915_pp0_iter9_reg;
                tmp_mid2_reg_915_pp0_iter11_reg <= tmp_mid2_reg_915_pp0_iter10_reg;
                tmp_mid2_reg_915_pp0_iter12_reg <= tmp_mid2_reg_915_pp0_iter11_reg;
                tmp_mid2_reg_915_pp0_iter13_reg <= tmp_mid2_reg_915_pp0_iter12_reg;
                tmp_mid2_reg_915_pp0_iter14_reg <= tmp_mid2_reg_915_pp0_iter13_reg;
                tmp_mid2_reg_915_pp0_iter15_reg <= tmp_mid2_reg_915_pp0_iter14_reg;
                tmp_mid2_reg_915_pp0_iter16_reg <= tmp_mid2_reg_915_pp0_iter15_reg;
                tmp_mid2_reg_915_pp0_iter17_reg <= tmp_mid2_reg_915_pp0_iter16_reg;
                tmp_mid2_reg_915_pp0_iter18_reg <= tmp_mid2_reg_915_pp0_iter17_reg;
                tmp_mid2_reg_915_pp0_iter19_reg <= tmp_mid2_reg_915_pp0_iter18_reg;
                tmp_mid2_reg_915_pp0_iter20_reg <= tmp_mid2_reg_915_pp0_iter19_reg;
                tmp_mid2_reg_915_pp0_iter21_reg <= tmp_mid2_reg_915_pp0_iter20_reg;
                tmp_mid2_reg_915_pp0_iter22_reg <= tmp_mid2_reg_915_pp0_iter21_reg;
                tmp_mid2_reg_915_pp0_iter23_reg <= tmp_mid2_reg_915_pp0_iter22_reg;
                tmp_mid2_reg_915_pp0_iter24_reg <= tmp_mid2_reg_915_pp0_iter23_reg;
                tmp_mid2_reg_915_pp0_iter25_reg <= tmp_mid2_reg_915_pp0_iter24_reg;
                tmp_mid2_reg_915_pp0_iter26_reg <= tmp_mid2_reg_915_pp0_iter25_reg;
                tmp_mid2_reg_915_pp0_iter27_reg <= tmp_mid2_reg_915_pp0_iter26_reg;
                tmp_mid2_reg_915_pp0_iter2_reg <= tmp_mid2_reg_915_pp0_iter1_reg;
                tmp_mid2_reg_915_pp0_iter3_reg <= tmp_mid2_reg_915_pp0_iter2_reg;
                tmp_mid2_reg_915_pp0_iter4_reg <= tmp_mid2_reg_915_pp0_iter3_reg;
                tmp_mid2_reg_915_pp0_iter5_reg <= tmp_mid2_reg_915_pp0_iter4_reg;
                tmp_mid2_reg_915_pp0_iter6_reg <= tmp_mid2_reg_915_pp0_iter5_reg;
                tmp_mid2_reg_915_pp0_iter7_reg <= tmp_mid2_reg_915_pp0_iter6_reg;
                tmp_mid2_reg_915_pp0_iter8_reg <= tmp_mid2_reg_915_pp0_iter7_reg;
                tmp_mid2_reg_915_pp0_iter9_reg <= tmp_mid2_reg_915_pp0_iter8_reg;
                tmp_x_reg_1022_pp0_iter10_reg <= tmp_x_reg_1022_pp0_iter9_reg;
                tmp_x_reg_1022_pp0_iter11_reg <= tmp_x_reg_1022_pp0_iter10_reg;
                tmp_x_reg_1022_pp0_iter12_reg <= tmp_x_reg_1022_pp0_iter11_reg;
                tmp_x_reg_1022_pp0_iter13_reg <= tmp_x_reg_1022_pp0_iter12_reg;
                tmp_x_reg_1022_pp0_iter14_reg <= tmp_x_reg_1022_pp0_iter13_reg;
                tmp_x_reg_1022_pp0_iter15_reg <= tmp_x_reg_1022_pp0_iter14_reg;
                tmp_x_reg_1022_pp0_iter16_reg <= tmp_x_reg_1022_pp0_iter15_reg;
                tmp_x_reg_1022_pp0_iter17_reg <= tmp_x_reg_1022_pp0_iter16_reg;
                tmp_x_reg_1022_pp0_iter18_reg <= tmp_x_reg_1022_pp0_iter17_reg;
                tmp_x_reg_1022_pp0_iter19_reg <= tmp_x_reg_1022_pp0_iter18_reg;
                tmp_x_reg_1022_pp0_iter20_reg <= tmp_x_reg_1022_pp0_iter19_reg;
                tmp_x_reg_1022_pp0_iter21_reg <= tmp_x_reg_1022_pp0_iter20_reg;
                tmp_x_reg_1022_pp0_iter22_reg <= tmp_x_reg_1022_pp0_iter21_reg;
                tmp_x_reg_1022_pp0_iter23_reg <= tmp_x_reg_1022_pp0_iter22_reg;
                tmp_x_reg_1022_pp0_iter24_reg <= tmp_x_reg_1022_pp0_iter23_reg;
                tmp_x_reg_1022_pp0_iter2_reg <= tmp_x_reg_1022;
                tmp_x_reg_1022_pp0_iter3_reg <= tmp_x_reg_1022_pp0_iter2_reg;
                tmp_x_reg_1022_pp0_iter4_reg <= tmp_x_reg_1022_pp0_iter3_reg;
                tmp_x_reg_1022_pp0_iter5_reg <= tmp_x_reg_1022_pp0_iter4_reg;
                tmp_x_reg_1022_pp0_iter6_reg <= tmp_x_reg_1022_pp0_iter5_reg;
                tmp_x_reg_1022_pp0_iter7_reg <= tmp_x_reg_1022_pp0_iter6_reg;
                tmp_x_reg_1022_pp0_iter8_reg <= tmp_x_reg_1022_pp0_iter7_reg;
                tmp_x_reg_1022_pp0_iter9_reg <= tmp_x_reg_1022_pp0_iter8_reg;
                tmp_y_reg_1027_pp0_iter10_reg <= tmp_y_reg_1027_pp0_iter9_reg;
                tmp_y_reg_1027_pp0_iter11_reg <= tmp_y_reg_1027_pp0_iter10_reg;
                tmp_y_reg_1027_pp0_iter12_reg <= tmp_y_reg_1027_pp0_iter11_reg;
                tmp_y_reg_1027_pp0_iter13_reg <= tmp_y_reg_1027_pp0_iter12_reg;
                tmp_y_reg_1027_pp0_iter14_reg <= tmp_y_reg_1027_pp0_iter13_reg;
                tmp_y_reg_1027_pp0_iter15_reg <= tmp_y_reg_1027_pp0_iter14_reg;
                tmp_y_reg_1027_pp0_iter16_reg <= tmp_y_reg_1027_pp0_iter15_reg;
                tmp_y_reg_1027_pp0_iter17_reg <= tmp_y_reg_1027_pp0_iter16_reg;
                tmp_y_reg_1027_pp0_iter18_reg <= tmp_y_reg_1027_pp0_iter17_reg;
                tmp_y_reg_1027_pp0_iter19_reg <= tmp_y_reg_1027_pp0_iter18_reg;
                tmp_y_reg_1027_pp0_iter20_reg <= tmp_y_reg_1027_pp0_iter19_reg;
                tmp_y_reg_1027_pp0_iter21_reg <= tmp_y_reg_1027_pp0_iter20_reg;
                tmp_y_reg_1027_pp0_iter22_reg <= tmp_y_reg_1027_pp0_iter21_reg;
                tmp_y_reg_1027_pp0_iter23_reg <= tmp_y_reg_1027_pp0_iter22_reg;
                tmp_y_reg_1027_pp0_iter24_reg <= tmp_y_reg_1027_pp0_iter23_reg;
                tmp_y_reg_1027_pp0_iter2_reg <= tmp_y_reg_1027;
                tmp_y_reg_1027_pp0_iter3_reg <= tmp_y_reg_1027_pp0_iter2_reg;
                tmp_y_reg_1027_pp0_iter4_reg <= tmp_y_reg_1027_pp0_iter3_reg;
                tmp_y_reg_1027_pp0_iter5_reg <= tmp_y_reg_1027_pp0_iter4_reg;
                tmp_y_reg_1027_pp0_iter6_reg <= tmp_y_reg_1027_pp0_iter5_reg;
                tmp_y_reg_1027_pp0_iter7_reg <= tmp_y_reg_1027_pp0_iter6_reg;
                tmp_y_reg_1027_pp0_iter8_reg <= tmp_y_reg_1027_pp0_iter7_reg;
                tmp_y_reg_1027_pp0_iter9_reg <= tmp_y_reg_1027_pp0_iter8_reg;
                tmp_z_reg_1032_pp0_iter10_reg <= tmp_z_reg_1032_pp0_iter9_reg;
                tmp_z_reg_1032_pp0_iter11_reg <= tmp_z_reg_1032_pp0_iter10_reg;
                tmp_z_reg_1032_pp0_iter12_reg <= tmp_z_reg_1032_pp0_iter11_reg;
                tmp_z_reg_1032_pp0_iter13_reg <= tmp_z_reg_1032_pp0_iter12_reg;
                tmp_z_reg_1032_pp0_iter14_reg <= tmp_z_reg_1032_pp0_iter13_reg;
                tmp_z_reg_1032_pp0_iter15_reg <= tmp_z_reg_1032_pp0_iter14_reg;
                tmp_z_reg_1032_pp0_iter16_reg <= tmp_z_reg_1032_pp0_iter15_reg;
                tmp_z_reg_1032_pp0_iter17_reg <= tmp_z_reg_1032_pp0_iter16_reg;
                tmp_z_reg_1032_pp0_iter18_reg <= tmp_z_reg_1032_pp0_iter17_reg;
                tmp_z_reg_1032_pp0_iter19_reg <= tmp_z_reg_1032_pp0_iter18_reg;
                tmp_z_reg_1032_pp0_iter20_reg <= tmp_z_reg_1032_pp0_iter19_reg;
                tmp_z_reg_1032_pp0_iter21_reg <= tmp_z_reg_1032_pp0_iter20_reg;
                tmp_z_reg_1032_pp0_iter22_reg <= tmp_z_reg_1032_pp0_iter21_reg;
                tmp_z_reg_1032_pp0_iter23_reg <= tmp_z_reg_1032_pp0_iter22_reg;
                tmp_z_reg_1032_pp0_iter24_reg <= tmp_z_reg_1032_pp0_iter23_reg;
                tmp_z_reg_1032_pp0_iter2_reg <= tmp_z_reg_1032;
                tmp_z_reg_1032_pp0_iter3_reg <= tmp_z_reg_1032_pp0_iter2_reg;
                tmp_z_reg_1032_pp0_iter4_reg <= tmp_z_reg_1032_pp0_iter3_reg;
                tmp_z_reg_1032_pp0_iter5_reg <= tmp_z_reg_1032_pp0_iter4_reg;
                tmp_z_reg_1032_pp0_iter6_reg <= tmp_z_reg_1032_pp0_iter5_reg;
                tmp_z_reg_1032_pp0_iter7_reg <= tmp_z_reg_1032_pp0_iter6_reg;
                tmp_z_reg_1032_pp0_iter8_reg <= tmp_z_reg_1032_pp0_iter7_reg;
                tmp_z_reg_1032_pp0_iter9_reg <= tmp_z_reg_1032_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_1_x_load_reg_989 <= buf_val_1_x_q0;
                buf_val_1_y_load_reg_994 <= buf_val_1_y_q0;
                buf_val_1_z_load_reg_999 <= buf_val_1_z_q0;
                buf_val_6_x_load_reg_1004 <= buf_val_6_x_q0;
                buf_val_6_y_load_reg_1010 <= buf_val_6_y_q0;
                buf_val_6_z_load_reg_1016 <= buf_val_6_z_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_906_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_2_x_addr_reg_1037 <= tmp_40_reg_932_pp0_iter3_reg(10 - 1 downto 0);
                buf_val_2_y_addr_reg_1043 <= tmp_40_reg_932_pp0_iter3_reg(10 - 1 downto 0);
                buf_val_2_z_addr_reg_1049 <= tmp_40_reg_932_pp0_iter3_reg(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_906_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_2_x_load_reg_1070 <= buf_val_2_x_q0;
                buf_val_2_y_load_reg_1075 <= buf_val_2_y_q0;
                buf_val_2_z_load_reg_1080 <= buf_val_2_z_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_906_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_3_x_addr_reg_1085 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_3_y_addr_reg_1091 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_3_z_addr_reg_1097 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_4_x_addr_reg_1103 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_4_y_addr_reg_1109 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_4_z_addr_reg_1115 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_5_x_addr_reg_1121 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_5_y_addr_reg_1127 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
                buf_val_5_z_addr_reg_1133 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_906_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_3_x_load_reg_1169 <= buf_val_3_x_q0;
                buf_val_3_y_load_reg_1174 <= buf_val_3_y_q0;
                buf_val_3_z_load_reg_1179 <= buf_val_3_z_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_906_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_4_x_load_reg_1214 <= buf_val_4_x_q0;
                buf_val_4_y_load_reg_1219 <= buf_val_4_y_q0;
                buf_val_4_z_load_reg_1224 <= buf_val_4_z_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_906_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_5_x_load_reg_1259 <= buf_val_5_x_q0;
                buf_val_5_y_load_reg_1264 <= buf_val_5_y_q0;
                buf_val_5_z_load_reg_1269 <= buf_val_5_z_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_mid2_reg_915_pp0_iter26_reg = ap_const_lv1_1) and (exitcond_flatten_reg_906_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                phitmp1_reg_1339 <= grp_fu_748_p2;
                phitmp2_reg_1344 <= grp_fu_753_p2;
                phitmp_reg_1334 <= grp_fu_743_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_mid2_reg_919_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_75_reg_1055 <= grp_fu_653_p2;
                tmp_76_reg_1060 <= grp_fu_658_p2;
                tmp_77_reg_1065 <= grp_fu_663_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1))) then
                tmp_x_reg_1022 <= gradient_x_dout;
                tmp_y_reg_1027 <= gradient_y_dout;
                tmp_z_reg_1032 <= gradient_z_dout;
            end if;
        end if;
    end process;
    tmp_40_reg_932(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_40_reg_932_pp0_iter1_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_40_reg_932_pp0_iter2_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_40_reg_932_pp0_iter3_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_40_reg_932_pp0_iter4_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_40_reg_932_pp0_iter5_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_40_reg_932_pp0_iter6_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    tmp_40_reg_932_pp0_iter7_reg(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter33, exitcond_flatten_fu_776_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter32)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_776_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_flatten_fu_776_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state36 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(gradient_x_empty_n, gradient_y_empty_n, gradient_z_empty_n, y_filtered_x_full_n, y_filtered_y_full_n, y_filtered_z_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op116_read_state3, ap_predicate_op318_write_state32)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_z_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_y_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_x_full_n = ap_const_logic_0)) or ((y_filtered_z_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_y_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_x_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((gradient_z_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_y_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_x_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(gradient_x_empty_n, gradient_y_empty_n, gradient_z_empty_n, y_filtered_x_full_n, y_filtered_y_full_n, y_filtered_z_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op116_read_state3, ap_predicate_op318_write_state32)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_z_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_y_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_x_full_n = ap_const_logic_0)) or ((y_filtered_z_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_y_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_x_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((gradient_z_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_y_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_x_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(gradient_x_empty_n, gradient_y_empty_n, gradient_z_empty_n, y_filtered_x_full_n, y_filtered_y_full_n, y_filtered_z_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op116_read_state3, ap_predicate_op318_write_state32)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_z_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_y_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_x_full_n = ap_const_logic_0)) or ((y_filtered_z_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_y_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_x_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((gradient_z_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_y_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_x_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state32_pp0_stage0_iter33_assign_proc : process(y_filtered_x_full_n, y_filtered_y_full_n, y_filtered_z_full_n, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op318_write_state32)
    begin
                ap_block_state32_pp0_stage0_iter33 <= (((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_z_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_y_full_n = ap_const_logic_0)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (y_filtered_x_full_n = ap_const_logic_0)) or ((y_filtered_z_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_y_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)) or ((y_filtered_x_full_n = ap_const_logic_0) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)));
    end process;

        ap_block_state33_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(gradient_x_empty_n, gradient_y_empty_n, gradient_z_empty_n, ap_predicate_op116_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((gradient_z_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_y_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)) or ((gradient_x_empty_n = ap_const_logic_0) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_375_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_375 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_76_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_76 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_776_p2)
    begin
        if ((exitcond_flatten_fu_776_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32)
    begin
        if (((ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_buf_val_x_load_2_6_reg_551 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_y_load_2_6_reg_539 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_z_load_2_6_reg_527 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op116_read_state3_assign_proc : process(exitcond_flatten_reg_906, tmp_mid2_reg_915)
    begin
                ap_predicate_op116_read_state3 <= ((tmp_mid2_reg_915 = ap_const_lv1_1) and (exitcond_flatten_reg_906 = ap_const_lv1_0));
    end process;


    ap_predicate_op318_write_state32_assign_proc : process(or_cond_mid2_reg_919_pp0_iter32_reg, tmp_37_mid2_reg_923_pp0_iter32_reg)
    begin
                ap_predicate_op318_write_state32 <= ((tmp_37_mid2_reg_923_pp0_iter32_reg = ap_const_lv1_1) and (or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    buf_val_1_x_address0 <= tmp_40_fu_890_p1(10 - 1 downto 0);

    buf_val_1_x_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_x_ce0 <= ap_const_logic_1;
        else 
            buf_val_1_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_x_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_x_ce1 <= ap_const_logic_1;
        else 
            buf_val_1_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_x_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter4_reg, ap_enable_reg_pp0_iter5)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_x_we1 <= ap_const_logic_1;
        else 
            buf_val_1_x_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_1_y_address0 <= tmp_40_fu_890_p1(10 - 1 downto 0);

    buf_val_1_y_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_y_ce0 <= ap_const_logic_1;
        else 
            buf_val_1_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_y_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_y_ce1 <= ap_const_logic_1;
        else 
            buf_val_1_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_y_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter4_reg, ap_enable_reg_pp0_iter5)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_y_we1 <= ap_const_logic_1;
        else 
            buf_val_1_y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_1_z_address0 <= tmp_40_fu_890_p1(10 - 1 downto 0);

    buf_val_1_z_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_z_ce0 <= ap_const_logic_1;
        else 
            buf_val_1_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_z_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_z_ce1 <= ap_const_logic_1;
        else 
            buf_val_1_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_z_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter4_reg, ap_enable_reg_pp0_iter5)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_1_z_we1 <= ap_const_logic_1;
        else 
            buf_val_1_z_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_2_x_address0 <= tmp_40_reg_932_pp0_iter3_reg(10 - 1 downto 0);

    buf_val_2_x_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_x_ce0 <= ap_const_logic_1;
        else 
            buf_val_2_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_x_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_x_ce1 <= ap_const_logic_1;
        else 
            buf_val_2_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_x_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_x_we1 <= ap_const_logic_1;
        else 
            buf_val_2_x_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_2_y_address0 <= tmp_40_reg_932_pp0_iter3_reg(10 - 1 downto 0);

    buf_val_2_y_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_y_ce0 <= ap_const_logic_1;
        else 
            buf_val_2_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_y_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_y_ce1 <= ap_const_logic_1;
        else 
            buf_val_2_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_y_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_y_we1 <= ap_const_logic_1;
        else 
            buf_val_2_y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_2_z_address0 <= tmp_40_reg_932_pp0_iter3_reg(10 - 1 downto 0);

    buf_val_2_z_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_z_ce0 <= ap_const_logic_1;
        else 
            buf_val_2_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_z_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_z_ce1 <= ap_const_logic_1;
        else 
            buf_val_2_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_z_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_2_z_we1 <= ap_const_logic_1;
        else 
            buf_val_2_z_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_3_x_address0 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);

    buf_val_3_x_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_x_ce0 <= ap_const_logic_1;
        else 
            buf_val_3_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_3_x_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_x_ce1 <= ap_const_logic_1;
        else 
            buf_val_3_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_3_x_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_x_we1 <= ap_const_logic_1;
        else 
            buf_val_3_x_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_3_y_address0 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);

    buf_val_3_y_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_y_ce0 <= ap_const_logic_1;
        else 
            buf_val_3_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_3_y_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_y_ce1 <= ap_const_logic_1;
        else 
            buf_val_3_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_3_y_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_y_we1 <= ap_const_logic_1;
        else 
            buf_val_3_y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_3_z_address0 <= tmp_40_reg_932_pp0_iter7_reg(10 - 1 downto 0);

    buf_val_3_z_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_z_ce0 <= ap_const_logic_1;
        else 
            buf_val_3_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_3_z_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_z_ce1 <= ap_const_logic_1;
        else 
            buf_val_3_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_3_z_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_3_z_we1 <= ap_const_logic_1;
        else 
            buf_val_3_z_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_x_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_x_ce0 <= ap_const_logic_1;
        else 
            buf_val_4_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_x_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_x_ce1 <= ap_const_logic_1;
        else 
            buf_val_4_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_x_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter16_reg, ap_enable_reg_pp0_iter17)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_x_we1 <= ap_const_logic_1;
        else 
            buf_val_4_x_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_y_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_y_ce0 <= ap_const_logic_1;
        else 
            buf_val_4_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_y_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_y_ce1 <= ap_const_logic_1;
        else 
            buf_val_4_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_y_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter16_reg, ap_enable_reg_pp0_iter17)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_y_we1 <= ap_const_logic_1;
        else 
            buf_val_4_y_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_z_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_z_ce0 <= ap_const_logic_1;
        else 
            buf_val_4_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_z_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_z_ce1 <= ap_const_logic_1;
        else 
            buf_val_4_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_4_z_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter16_reg, ap_enable_reg_pp0_iter17)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_4_z_we1 <= ap_const_logic_1;
        else 
            buf_val_4_z_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_x_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_x_ce0 <= ap_const_logic_1;
        else 
            buf_val_5_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_x_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_x_ce1 <= ap_const_logic_1;
        else 
            buf_val_5_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_x_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter16_reg, ap_enable_reg_pp0_iter17)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_x_we1 <= ap_const_logic_1;
        else 
            buf_val_5_x_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_y_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_y_ce0 <= ap_const_logic_1;
        else 
            buf_val_5_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_y_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_y_ce1 <= ap_const_logic_1;
        else 
            buf_val_5_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_y_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter16_reg, ap_enable_reg_pp0_iter17)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_y_we1 <= ap_const_logic_1;
        else 
            buf_val_5_y_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_z_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_z_ce0 <= ap_const_logic_1;
        else 
            buf_val_5_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_z_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_z_ce1 <= ap_const_logic_1;
        else 
            buf_val_5_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_5_z_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_906_pp0_iter16_reg, ap_enable_reg_pp0_iter17)
    begin
        if (((exitcond_flatten_reg_906_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_5_z_we1 <= ap_const_logic_1;
        else 
            buf_val_5_z_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_6_x_address0 <= tmp_40_fu_890_p1(10 - 1 downto 0);

    buf_val_6_x_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_6_x_ce0 <= ap_const_logic_1;
        else 
            buf_val_6_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_6_x_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))) then 
            buf_val_6_x_ce1 <= ap_const_logic_1;
        else 
            buf_val_6_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_6_x_d1_assign_proc : process(gradient_x_dout, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_condition_76)
    begin
        if ((ap_const_boolean_1 = ap_condition_76)) then
            if ((ap_predicate_op116_read_state3 = ap_const_boolean_1)) then 
                buf_val_6_x_d1 <= gradient_x_dout;
            elsif (((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0))) then 
                buf_val_6_x_d1 <= ap_const_lv32_0;
            else 
                buf_val_6_x_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_val_6_x_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_val_6_x_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))) then 
            buf_val_6_x_we1 <= ap_const_logic_1;
        else 
            buf_val_6_x_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_6_y_address0 <= tmp_40_fu_890_p1(10 - 1 downto 0);

    buf_val_6_y_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_6_y_ce0 <= ap_const_logic_1;
        else 
            buf_val_6_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_6_y_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))) then 
            buf_val_6_y_ce1 <= ap_const_logic_1;
        else 
            buf_val_6_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_6_y_d1_assign_proc : process(gradient_y_dout, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_condition_76)
    begin
        if ((ap_const_boolean_1 = ap_condition_76)) then
            if ((ap_predicate_op116_read_state3 = ap_const_boolean_1)) then 
                buf_val_6_y_d1 <= gradient_y_dout;
            elsif (((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0))) then 
                buf_val_6_y_d1 <= ap_const_lv32_0;
            else 
                buf_val_6_y_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_val_6_y_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_val_6_y_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))) then 
            buf_val_6_y_we1 <= ap_const_logic_1;
        else 
            buf_val_6_y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_6_z_address0 <= tmp_40_fu_890_p1(10 - 1 downto 0);

    buf_val_6_z_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_6_z_ce0 <= ap_const_logic_1;
        else 
            buf_val_6_z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_6_z_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))) then 
            buf_val_6_z_ce1 <= ap_const_logic_1;
        else 
            buf_val_6_z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_6_z_d1_assign_proc : process(gradient_z_dout, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_condition_76)
    begin
        if ((ap_const_boolean_1 = ap_condition_76)) then
            if ((ap_predicate_op116_read_state3 = ap_const_boolean_1)) then 
                buf_val_6_z_d1 <= gradient_z_dout;
            elsif (((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0))) then 
                buf_val_6_z_d1 <= ap_const_lv32_0;
            else 
                buf_val_6_z_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_val_6_z_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_val_6_z_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_906, tmp_mid2_reg_915, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_mid2_reg_915 = ap_const_lv1_0) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1)))) then 
            buf_val_6_z_we1 <= ap_const_logic_1;
        else 
            buf_val_6_z_we1 <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_900_p2 <= std_logic_vector(unsigned(col_assign_mid2_fu_794_p3) + unsigned(ap_const_lv11_1));
    col_assign_mid2_fu_794_p3 <= 
        ap_const_lv11_0 when (exitcond_fu_788_p2(0) = '1') else 
        col_assign_reg_516;
    exitcond_flatten_fu_776_p2 <= "1" when (indvar_flatten_reg_494 = ap_const_lv19_6DC00) else "0";
    exitcond_fu_788_p2 <= "1" when (col_assign_reg_516 = ap_const_lv11_400) else "0";

    gradient_x_blk_n_assign_proc : process(gradient_x_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_906, tmp_mid2_reg_915)
    begin
        if (((tmp_mid2_reg_915 = ap_const_lv1_1) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gradient_x_blk_n <= gradient_x_empty_n;
        else 
            gradient_x_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_x_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1))) then 
            gradient_x_read <= ap_const_logic_1;
        else 
            gradient_x_read <= ap_const_logic_0;
        end if; 
    end process;


    gradient_y_blk_n_assign_proc : process(gradient_y_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_906, tmp_mid2_reg_915)
    begin
        if (((tmp_mid2_reg_915 = ap_const_lv1_1) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gradient_y_blk_n <= gradient_y_empty_n;
        else 
            gradient_y_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_y_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1))) then 
            gradient_y_read <= ap_const_logic_1;
        else 
            gradient_y_read <= ap_const_logic_0;
        end if; 
    end process;


    gradient_z_blk_n_assign_proc : process(gradient_z_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_906, tmp_mid2_reg_915)
    begin
        if (((tmp_mid2_reg_915 = ap_const_lv1_1) and (exitcond_flatten_reg_906 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gradient_z_blk_n <= gradient_z_empty_n;
        else 
            gradient_z_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_z_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op116_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op116_read_state3 = ap_const_boolean_1))) then 
            gradient_z_read <= ap_const_logic_1;
        else 
            gradient_z_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_563_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_563_ce <= ap_const_logic_1;
        else 
            grp_fu_563_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_568_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_568_ce <= ap_const_logic_1;
        else 
            grp_fu_568_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_573_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_573_ce <= ap_const_logic_1;
        else 
            grp_fu_573_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_578_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_578_ce <= ap_const_logic_1;
        else 
            grp_fu_578_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_582_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_582_ce <= ap_const_logic_1;
        else 
            grp_fu_582_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_586_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_586_ce <= ap_const_logic_1;
        else 
            grp_fu_586_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_590_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_590_ce <= ap_const_logic_1;
        else 
            grp_fu_590_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_594_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_594_ce <= ap_const_logic_1;
        else 
            grp_fu_594_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_598_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_598_ce <= ap_const_logic_1;
        else 
            grp_fu_598_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_602_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_602_ce <= ap_const_logic_1;
        else 
            grp_fu_602_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_606_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_606_ce <= ap_const_logic_1;
        else 
            grp_fu_606_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_610_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_610_ce <= ap_const_logic_1;
        else 
            grp_fu_610_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_614_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_614_ce <= ap_const_logic_1;
        else 
            grp_fu_614_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_618_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_618_ce <= ap_const_logic_1;
        else 
            grp_fu_618_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_622_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_622_ce <= ap_const_logic_1;
        else 
            grp_fu_622_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_626_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_626_ce <= ap_const_logic_1;
        else 
            grp_fu_626_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_630_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_630_ce <= ap_const_logic_1;
        else 
            grp_fu_630_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_634_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_634_ce <= ap_const_logic_1;
        else 
            grp_fu_634_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_638_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_638_ce <= ap_const_logic_1;
        else 
            grp_fu_638_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_643_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_643_ce <= ap_const_logic_1;
        else 
            grp_fu_643_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_648_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_648_ce <= ap_const_logic_1;
        else 
            grp_fu_648_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_653_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_653_ce <= ap_const_logic_1;
        else 
            grp_fu_653_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_658_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_658_ce <= ap_const_logic_1;
        else 
            grp_fu_658_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_663_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_663_ce <= ap_const_logic_1;
        else 
            grp_fu_663_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_668_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_668_ce <= ap_const_logic_1;
        else 
            grp_fu_668_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_673_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_673_ce <= ap_const_logic_1;
        else 
            grp_fu_673_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_678_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_678_ce <= ap_const_logic_1;
        else 
            grp_fu_678_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_683_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_683_ce <= ap_const_logic_1;
        else 
            grp_fu_683_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_688_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_688_ce <= ap_const_logic_1;
        else 
            grp_fu_688_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_693_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_693_ce <= ap_const_logic_1;
        else 
            grp_fu_693_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_698_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_698_ce <= ap_const_logic_1;
        else 
            grp_fu_698_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_703_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_703_ce <= ap_const_logic_1;
        else 
            grp_fu_703_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_708_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_708_ce <= ap_const_logic_1;
        else 
            grp_fu_708_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_713_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_713_ce <= ap_const_logic_1;
        else 
            grp_fu_713_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_718_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_718_ce <= ap_const_logic_1;
        else 
            grp_fu_718_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_723_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_723_ce <= ap_const_logic_1;
        else 
            grp_fu_723_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_728_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_728_ce <= ap_const_logic_1;
        else 
            grp_fu_728_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_733_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_733_ce <= ap_const_logic_1;
        else 
            grp_fu_733_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_738_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_738_ce <= ap_const_logic_1;
        else 
            grp_fu_738_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_743_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_743_ce <= ap_const_logic_1;
        else 
            grp_fu_743_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_748_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_748_ce <= ap_const_logic_1;
        else 
            grp_fu_748_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_753_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_753_ce <= ap_const_logic_1;
        else 
            grp_fu_753_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp7_fu_868_p2 <= "0" when (tmp_84_fu_858_p4 = ap_const_lv8_0) else "1";
    icmp_fu_852_p2 <= "0" when (tmp_83_fu_842_p4 = ap_const_lv8_0) else "1";
    indvar_flatten_next_fu_782_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_494) + unsigned(ap_const_lv19_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_fu_770_p2 <= (tmp_fu_758_p2 and tmp_36_fu_764_p2);
    or_cond_mid1_fu_828_p2 <= (tmp_mid1_fu_808_p2 and tmp_36_mid1_fu_822_p2);
    or_cond_mid2_fu_834_p3 <= 
        or_cond_mid1_fu_828_p2 when (exitcond_fu_788_p2(0) = '1') else 
        or_cond_fu_770_p2;
    r_mid2_fu_882_p3 <= 
        r_s_fu_802_p2 when (exitcond_fu_788_p2(0) = '1') else 
        r_reg_505;
    r_s_fu_802_p2 <= std_logic_vector(unsigned(r_reg_505) + unsigned(ap_const_lv9_1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_36_fu_764_p2 <= "1" when (unsigned(r_reg_505) > unsigned(ap_const_lv9_5)) else "0";
    tmp_36_mid1_fu_822_p2 <= "1" when (unsigned(r_s_fu_802_p2) > unsigned(ap_const_lv9_5)) else "0";
    tmp_37_mid2_fu_874_p3 <= 
        icmp_fu_852_p2 when (exitcond_fu_788_p2(0) = '1') else 
        icmp7_fu_868_p2;
    tmp_40_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_mid2_fu_794_p3),64));
    tmp_83_fu_842_p4 <= r_s_fu_802_p2(8 downto 1);
    tmp_84_fu_858_p4 <= r_reg_505(8 downto 1);
    tmp_fu_758_p2 <= "1" when (unsigned(r_reg_505) < unsigned(ap_const_lv9_1B4)) else "0";
    tmp_mid1_fu_808_p2 <= "1" when (unsigned(r_s_fu_802_p2) < unsigned(ap_const_lv9_1B4)) else "0";
    tmp_mid2_fu_814_p3 <= 
        tmp_mid1_fu_808_p2 when (exitcond_fu_788_p2(0) = '1') else 
        tmp_fu_758_p2;

    y_filtered_x_blk_n_assign_proc : process(y_filtered_x_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, tmp_37_mid2_reg_923_pp0_iter32_reg)
    begin
        if ((((tmp_37_mid2_reg_923_pp0_iter32_reg = ap_const_lv1_1) and (or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1)))) then 
            y_filtered_x_blk_n <= y_filtered_x_full_n;
        else 
            y_filtered_x_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_x_din_assign_proc : process(ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op318_write_state32, acc_x_6_reg_1364, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1)) then 
                y_filtered_x_din <= acc_x_6_reg_1364;
            elsif ((ap_predicate_op318_write_state32 = ap_const_boolean_1)) then 
                y_filtered_x_din <= ap_const_lv32_0;
            else 
                y_filtered_x_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            y_filtered_x_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_filtered_x_write_assign_proc : process(ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op318_write_state32, ap_block_pp0_stage0_11001)
    begin
        if ((((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)))) then 
            y_filtered_x_write <= ap_const_logic_1;
        else 
            y_filtered_x_write <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_y_blk_n_assign_proc : process(y_filtered_y_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, tmp_37_mid2_reg_923_pp0_iter32_reg)
    begin
        if ((((tmp_37_mid2_reg_923_pp0_iter32_reg = ap_const_lv1_1) and (or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1)))) then 
            y_filtered_y_blk_n <= y_filtered_y_full_n;
        else 
            y_filtered_y_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_y_din_assign_proc : process(ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op318_write_state32, acc_y_6_reg_1369, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1)) then 
                y_filtered_y_din <= acc_y_6_reg_1369;
            elsif ((ap_predicate_op318_write_state32 = ap_const_boolean_1)) then 
                y_filtered_y_din <= ap_const_lv32_0;
            else 
                y_filtered_y_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            y_filtered_y_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_filtered_y_write_assign_proc : process(ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op318_write_state32, ap_block_pp0_stage0_11001)
    begin
        if ((((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)))) then 
            y_filtered_y_write <= ap_const_logic_1;
        else 
            y_filtered_y_write <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_z_blk_n_assign_proc : process(y_filtered_z_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, tmp_37_mid2_reg_923_pp0_iter32_reg)
    begin
        if ((((tmp_37_mid2_reg_923_pp0_iter32_reg = ap_const_lv1_1) and (or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1)) or ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1)))) then 
            y_filtered_z_blk_n <= y_filtered_z_full_n;
        else 
            y_filtered_z_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_z_din_assign_proc : process(ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op318_write_state32, acc_z_6_reg_1374, ap_block_pp0_stage0_01001)
    begin
        if (((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1)) then 
                y_filtered_z_din <= acc_z_6_reg_1374;
            elsif ((ap_predicate_op318_write_state32 = ap_const_boolean_1)) then 
                y_filtered_z_din <= ap_const_lv32_0;
            else 
                y_filtered_z_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            y_filtered_z_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_filtered_z_write_assign_proc : process(ap_enable_reg_pp0_iter33, or_cond_mid2_reg_919_pp0_iter32_reg, ap_predicate_op318_write_state32, ap_block_pp0_stage0_11001)
    begin
        if ((((or_cond_mid2_reg_919_pp0_iter32_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op318_write_state32 = ap_const_boolean_1)))) then 
            y_filtered_z_write <= ap_const_logic_1;
        else 
            y_filtered_z_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
