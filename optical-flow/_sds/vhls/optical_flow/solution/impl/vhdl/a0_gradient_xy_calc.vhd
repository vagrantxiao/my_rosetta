-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_gradient_xy_calc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    frame3_a_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    frame3_a_empty_n : IN STD_LOGIC;
    frame3_a_read : OUT STD_LOGIC;
    gradient_x_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    gradient_x_full_n : IN STD_LOGIC;
    gradient_x_write : OUT STD_LOGIC;
    gradient_y_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    gradient_y_full_n : IN STD_LOGIC;
    gradient_y_write : OUT STD_LOGIC );
end;


architecture behav of a0_gradient_xy_calc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_C1000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000001000000000000000000000000";
    constant ap_const_lv32_41000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001000000000000000000000000";
    constant ap_const_lv32_41400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001010000000000000000000000";
    constant ap_const_lv9_1B4 : STD_LOGIC_VECTOR (8 downto 0) := "110110100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv19_6DB6C : STD_LOGIC_VECTOR (18 downto 0) := "1101101101101101100";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv11_402 : STD_LOGIC_VECTOR (10 downto 0) := "10000000010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal buf_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_ce0 : STD_LOGIC;
    signal buf_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_1_ce1 : STD_LOGIC;
    signal buf_1_we1 : STD_LOGIC;
    signal buf_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_2_ce0 : STD_LOGIC;
    signal buf_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2_ce1 : STD_LOGIC;
    signal buf_2_we1 : STD_LOGIC;
    signal buf_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_3_ce0 : STD_LOGIC;
    signal buf_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_ce1 : STD_LOGIC;
    signal buf_3_we1 : STD_LOGIC;
    signal buf_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_4_ce0 : STD_LOGIC;
    signal buf_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_4_ce1 : STD_LOGIC;
    signal buf_4_we1 : STD_LOGIC;
    signal frame3_a_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_857 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_900 : STD_LOGIC_VECTOR (0 downto 0);
    signal gradient_x_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal or_cond2_reg_909 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gradient_y_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_239 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_reg_250 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_reg_261 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_flatten_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op120_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter29 : BOOLEAN;
    signal ap_predicate_op240_write_state32 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_857_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_387_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal r_mid2_fu_497_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_1_addr_reg_871 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_2_addr_reg_877 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_3_addr_reg_883 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_4_addr_reg_889 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_4_addr_reg_889_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_80_fu_513_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_895 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_895_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_900_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_reg_909_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_913_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c_2_fu_583_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal window_val_load_5_reg_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_6_reg_937 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_6_reg_937_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_6_reg_937_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_6_reg_937_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_6_reg_937_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2_load_reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_4_load_reg_947 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_12_reg_952_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_fu_652_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_3_load_s_reg_957_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_8_reg_967_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_10_reg_972_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_grad_1_reg_977 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_grad_1_reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_1_reg_987 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_1_reg_992 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_grad_1_1_reg_997 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_grad_1_1_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_2_reg_1007 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_grad_1_2_reg_1013 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_grad_1_2_reg_1018 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_3_reg_1023 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_3_reg_1028 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_298_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_grad_1_3_reg_1033 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_grad_1_3_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_grad_1_4_reg_1053 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_grad_1_4_reg_1058 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_339_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1063 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_1068 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal tmp_26_fu_505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal window_val_load_1_0_2_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_0_3_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_1_load_s_fu_659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_1_2_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_1_3_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2_load_s_fu_726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_2_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_2_1_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_2_2_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_2_3_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_3_2_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_3_3_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_4_load_s_fu_720_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_4_2_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_load_1_4_3_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal smallbuf_load_2_s_fu_713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal smallbuf_load1_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_smallbuf_load_fu_632_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_359_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_s_fu_407_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_mid1_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_427_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_78_fu_443_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_459_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp3_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_mid1_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_mid2_fu_399_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_mid2_fu_419_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_533_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp5_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_mid2_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_561_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_mid2_fu_475_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp6_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_4_to_int_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_4_neg_fu_750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_4_to_int_fu_761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_4_neg_fu_764_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_272_ce : STD_LOGIC;
    signal grp_fu_277_ce : STD_LOGIC;
    signal grp_fu_282_ce : STD_LOGIC;
    signal grp_fu_286_ce : STD_LOGIC;
    signal grp_fu_290_ce : STD_LOGIC;
    signal grp_fu_294_ce : STD_LOGIC;
    signal grp_fu_298_ce : STD_LOGIC;
    signal grp_fu_302_ce : STD_LOGIC;
    signal grp_fu_306_ce : STD_LOGIC;
    signal grp_fu_310_ce : STD_LOGIC;
    signal grp_fu_314_ce : STD_LOGIC;
    signal grp_fu_319_ce : STD_LOGIC;
    signal grp_fu_324_ce : STD_LOGIC;
    signal grp_fu_329_ce : STD_LOGIC;
    signal grp_fu_334_ce : STD_LOGIC;
    signal grp_fu_339_ce : STD_LOGIC;
    signal grp_fu_344_ce : STD_LOGIC;
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_342 : BOOLEAN;

    component a0_optical_flow_faddhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component a0_optical_flow_fmulibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component a0_optical_flow_fdivbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component a0_gradient_xy_calc_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buf_1_U : component a0_gradient_xy_calc_dEe
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_address0,
        ce0 => buf_1_ce0,
        q0 => buf_1_q0,
        address1 => buf_1_addr_reg_871,
        ce1 => buf_1_ce1,
        we1 => buf_1_we1,
        d1 => buf_2_q0);

    buf_2_U : component a0_gradient_xy_calc_dEe
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_address0,
        ce0 => buf_2_ce0,
        q0 => buf_2_q0,
        address1 => buf_2_addr_reg_877,
        ce1 => buf_2_ce1,
        we1 => buf_2_we1,
        d1 => buf_3_q0);

    buf_3_U : component a0_gradient_xy_calc_dEe
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_3_address0,
        ce0 => buf_3_ce0,
        q0 => buf_3_q0,
        address1 => buf_3_addr_reg_883,
        ce1 => buf_3_ce1,
        we1 => buf_3_we1,
        d1 => buf_4_q0);

    buf_4_U : component a0_gradient_xy_calc_dEe
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_4_address0,
        ce0 => buf_4_ce0,
        q0 => buf_4_q0,
        address1 => buf_4_addr_reg_889_pp0_iter1_reg,
        ce1 => buf_4_ce1,
        we1 => buf_4_we1,
        d1 => smallbuf_load1_fu_142);

    optical_flow_faddhbi_U20 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => window_val_load_1_2_fu_110,
        din1 => ap_const_lv32_0,
        ce => grp_fu_272_ce,
        dout => grp_fu_272_p2);

    optical_flow_faddhbi_U21 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => window_val_load_1_0_2_fu_94,
        din1 => ap_const_lv32_0,
        ce => grp_fu_277_ce,
        dout => grp_fu_277_p2);

    optical_flow_faddhbi_U22 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_grad_1_reg_977,
        din1 => tmp_100_1_reg_987,
        ce => grp_fu_282_ce,
        dout => grp_fu_282_p2);

    optical_flow_faddhbi_U23 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_grad_1_reg_982,
        din1 => tmp_101_1_reg_992,
        ce => grp_fu_286_ce,
        dout => grp_fu_286_p2);

    optical_flow_faddhbi_U24 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_grad_1_1_reg_997,
        din1 => tmp_100_2_reg_1007,
        ce => grp_fu_290_ce,
        dout => grp_fu_290_p2);

    optical_flow_faddhbi_U25 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_grad_1_1_reg_1002,
        din1 => tmp_100_2_reg_1007,
        ce => grp_fu_294_ce,
        dout => grp_fu_294_p2);

    optical_flow_faddhbi_U26 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_grad_1_2_reg_1013,
        din1 => tmp_100_3_reg_1023,
        ce => grp_fu_298_ce,
        dout => grp_fu_298_p2);

    optical_flow_faddhbi_U27 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_grad_1_2_reg_1018,
        din1 => tmp_101_3_reg_1028,
        ce => grp_fu_302_ce,
        dout => grp_fu_302_p2);

    optical_flow_faddhbi_U28 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_grad_1_3_reg_1033,
        din1 => grp_fu_306_p1,
        ce => grp_fu_306_ce,
        dout => grp_fu_306_p2);

    optical_flow_faddhbi_U29 : component a0_optical_flow_faddhbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_grad_1_3_reg_1038,
        din1 => grp_fu_310_p1,
        ce => grp_fu_310_ce,
        dout => grp_fu_310_p2);

    optical_flow_fmulibs_U30 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => window_val_load_5_reg_932,
        din1 => ap_const_lv32_C1000000,
        ce => grp_fu_314_ce,
        dout => grp_fu_314_p2);

    optical_flow_fmulibs_U31 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => window_val_load_1_1_2_fu_102,
        din1 => ap_const_lv32_C1000000,
        ce => grp_fu_319_ce,
        dout => grp_fu_319_p2);

    optical_flow_fmulibs_U32 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => window_val_load_6_reg_937_pp0_iter5_reg,
        din1 => ap_const_lv32_0,
        ce => grp_fu_324_ce,
        dout => grp_fu_324_p2);

    optical_flow_fmulibs_U33 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => window_val_load_12_reg_952_pp0_iter9_reg,
        din1 => ap_const_lv32_41000000,
        ce => grp_fu_329_ce,
        dout => grp_fu_329_p2);

    optical_flow_fmulibs_U34 : component a0_optical_flow_fmulibs
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => window_val_load_8_reg_967_pp0_iter9_reg,
        din1 => ap_const_lv32_41000000,
        ce => grp_fu_334_ce,
        dout => grp_fu_334_p2);

    optical_flow_fdivbkb_U35 : component a0_optical_flow_fdivbkb
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => x_grad_1_4_reg_1053,
        din1 => ap_const_lv32_41400000,
        ce => grp_fu_339_ce,
        dout => grp_fu_339_p2);

    optical_flow_fdivbkb_U36 : component a0_optical_flow_fdivbkb
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => y_grad_1_4_reg_1058,
        din1 => ap_const_lv32_41400000,
        ce => grp_fu_344_ce,
        dout => grp_fu_344_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_381_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state4)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_381_p2 = ap_const_lv1_0))) then 
                c_reg_261 <= c_2_fu_583_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_reg_261 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_381_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_239 <= indvar_flatten_next_fu_387_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_239 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    r_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_381_p2 = ap_const_lv1_0))) then 
                r_reg_250 <= r_mid2_fu_497_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_reg_250 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    smallbuf_load1_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_342)) then
                if ((ap_predicate_op120_read_state3 = ap_const_boolean_1)) then 
                    smallbuf_load1_fu_142 <= frame3_a_dout;
                elsif (((or_cond_reg_900 = ap_const_lv1_0) and (exitcond_flatten_reg_857 = ap_const_lv1_0))) then 
                    smallbuf_load1_fu_142 <= p_smallbuf_load_fu_632_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_381_p2 = ap_const_lv1_0))) then
                buf_1_addr_reg_871 <= tmp_26_fu_505_p1(10 - 1 downto 0);
                buf_2_addr_reg_877 <= tmp_26_fu_505_p1(10 - 1 downto 0);
                buf_3_addr_reg_883 <= tmp_26_fu_505_p1(10 - 1 downto 0);
                buf_4_addr_reg_889 <= tmp_26_fu_505_p1(10 - 1 downto 0);
                or_cond2_reg_909 <= or_cond2_fu_555_p2;
                or_cond_reg_900 <= or_cond_fu_527_p2;
                tmp_80_reg_895 <= c_mid2_fu_399_p3(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_857 = ap_const_lv1_0))) then
                buf_2_load_reg_942 <= buf_2_q0;
                buf_4_load_reg_947 <= buf_4_q0;
                window_val_load_1_0_3_fu_98 <= buf_1_load_s_fu_659_p3;
                window_val_load_1_2_3_fu_122 <= buf_3_load_s_fu_652_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_857 = ap_const_lv1_0))) then
                buf_3_load_s_reg_957 <= buf_3_load_s_fu_652_p3;
                window_val_load_12_reg_952 <= window_val_load_1_2_3_fu_122;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                buf_3_load_s_reg_957_pp0_iter10_reg <= buf_3_load_s_reg_957_pp0_iter9_reg;
                buf_3_load_s_reg_957_pp0_iter11_reg <= buf_3_load_s_reg_957_pp0_iter10_reg;
                buf_3_load_s_reg_957_pp0_iter12_reg <= buf_3_load_s_reg_957_pp0_iter11_reg;
                buf_3_load_s_reg_957_pp0_iter13_reg <= buf_3_load_s_reg_957_pp0_iter12_reg;
                buf_3_load_s_reg_957_pp0_iter14_reg <= buf_3_load_s_reg_957_pp0_iter13_reg;
                buf_3_load_s_reg_957_pp0_iter15_reg <= buf_3_load_s_reg_957_pp0_iter14_reg;
                buf_3_load_s_reg_957_pp0_iter16_reg <= buf_3_load_s_reg_957_pp0_iter15_reg;
                buf_3_load_s_reg_957_pp0_iter2_reg <= buf_3_load_s_reg_957;
                buf_3_load_s_reg_957_pp0_iter3_reg <= buf_3_load_s_reg_957_pp0_iter2_reg;
                buf_3_load_s_reg_957_pp0_iter4_reg <= buf_3_load_s_reg_957_pp0_iter3_reg;
                buf_3_load_s_reg_957_pp0_iter5_reg <= buf_3_load_s_reg_957_pp0_iter4_reg;
                buf_3_load_s_reg_957_pp0_iter6_reg <= buf_3_load_s_reg_957_pp0_iter5_reg;
                buf_3_load_s_reg_957_pp0_iter7_reg <= buf_3_load_s_reg_957_pp0_iter6_reg;
                buf_3_load_s_reg_957_pp0_iter8_reg <= buf_3_load_s_reg_957_pp0_iter7_reg;
                buf_3_load_s_reg_957_pp0_iter9_reg <= buf_3_load_s_reg_957_pp0_iter8_reg;
                or_cond2_reg_909_pp0_iter10_reg <= or_cond2_reg_909_pp0_iter9_reg;
                or_cond2_reg_909_pp0_iter11_reg <= or_cond2_reg_909_pp0_iter10_reg;
                or_cond2_reg_909_pp0_iter12_reg <= or_cond2_reg_909_pp0_iter11_reg;
                or_cond2_reg_909_pp0_iter13_reg <= or_cond2_reg_909_pp0_iter12_reg;
                or_cond2_reg_909_pp0_iter14_reg <= or_cond2_reg_909_pp0_iter13_reg;
                or_cond2_reg_909_pp0_iter15_reg <= or_cond2_reg_909_pp0_iter14_reg;
                or_cond2_reg_909_pp0_iter16_reg <= or_cond2_reg_909_pp0_iter15_reg;
                or_cond2_reg_909_pp0_iter17_reg <= or_cond2_reg_909_pp0_iter16_reg;
                or_cond2_reg_909_pp0_iter18_reg <= or_cond2_reg_909_pp0_iter17_reg;
                or_cond2_reg_909_pp0_iter19_reg <= or_cond2_reg_909_pp0_iter18_reg;
                or_cond2_reg_909_pp0_iter20_reg <= or_cond2_reg_909_pp0_iter19_reg;
                or_cond2_reg_909_pp0_iter21_reg <= or_cond2_reg_909_pp0_iter20_reg;
                or_cond2_reg_909_pp0_iter22_reg <= or_cond2_reg_909_pp0_iter21_reg;
                or_cond2_reg_909_pp0_iter23_reg <= or_cond2_reg_909_pp0_iter22_reg;
                or_cond2_reg_909_pp0_iter24_reg <= or_cond2_reg_909_pp0_iter23_reg;
                or_cond2_reg_909_pp0_iter25_reg <= or_cond2_reg_909_pp0_iter24_reg;
                or_cond2_reg_909_pp0_iter26_reg <= or_cond2_reg_909_pp0_iter25_reg;
                or_cond2_reg_909_pp0_iter27_reg <= or_cond2_reg_909_pp0_iter26_reg;
                or_cond2_reg_909_pp0_iter28_reg <= or_cond2_reg_909_pp0_iter27_reg;
                or_cond2_reg_909_pp0_iter29_reg <= or_cond2_reg_909_pp0_iter28_reg;
                or_cond2_reg_909_pp0_iter2_reg <= or_cond2_reg_909_pp0_iter1_reg;
                or_cond2_reg_909_pp0_iter3_reg <= or_cond2_reg_909_pp0_iter2_reg;
                or_cond2_reg_909_pp0_iter4_reg <= or_cond2_reg_909_pp0_iter3_reg;
                or_cond2_reg_909_pp0_iter5_reg <= or_cond2_reg_909_pp0_iter4_reg;
                or_cond2_reg_909_pp0_iter6_reg <= or_cond2_reg_909_pp0_iter5_reg;
                or_cond2_reg_909_pp0_iter7_reg <= or_cond2_reg_909_pp0_iter6_reg;
                or_cond2_reg_909_pp0_iter8_reg <= or_cond2_reg_909_pp0_iter7_reg;
                or_cond2_reg_909_pp0_iter9_reg <= or_cond2_reg_909_pp0_iter8_reg;
                or_cond3_reg_913_pp0_iter10_reg <= or_cond3_reg_913_pp0_iter9_reg;
                or_cond3_reg_913_pp0_iter11_reg <= or_cond3_reg_913_pp0_iter10_reg;
                or_cond3_reg_913_pp0_iter12_reg <= or_cond3_reg_913_pp0_iter11_reg;
                or_cond3_reg_913_pp0_iter13_reg <= or_cond3_reg_913_pp0_iter12_reg;
                or_cond3_reg_913_pp0_iter14_reg <= or_cond3_reg_913_pp0_iter13_reg;
                or_cond3_reg_913_pp0_iter15_reg <= or_cond3_reg_913_pp0_iter14_reg;
                or_cond3_reg_913_pp0_iter16_reg <= or_cond3_reg_913_pp0_iter15_reg;
                or_cond3_reg_913_pp0_iter17_reg <= or_cond3_reg_913_pp0_iter16_reg;
                or_cond3_reg_913_pp0_iter18_reg <= or_cond3_reg_913_pp0_iter17_reg;
                or_cond3_reg_913_pp0_iter19_reg <= or_cond3_reg_913_pp0_iter18_reg;
                or_cond3_reg_913_pp0_iter20_reg <= or_cond3_reg_913_pp0_iter19_reg;
                or_cond3_reg_913_pp0_iter21_reg <= or_cond3_reg_913_pp0_iter20_reg;
                or_cond3_reg_913_pp0_iter22_reg <= or_cond3_reg_913_pp0_iter21_reg;
                or_cond3_reg_913_pp0_iter23_reg <= or_cond3_reg_913_pp0_iter22_reg;
                or_cond3_reg_913_pp0_iter24_reg <= or_cond3_reg_913_pp0_iter23_reg;
                or_cond3_reg_913_pp0_iter25_reg <= or_cond3_reg_913_pp0_iter24_reg;
                or_cond3_reg_913_pp0_iter26_reg <= or_cond3_reg_913_pp0_iter25_reg;
                or_cond3_reg_913_pp0_iter27_reg <= or_cond3_reg_913_pp0_iter26_reg;
                or_cond3_reg_913_pp0_iter28_reg <= or_cond3_reg_913_pp0_iter27_reg;
                or_cond3_reg_913_pp0_iter29_reg <= or_cond3_reg_913_pp0_iter28_reg;
                or_cond3_reg_913_pp0_iter2_reg <= or_cond3_reg_913_pp0_iter1_reg;
                or_cond3_reg_913_pp0_iter3_reg <= or_cond3_reg_913_pp0_iter2_reg;
                or_cond3_reg_913_pp0_iter4_reg <= or_cond3_reg_913_pp0_iter3_reg;
                or_cond3_reg_913_pp0_iter5_reg <= or_cond3_reg_913_pp0_iter4_reg;
                or_cond3_reg_913_pp0_iter6_reg <= or_cond3_reg_913_pp0_iter5_reg;
                or_cond3_reg_913_pp0_iter7_reg <= or_cond3_reg_913_pp0_iter6_reg;
                or_cond3_reg_913_pp0_iter8_reg <= or_cond3_reg_913_pp0_iter7_reg;
                or_cond3_reg_913_pp0_iter9_reg <= or_cond3_reg_913_pp0_iter8_reg;
                window_val_load_10_reg_972 <= window_val_load_1_4_2_fu_134;
                window_val_load_10_reg_972_pp0_iter10_reg <= window_val_load_10_reg_972_pp0_iter9_reg;
                window_val_load_10_reg_972_pp0_iter11_reg <= window_val_load_10_reg_972_pp0_iter10_reg;
                window_val_load_10_reg_972_pp0_iter12_reg <= window_val_load_10_reg_972_pp0_iter11_reg;
                window_val_load_10_reg_972_pp0_iter13_reg <= window_val_load_10_reg_972_pp0_iter12_reg;
                window_val_load_10_reg_972_pp0_iter14_reg <= window_val_load_10_reg_972_pp0_iter13_reg;
                window_val_load_10_reg_972_pp0_iter15_reg <= window_val_load_10_reg_972_pp0_iter14_reg;
                window_val_load_10_reg_972_pp0_iter16_reg <= window_val_load_10_reg_972_pp0_iter15_reg;
                window_val_load_10_reg_972_pp0_iter3_reg <= window_val_load_10_reg_972;
                window_val_load_10_reg_972_pp0_iter4_reg <= window_val_load_10_reg_972_pp0_iter3_reg;
                window_val_load_10_reg_972_pp0_iter5_reg <= window_val_load_10_reg_972_pp0_iter4_reg;
                window_val_load_10_reg_972_pp0_iter6_reg <= window_val_load_10_reg_972_pp0_iter5_reg;
                window_val_load_10_reg_972_pp0_iter7_reg <= window_val_load_10_reg_972_pp0_iter6_reg;
                window_val_load_10_reg_972_pp0_iter8_reg <= window_val_load_10_reg_972_pp0_iter7_reg;
                window_val_load_10_reg_972_pp0_iter9_reg <= window_val_load_10_reg_972_pp0_iter8_reg;
                window_val_load_12_reg_952_pp0_iter2_reg <= window_val_load_12_reg_952;
                window_val_load_12_reg_952_pp0_iter3_reg <= window_val_load_12_reg_952_pp0_iter2_reg;
                window_val_load_12_reg_952_pp0_iter4_reg <= window_val_load_12_reg_952_pp0_iter3_reg;
                window_val_load_12_reg_952_pp0_iter5_reg <= window_val_load_12_reg_952_pp0_iter4_reg;
                window_val_load_12_reg_952_pp0_iter6_reg <= window_val_load_12_reg_952_pp0_iter5_reg;
                window_val_load_12_reg_952_pp0_iter7_reg <= window_val_load_12_reg_952_pp0_iter6_reg;
                window_val_load_12_reg_952_pp0_iter8_reg <= window_val_load_12_reg_952_pp0_iter7_reg;
                window_val_load_12_reg_952_pp0_iter9_reg <= window_val_load_12_reg_952_pp0_iter8_reg;
                window_val_load_6_reg_937_pp0_iter2_reg <= window_val_load_6_reg_937;
                window_val_load_6_reg_937_pp0_iter3_reg <= window_val_load_6_reg_937_pp0_iter2_reg;
                window_val_load_6_reg_937_pp0_iter4_reg <= window_val_load_6_reg_937_pp0_iter3_reg;
                window_val_load_6_reg_937_pp0_iter5_reg <= window_val_load_6_reg_937_pp0_iter4_reg;
                window_val_load_8_reg_967 <= window_val_load_1_3_2_fu_126;
                window_val_load_8_reg_967_pp0_iter3_reg <= window_val_load_8_reg_967;
                window_val_load_8_reg_967_pp0_iter4_reg <= window_val_load_8_reg_967_pp0_iter3_reg;
                window_val_load_8_reg_967_pp0_iter5_reg <= window_val_load_8_reg_967_pp0_iter4_reg;
                window_val_load_8_reg_967_pp0_iter6_reg <= window_val_load_8_reg_967_pp0_iter5_reg;
                window_val_load_8_reg_967_pp0_iter7_reg <= window_val_load_8_reg_967_pp0_iter6_reg;
                window_val_load_8_reg_967_pp0_iter8_reg <= window_val_load_8_reg_967_pp0_iter7_reg;
                window_val_load_8_reg_967_pp0_iter9_reg <= window_val_load_8_reg_967_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_4_addr_reg_889_pp0_iter1_reg <= buf_4_addr_reg_889;
                exitcond_flatten_reg_857 <= exitcond_flatten_fu_381_p2;
                exitcond_flatten_reg_857_pp0_iter1_reg <= exitcond_flatten_reg_857;
                or_cond2_reg_909_pp0_iter1_reg <= or_cond2_reg_909;
                or_cond3_reg_913_pp0_iter1_reg <= or_cond3_reg_913;
                or_cond_reg_900_pp0_iter1_reg <= or_cond_reg_900;
                tmp_80_reg_895_pp0_iter1_reg <= tmp_80_reg_895;
                window_val_load_5_reg_932 <= window_val_load_1_2_1_fu_114;
                window_val_load_6_reg_937 <= window_val_load_1_2_2_fu_118;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_fu_555_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_381_p2 = ap_const_lv1_0))) then
                or_cond3_reg_913 <= or_cond3_fu_577_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter3_reg = ap_const_lv1_1))) then
                tmp_100_1_reg_987 <= grp_fu_314_p2;
                tmp_101_1_reg_992 <= grp_fu_319_p2;
                x_grad_1_reg_977 <= grp_fu_272_p2;
                y_grad_1_reg_982 <= grp_fu_277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter7_reg = ap_const_lv1_1))) then
                tmp_100_2_reg_1007 <= grp_fu_324_p2;
                x_grad_1_1_reg_997 <= grp_fu_282_p2;
                y_grad_1_1_reg_1002 <= grp_fu_286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter11_reg = ap_const_lv1_1))) then
                tmp_100_3_reg_1023 <= grp_fu_329_p2;
                tmp_101_3_reg_1028 <= grp_fu_334_p2;
                x_grad_1_2_reg_1013 <= grp_fu_290_p2;
                y_grad_1_2_reg_1018 <= grp_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter28_reg = ap_const_lv1_1))) then
                tmp_29_reg_1063 <= grp_fu_339_p2;
                tmp_32_reg_1068 <= grp_fu_344_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                window_val_load_1_0_2_fu_94 <= window_val_load_1_0_3_fu_98;
                window_val_load_1_2_1_fu_114 <= window_val_load_1_2_2_fu_118;
                window_val_load_1_2_2_fu_118 <= window_val_load_1_2_3_fu_122;
                window_val_load_1_2_fu_110 <= window_val_load_1_2_1_fu_114;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                window_val_load_1_1_2_fu_102 <= window_val_load_1_1_3_fu_106;
                window_val_load_1_3_2_fu_126 <= window_val_load_1_3_3_fu_130;
                window_val_load_1_4_2_fu_134 <= window_val_load_1_4_3_fu_138;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_857_pp0_iter1_reg = ap_const_lv1_0))) then
                window_val_load_1_1_3_fu_106 <= buf_2_load_s_fu_726_p3;
                window_val_load_1_3_3_fu_130 <= buf_4_load_s_fu_720_p3;
                window_val_load_1_4_3_fu_138 <= smallbuf_load_2_s_fu_713_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter15_reg = ap_const_lv1_1))) then
                x_grad_1_3_reg_1033 <= grp_fu_298_p2;
                y_grad_1_3_reg_1038 <= grp_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter19_reg = ap_const_lv1_1))) then
                x_grad_1_4_reg_1053 <= grp_fu_306_p2;
                y_grad_1_4_reg_1058 <= grp_fu_310_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter29)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state33 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(frame3_a_empty_n, gradient_x_full_n, gradient_y_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op120_read_state3, ap_predicate_op240_write_state32)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (((gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_y_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)) or ((gradient_x_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)))) or ((frame3_a_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op120_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(frame3_a_empty_n, gradient_x_full_n, gradient_y_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op120_read_state3, ap_predicate_op240_write_state32)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (((gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_y_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)) or ((gradient_x_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)))) or ((frame3_a_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op120_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(frame3_a_empty_n, gradient_x_full_n, gradient_y_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op120_read_state3, ap_predicate_op240_write_state32)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (((gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_y_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)) or ((gradient_x_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)))) or ((frame3_a_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op120_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state32_pp0_stage0_iter30_assign_proc : process(gradient_x_full_n, gradient_y_full_n, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op240_write_state32)
    begin
                ap_block_state32_pp0_stage0_iter30 <= (((gradient_y_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_x_full_n = ap_const_logic_0) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((gradient_y_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)) or ((gradient_x_full_n = ap_const_logic_0) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(frame3_a_empty_n, ap_predicate_op120_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((frame3_a_empty_n = ap_const_logic_0) and (ap_predicate_op120_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_342_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_342 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter2_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29)
    begin
        if (((ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op120_read_state3_assign_proc : process(exitcond_flatten_reg_857, or_cond_reg_900)
    begin
                ap_predicate_op120_read_state3 <= ((or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0));
    end process;


    ap_predicate_op240_write_state32_assign_proc : process(or_cond2_reg_909_pp0_iter29_reg, or_cond3_reg_913_pp0_iter29_reg)
    begin
                ap_predicate_op240_write_state32 <= ((or_cond3_reg_913_pp0_iter29_reg = ap_const_lv1_1) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    buf_1_address0 <= tmp_26_fu_505_p1(10 - 1 downto 0);

    buf_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_1_ce0 <= ap_const_logic_1;
        else 
            buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_857, or_cond_reg_900, ap_block_pp0_stage0_11001, tmp_80_reg_895)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_80_reg_895 = ap_const_lv1_0) and (or_cond_reg_900 = ap_const_lv1_0) and (exitcond_flatten_reg_857 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0)))) then 
            buf_1_ce1 <= ap_const_logic_1;
        else 
            buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_load_s_fu_659_p3 <= 
        buf_1_q0 when (or_cond_reg_900(0) = '1') else 
        ap_const_lv32_0;

    buf_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_857, or_cond_reg_900, ap_block_pp0_stage0_11001, tmp_80_reg_895)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_80_reg_895 = ap_const_lv1_0) and (or_cond_reg_900 = ap_const_lv1_0) and (exitcond_flatten_reg_857 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0)))) then 
            buf_1_we1 <= ap_const_logic_1;
        else 
            buf_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_address0 <= tmp_26_fu_505_p1(10 - 1 downto 0);

    buf_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_2_ce0 <= ap_const_logic_1;
        else 
            buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_857, or_cond_reg_900, ap_block_pp0_stage0_11001, tmp_80_reg_895)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_80_reg_895 = ap_const_lv1_0) and (or_cond_reg_900 = ap_const_lv1_0) and (exitcond_flatten_reg_857 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0)))) then 
            buf_2_ce1 <= ap_const_logic_1;
        else 
            buf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_load_s_fu_726_p3 <= 
        buf_2_load_reg_942 when (or_cond_reg_900_pp0_iter1_reg(0) = '1') else 
        ap_const_lv32_0;

    buf_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_857, or_cond_reg_900, ap_block_pp0_stage0_11001, tmp_80_reg_895)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_80_reg_895 = ap_const_lv1_0) and (or_cond_reg_900 = ap_const_lv1_0) and (exitcond_flatten_reg_857 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0)))) then 
            buf_2_we1 <= ap_const_logic_1;
        else 
            buf_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_3_address0 <= tmp_26_fu_505_p1(10 - 1 downto 0);

    buf_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_3_ce0 <= ap_const_logic_1;
        else 
            buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_857, or_cond_reg_900, ap_block_pp0_stage0_11001, tmp_80_reg_895)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_80_reg_895 = ap_const_lv1_0) and (or_cond_reg_900 = ap_const_lv1_0) and (exitcond_flatten_reg_857 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0)))) then 
            buf_3_ce1 <= ap_const_logic_1;
        else 
            buf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_3_load_s_fu_652_p3 <= 
        buf_3_q0 when (or_cond_reg_900(0) = '1') else 
        ap_const_lv32_0;

    buf_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_857, or_cond_reg_900, ap_block_pp0_stage0_11001, tmp_80_reg_895)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_80_reg_895 = ap_const_lv1_0) and (or_cond_reg_900 = ap_const_lv1_0) and (exitcond_flatten_reg_857 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0)))) then 
            buf_3_we1 <= ap_const_logic_1;
        else 
            buf_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_4_address0 <= tmp_26_fu_505_p1(10 - 1 downto 0);

    buf_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_4_ce0 <= ap_const_logic_1;
        else 
            buf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_857_pp0_iter1_reg, tmp_80_reg_895_pp0_iter1_reg, or_cond_reg_900_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_flatten_reg_857_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900_pp0_iter1_reg = ap_const_lv1_0) and (tmp_80_reg_895_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_flatten_reg_857_pp0_iter1_reg = ap_const_lv1_0)))) then 
            buf_4_ce1 <= ap_const_logic_1;
        else 
            buf_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_4_load_s_fu_720_p3 <= 
        buf_4_load_reg_947 when (or_cond_reg_900_pp0_iter1_reg(0) = '1') else 
        ap_const_lv32_0;

    buf_4_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_857_pp0_iter1_reg, tmp_80_reg_895_pp0_iter1_reg, or_cond_reg_900_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_flatten_reg_857_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_900_pp0_iter1_reg = ap_const_lv1_0) and (tmp_80_reg_895_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_flatten_reg_857_pp0_iter1_reg = ap_const_lv1_0)))) then 
            buf_4_we1 <= ap_const_logic_1;
        else 
            buf_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    c_2_fu_583_p2 <= std_logic_vector(unsigned(c_mid2_fu_399_p3) + unsigned(ap_const_lv11_1));
    c_mid2_fu_399_p3 <= 
        ap_const_lv11_0 when (exitcond_fu_393_p2(0) = '1') else 
        c_reg_261;
    exitcond_flatten_fu_381_p2 <= "1" when (indvar_flatten_reg_239 = ap_const_lv19_6DB6C) else "0";
    exitcond_fu_393_p2 <= "1" when (c_reg_261 = ap_const_lv11_402) else "0";

    frame3_a_blk_n_assign_proc : process(frame3_a_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_857, or_cond_reg_900)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_reg_900 = ap_const_lv1_1) and (exitcond_flatten_reg_857 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame3_a_blk_n <= frame3_a_empty_n;
        else 
            frame3_a_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    frame3_a_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op120_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op120_read_state3 = ap_const_boolean_1))) then 
            frame3_a_read <= ap_const_logic_1;
        else 
            frame3_a_read <= ap_const_logic_0;
        end if; 
    end process;


    gradient_x_blk_n_assign_proc : process(gradient_x_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, or_cond3_reg_913_pp0_iter29_reg)
    begin
        if ((((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (or_cond3_reg_913_pp0_iter29_reg = ap_const_lv1_1) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gradient_x_blk_n <= gradient_x_full_n;
        else 
            gradient_x_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_x_din_assign_proc : process(ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op240_write_state32, tmp_29_reg_1063, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))) then
            if ((or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)) then 
                gradient_x_din <= tmp_29_reg_1063;
            elsif ((ap_predicate_op240_write_state32 = ap_const_boolean_1)) then 
                gradient_x_din <= ap_const_lv32_0;
            else 
                gradient_x_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gradient_x_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gradient_x_write_assign_proc : process(ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op240_write_state32, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)))) then 
            gradient_x_write <= ap_const_logic_1;
        else 
            gradient_x_write <= ap_const_logic_0;
        end if; 
    end process;


    gradient_y_blk_n_assign_proc : process(gradient_y_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, or_cond3_reg_913_pp0_iter29_reg)
    begin
        if ((((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (or_cond3_reg_913_pp0_iter29_reg = ap_const_lv1_1) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gradient_y_blk_n <= gradient_y_full_n;
        else 
            gradient_y_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_y_din_assign_proc : process(ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op240_write_state32, tmp_32_reg_1068, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))) then
            if ((or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)) then 
                gradient_y_din <= tmp_32_reg_1068;
            elsif ((ap_predicate_op240_write_state32 = ap_const_boolean_1)) then 
                gradient_y_din <= ap_const_lv32_0;
            else 
                gradient_y_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gradient_y_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gradient_y_write_assign_proc : process(ap_enable_reg_pp0_iter30, or_cond2_reg_909_pp0_iter29_reg, ap_predicate_op240_write_state32, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op240_write_state32 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond2_reg_909_pp0_iter29_reg = ap_const_lv1_1)))) then 
            gradient_y_write <= ap_const_logic_1;
        else 
            gradient_y_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_272_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_272_ce <= ap_const_logic_1;
        else 
            grp_fu_272_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_277_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_277_ce <= ap_const_logic_1;
        else 
            grp_fu_277_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_282_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_282_ce <= ap_const_logic_1;
        else 
            grp_fu_282_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_286_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_286_ce <= ap_const_logic_1;
        else 
            grp_fu_286_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_290_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_290_ce <= ap_const_logic_1;
        else 
            grp_fu_290_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_294_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_294_ce <= ap_const_logic_1;
        else 
            grp_fu_294_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_298_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_298_ce <= ap_const_logic_1;
        else 
            grp_fu_298_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_302_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_302_ce <= ap_const_logic_1;
        else 
            grp_fu_302_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_306_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_306_ce <= ap_const_logic_1;
        else 
            grp_fu_306_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_306_p1 <= tmp_100_4_neg_fu_750_p2;

    grp_fu_310_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_310_ce <= ap_const_logic_1;
        else 
            grp_fu_310_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_310_p1 <= tmp_101_4_neg_fu_764_p2;

    grp_fu_314_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_314_ce <= ap_const_logic_1;
        else 
            grp_fu_314_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_319_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_319_ce <= ap_const_logic_1;
        else 
            grp_fu_319_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_324_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_324_ce <= ap_const_logic_1;
        else 
            grp_fu_324_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_329_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_329_ce <= ap_const_logic_1;
        else 
            grp_fu_329_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_334_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_334_ce <= ap_const_logic_1;
        else 
            grp_fu_334_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_339_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_339_ce <= ap_const_logic_1;
        else 
            grp_fu_339_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_344_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_344_ce <= ap_const_logic_1;
        else 
            grp_fu_344_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp2_fu_437_p2 <= "0" when (tmp_77_fu_427_p4 = ap_const_lv7_0) else "1";
    icmp3_fu_453_p2 <= "0" when (tmp_78_fu_443_p4 = ap_const_lv8_0) else "1";
    icmp4_fu_469_p2 <= "0" when (tmp_79_fu_459_p4 = ap_const_lv8_0) else "1";
    icmp5_fu_543_p2 <= "0" when (tmp_81_fu_533_p4 = ap_const_lv9_0) else "1";
    icmp6_fu_571_p2 <= "0" when (tmp_82_fu_561_p4 = ap_const_lv10_0) else "1";
    icmp_fu_369_p2 <= "0" when (tmp_76_fu_359_p4 = ap_const_lv7_0) else "1";
    indvar_flatten_next_fu_387_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_239) + unsigned(ap_const_lv19_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_cond2_fu_555_p2 <= (tmp2_fu_549_p2 and tmp1_mid2_fu_489_p3);
    or_cond3_fu_577_p2 <= (tmp_23_mid2_fu_475_p3 and icmp6_fu_571_p2);
    or_cond_fu_527_p2 <= (tmp_mid2_fu_419_p3 and rev_fu_521_p2);
    p_smallbuf_load_fu_632_p3 <= 
        smallbuf_load1_fu_142 when (tmp_80_reg_895(0) = '1') else 
        ap_const_lv32_0;
    r_mid2_fu_497_p3 <= 
        r_s_fu_407_p2 when (exitcond_fu_393_p2(0) = '1') else 
        r_reg_250;
    r_s_fu_407_p2 <= std_logic_vector(unsigned(r_reg_250) + unsigned(ap_const_lv9_1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev_fu_521_p2 <= (tmp_80_fu_513_p3 xor ap_const_lv1_1);
    smallbuf_load_2_s_fu_713_p3 <= 
        smallbuf_load1_fu_142 when (or_cond_reg_900_pp0_iter1_reg(0) = '1') else 
        ap_const_lv32_0;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_375_p2 <= (tmp_fu_353_p2 and icmp_fu_369_p2);
    tmp1_mid1_fu_483_p2 <= (tmp_mid1_fu_413_p2 and icmp2_fu_437_p2);
    tmp1_mid2_fu_489_p3 <= 
        tmp1_mid1_fu_483_p2 when (exitcond_fu_393_p2(0) = '1') else 
        tmp1_fu_375_p2;
    tmp2_fu_549_p2 <= (rev_fu_521_p2 and icmp5_fu_543_p2);
    tmp_100_4_neg_fu_750_p2 <= (tmp_100_4_to_int_fu_747_p1 xor ap_const_lv32_80000000);
    tmp_100_4_to_int_fu_747_p1 <= buf_3_load_s_reg_957_pp0_iter16_reg;
    tmp_101_4_neg_fu_764_p2 <= (tmp_101_4_to_int_fu_761_p1 xor ap_const_lv32_80000000);
    tmp_101_4_to_int_fu_761_p1 <= window_val_load_10_reg_972_pp0_iter16_reg;
    tmp_23_mid2_fu_475_p3 <= 
        icmp3_fu_453_p2 when (exitcond_fu_393_p2(0) = '1') else 
        icmp4_fu_469_p2;
    tmp_26_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_mid2_fu_399_p3),64));
    tmp_76_fu_359_p4 <= r_reg_250(8 downto 2);
    tmp_77_fu_427_p4 <= r_s_fu_407_p2(8 downto 2);
    tmp_78_fu_443_p4 <= r_s_fu_407_p2(8 downto 1);
    tmp_79_fu_459_p4 <= r_reg_250(8 downto 1);
    tmp_80_fu_513_p3 <= c_mid2_fu_399_p3(10 downto 10);
    tmp_81_fu_533_p4 <= c_mid2_fu_399_p3(10 downto 2);
    tmp_82_fu_561_p4 <= c_mid2_fu_399_p3(10 downto 1);
    tmp_fu_353_p2 <= "1" when (unsigned(r_reg_250) < unsigned(ap_const_lv9_1B4)) else "0";
    tmp_mid1_fu_413_p2 <= "1" when (unsigned(r_s_fu_407_p2) < unsigned(ap_const_lv9_1B4)) else "0";
    tmp_mid2_fu_419_p3 <= 
        tmp_mid1_fu_413_p2 when (exitcond_fu_393_p2(0) = '1') else 
        tmp_fu_353_p2;
end behav;
