// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_flow_calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        outputs_din,
        outputs_full_n,
        outputs_write,
        tensor_val_dout,
        tensor_val_empty_n,
        tensor_val_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state21 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] outputs_din;
input   outputs_full_n;
output   outputs_write;
input  [191:0] tensor_val_dout;
input   tensor_val_empty_n;
output   tensor_val_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outputs_write;
reg tensor_val_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    outputs_blk_n;
reg    ap_enable_reg_pp0_iter18;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_428;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter17_reg;
reg    tensor_val_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] or_cond3_reg_442;
reg   [18:0] indvar_flatten_reg_97;
reg   [8:0] r_reg_108;
reg   [10:0] c_reg_119;
wire   [0:0] exitcond_flatten_fu_224_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op51_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
reg    ap_block_state20_pp0_stage0_iter18;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter5_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter6_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter7_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter8_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter9_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter10_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter11_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter12_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter13_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter14_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter15_reg;
reg   [0:0] exitcond_flatten_reg_428_pp0_iter16_reg;
wire   [18:0] indvar_flatten_next_fu_230_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [8:0] r_mid2_fu_292_p3;
wire   [0:0] or_cond3_fu_328_p2;
reg   [0:0] or_cond3_reg_442_pp0_iter1_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter2_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter3_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter4_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter5_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter6_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter7_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter8_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter9_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter10_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter11_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter12_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter13_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter14_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter15_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter16_reg;
reg   [0:0] or_cond3_reg_442_pp0_iter17_reg;
wire   [10:0] c_4_fu_334_p2;
wire   [31:0] tmp_95_fu_340_p1;
reg   [31:0] tmp_95_reg_451;
reg   [31:0] tmp_83_reg_456;
reg   [31:0] tmp_85_reg_461;
reg   [31:0] tmp_87_reg_466;
reg   [31:0] tmp_89_reg_471;
wire   [31:0] tmp_82_fu_384_p1;
wire   [31:0] tmp_84_fu_389_p1;
wire   [31:0] tmp_86_fu_394_p1;
wire   [31:0] tmp_88_fu_401_p1;
wire   [31:0] tmp_90_fu_406_p1;
wire   [31:0] grp_fu_164_p2;
reg   [31:0] tmp_54_reg_508;
wire   [31:0] grp_fu_168_p2;
reg   [31:0] tmp_55_reg_513;
wire   [31:0] grp_fu_172_p2;
reg   [31:0] tmp_56_reg_518;
wire   [31:0] grp_fu_176_p2;
reg   [31:0] tmp_57_reg_523;
wire   [31:0] grp_fu_180_p2;
reg   [31:0] tmp_60_reg_528;
wire   [31:0] grp_fu_184_p2;
reg   [31:0] tmp_61_reg_533;
wire   [31:0] grp_fu_152_p2;
reg   [31:0] denom_reg_538;
wire   [31:0] grp_fu_156_p2;
reg   [31:0] tmp_58_reg_544;
wire   [31:0] grp_fu_160_p2;
reg   [31:0] tmp_62_reg_549;
wire   [31:0] grp_fu_188_p2;
reg   [31:0] tmp_59_reg_554;
wire   [31:0] grp_fu_192_p2;
reg   [31:0] tmp_63_reg_559;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg   [31:0] ap_phi_mux_buf_1_load_phi_fu_134_p4;
reg   [31:0] ap_phi_reg_pp0_iter18_buf_1_load_reg_130;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter2_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter3_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter4_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter5_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter6_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter7_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter8_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter9_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter10_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter11_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter12_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter13_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter14_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter15_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter16_buf_1_load_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter17_buf_1_load_reg_130;
reg   [31:0] ap_phi_mux_tmp_64_phi_fu_145_p4;
reg   [31:0] ap_phi_reg_pp0_iter18_tmp_64_reg_141;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter2_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter3_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter4_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter5_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter6_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter7_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter8_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter9_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter10_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter11_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter12_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter13_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter14_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter15_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter16_tmp_64_reg_141;
reg   [31:0] ap_phi_reg_pp0_iter17_tmp_64_reg_141;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_fu_196_p4;
wire   [0:0] icmp_fu_206_p2;
wire   [0:0] tmp_s_fu_212_p2;
wire   [0:0] exitcond7_fu_236_p2;
wire   [8:0] r_s_fu_250_p2;
wire   [7:0] tmp_93_fu_256_p4;
wire   [0:0] icmp8_fu_266_p2;
wire   [0:0] tmp_mid1_fu_272_p2;
wire   [0:0] tmp1_mid1_fu_278_p2;
wire   [0:0] tmp1_fu_218_p2;
wire   [10:0] c_mid2_fu_242_p3;
wire   [9:0] tmp_94_fu_300_p4;
wire   [0:0] icmp9_fu_310_p2;
wire   [0:0] tmp_52_fu_316_p2;
wire   [0:0] tmp2_fu_322_p2;
wire   [0:0] tmp1_mid2_fu_284_p3;
wire   [31:0] buf_1_load_toint_fu_415_p1;
wire   [31:0] tmp_162_toint_fu_411_p1;
reg    grp_fu_152_ce;
reg    grp_fu_156_ce;
reg    grp_fu_160_ce;
reg    grp_fu_164_ce;
reg    grp_fu_168_ce;
reg    grp_fu_172_ce;
reg    grp_fu_176_ce;
reg    grp_fu_180_ce;
reg    grp_fu_184_ce;
reg    grp_fu_188_ce;
reg    grp_fu_192_ce;
wire    ap_CS_fsm_state21;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_127;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
end

a0_optical_flow_fsubDeQ #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fsubDeQ_U241(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_54_reg_508),
    .din1(tmp_55_reg_513),
    .ce(grp_fu_152_ce),
    .dout(grp_fu_152_p2)
);

a0_optical_flow_fsubDeQ #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fsubDeQ_U242(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_56_reg_518),
    .din1(tmp_57_reg_523),
    .ce(grp_fu_156_ce),
    .dout(grp_fu_156_p2)
);

a0_optical_flow_fsubDeQ #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fsubDeQ_U243(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_60_reg_528),
    .din1(tmp_61_reg_533),
    .ce(grp_fu_160_ce),
    .dout(grp_fu_160_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U244(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_82_fu_384_p1),
    .din1(tmp_84_fu_389_p1),
    .ce(grp_fu_164_ce),
    .dout(grp_fu_164_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U245(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_86_fu_394_p1),
    .din1(tmp_86_fu_394_p1),
    .ce(grp_fu_168_ce),
    .dout(grp_fu_168_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U246(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_88_fu_401_p1),
    .din1(tmp_86_fu_394_p1),
    .ce(grp_fu_172_ce),
    .dout(grp_fu_172_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U247(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_90_fu_406_p1),
    .din1(tmp_84_fu_389_p1),
    .ce(grp_fu_176_ce),
    .dout(grp_fu_176_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U248(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_90_fu_406_p1),
    .din1(tmp_86_fu_394_p1),
    .ce(grp_fu_180_ce),
    .dout(grp_fu_180_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U249(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_88_fu_401_p1),
    .din1(tmp_82_fu_384_p1),
    .ce(grp_fu_184_ce),
    .dout(grp_fu_184_p2)
);

a0_optical_flow_fdivbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fdivbkb_U250(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_58_reg_544),
    .din1(denom_reg_538),
    .ce(grp_fu_188_ce),
    .dout(grp_fu_188_p2)
);

a0_optical_flow_fdivbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fdivbkb_U251(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_62_reg_549),
    .din1(denom_reg_538),
    .ce(grp_fu_192_ce),
    .dout(grp_fu_192_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if (((exitcond_flatten_fu_224_p2 == 1'd0) & (or_cond3_fu_328_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_1_load_reg_130 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter0_buf_1_load_reg_130;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_127)) begin
        if (((exitcond_flatten_fu_224_p2 == 1'd0) & (or_cond3_fu_328_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_64_reg_141 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_64_reg_141 <= ap_phi_reg_pp0_iter0_tmp_64_reg_141;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_reg_119 <= c_4_fu_334_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_119 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_97 <= indvar_flatten_next_fu_230_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_97 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_reg_108 <= r_mid2_fu_292_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_reg_108 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter9_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter10_tmp_64_reg_141 <= ap_phi_reg_pp0_iter9_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter10_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter11_tmp_64_reg_141 <= ap_phi_reg_pp0_iter10_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter11_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter12_tmp_64_reg_141 <= ap_phi_reg_pp0_iter11_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter12_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter13_tmp_64_reg_141 <= ap_phi_reg_pp0_iter12_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter13_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter14_tmp_64_reg_141 <= ap_phi_reg_pp0_iter13_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter14_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter15_tmp_64_reg_141 <= ap_phi_reg_pp0_iter14_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter15_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter16_tmp_64_reg_141 <= ap_phi_reg_pp0_iter15_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter16_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter17_tmp_64_reg_141 <= ap_phi_reg_pp0_iter16_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter17_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter18_tmp_64_reg_141 <= ap_phi_reg_pp0_iter17_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter1_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter2_tmp_64_reg_141 <= ap_phi_reg_pp0_iter1_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter2_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter3_tmp_64_reg_141 <= ap_phi_reg_pp0_iter2_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter3_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter4_tmp_64_reg_141 <= ap_phi_reg_pp0_iter3_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter4_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter5_tmp_64_reg_141 <= ap_phi_reg_pp0_iter4_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter5_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter6_tmp_64_reg_141 <= ap_phi_reg_pp0_iter5_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter6_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter7_tmp_64_reg_141 <= ap_phi_reg_pp0_iter6_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter7_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter8_tmp_64_reg_141 <= ap_phi_reg_pp0_iter7_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_buf_1_load_reg_130 <= ap_phi_reg_pp0_iter8_buf_1_load_reg_130;
        ap_phi_reg_pp0_iter9_tmp_64_reg_141 <= ap_phi_reg_pp0_iter8_tmp_64_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_reg_442_pp0_iter7_reg == 1'd1) & (exitcond_flatten_reg_428_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        denom_reg_538 <= grp_fu_152_p2;
        tmp_58_reg_544 <= grp_fu_156_p2;
        tmp_62_reg_549 <= grp_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_428 <= exitcond_flatten_fu_224_p2;
        exitcond_flatten_reg_428_pp0_iter1_reg <= exitcond_flatten_reg_428;
        or_cond3_reg_442_pp0_iter1_reg <= or_cond3_reg_442;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_428_pp0_iter10_reg <= exitcond_flatten_reg_428_pp0_iter9_reg;
        exitcond_flatten_reg_428_pp0_iter11_reg <= exitcond_flatten_reg_428_pp0_iter10_reg;
        exitcond_flatten_reg_428_pp0_iter12_reg <= exitcond_flatten_reg_428_pp0_iter11_reg;
        exitcond_flatten_reg_428_pp0_iter13_reg <= exitcond_flatten_reg_428_pp0_iter12_reg;
        exitcond_flatten_reg_428_pp0_iter14_reg <= exitcond_flatten_reg_428_pp0_iter13_reg;
        exitcond_flatten_reg_428_pp0_iter15_reg <= exitcond_flatten_reg_428_pp0_iter14_reg;
        exitcond_flatten_reg_428_pp0_iter16_reg <= exitcond_flatten_reg_428_pp0_iter15_reg;
        exitcond_flatten_reg_428_pp0_iter17_reg <= exitcond_flatten_reg_428_pp0_iter16_reg;
        exitcond_flatten_reg_428_pp0_iter2_reg <= exitcond_flatten_reg_428_pp0_iter1_reg;
        exitcond_flatten_reg_428_pp0_iter3_reg <= exitcond_flatten_reg_428_pp0_iter2_reg;
        exitcond_flatten_reg_428_pp0_iter4_reg <= exitcond_flatten_reg_428_pp0_iter3_reg;
        exitcond_flatten_reg_428_pp0_iter5_reg <= exitcond_flatten_reg_428_pp0_iter4_reg;
        exitcond_flatten_reg_428_pp0_iter6_reg <= exitcond_flatten_reg_428_pp0_iter5_reg;
        exitcond_flatten_reg_428_pp0_iter7_reg <= exitcond_flatten_reg_428_pp0_iter6_reg;
        exitcond_flatten_reg_428_pp0_iter8_reg <= exitcond_flatten_reg_428_pp0_iter7_reg;
        exitcond_flatten_reg_428_pp0_iter9_reg <= exitcond_flatten_reg_428_pp0_iter8_reg;
        or_cond3_reg_442_pp0_iter10_reg <= or_cond3_reg_442_pp0_iter9_reg;
        or_cond3_reg_442_pp0_iter11_reg <= or_cond3_reg_442_pp0_iter10_reg;
        or_cond3_reg_442_pp0_iter12_reg <= or_cond3_reg_442_pp0_iter11_reg;
        or_cond3_reg_442_pp0_iter13_reg <= or_cond3_reg_442_pp0_iter12_reg;
        or_cond3_reg_442_pp0_iter14_reg <= or_cond3_reg_442_pp0_iter13_reg;
        or_cond3_reg_442_pp0_iter15_reg <= or_cond3_reg_442_pp0_iter14_reg;
        or_cond3_reg_442_pp0_iter16_reg <= or_cond3_reg_442_pp0_iter15_reg;
        or_cond3_reg_442_pp0_iter17_reg <= or_cond3_reg_442_pp0_iter16_reg;
        or_cond3_reg_442_pp0_iter2_reg <= or_cond3_reg_442_pp0_iter1_reg;
        or_cond3_reg_442_pp0_iter3_reg <= or_cond3_reg_442_pp0_iter2_reg;
        or_cond3_reg_442_pp0_iter4_reg <= or_cond3_reg_442_pp0_iter3_reg;
        or_cond3_reg_442_pp0_iter5_reg <= or_cond3_reg_442_pp0_iter4_reg;
        or_cond3_reg_442_pp0_iter6_reg <= or_cond3_reg_442_pp0_iter5_reg;
        or_cond3_reg_442_pp0_iter7_reg <= or_cond3_reg_442_pp0_iter6_reg;
        or_cond3_reg_442_pp0_iter8_reg <= or_cond3_reg_442_pp0_iter7_reg;
        or_cond3_reg_442_pp0_iter9_reg <= or_cond3_reg_442_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_cond3_reg_442 <= or_cond3_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_reg_442_pp0_iter3_reg == 1'd1) & (exitcond_flatten_reg_428_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_54_reg_508 <= grp_fu_164_p2;
        tmp_55_reg_513 <= grp_fu_168_p2;
        tmp_56_reg_518 <= grp_fu_172_p2;
        tmp_57_reg_523 <= grp_fu_176_p2;
        tmp_60_reg_528 <= grp_fu_180_p2;
        tmp_61_reg_533 <= grp_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_reg_442_pp0_iter16_reg == 1'd1) & (exitcond_flatten_reg_428_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_59_reg_554 <= grp_fu_188_p2;
        tmp_63_reg_559 <= grp_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op51_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_83_reg_456 <= {{tensor_val_dout[63:32]}};
        tmp_85_reg_461 <= {{tensor_val_dout[127:96]}};
        tmp_87_reg_466 <= {{tensor_val_dout[191:160]}};
        tmp_89_reg_471 <= {{tensor_val_dout[159:128]}};
        tmp_95_reg_451 <= tmp_95_fu_340_p1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_224_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond3_reg_442_pp0_iter17_reg == 1'd1) & (exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        ap_phi_mux_buf_1_load_phi_fu_134_p4 = tmp_63_reg_559;
    end else begin
        ap_phi_mux_buf_1_load_phi_fu_134_p4 = ap_phi_reg_pp0_iter18_buf_1_load_reg_130;
    end
end

always @ (*) begin
    if (((or_cond3_reg_442_pp0_iter17_reg == 1'd1) & (exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        ap_phi_mux_tmp_64_phi_fu_145_p4 = tmp_59_reg_554;
    end else begin
        ap_phi_mux_tmp_64_phi_fu_145_p4 = ap_phi_reg_pp0_iter18_tmp_64_reg_141;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_152_ce = 1'b1;
    end else begin
        grp_fu_152_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_156_ce = 1'b1;
    end else begin
        grp_fu_156_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_160_ce = 1'b1;
    end else begin
        grp_fu_160_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_164_ce = 1'b1;
    end else begin
        grp_fu_164_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_168_ce = 1'b1;
    end else begin
        grp_fu_168_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_172_ce = 1'b1;
    end else begin
        grp_fu_172_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_176_ce = 1'b1;
    end else begin
        grp_fu_176_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_180_ce = 1'b1;
    end else begin
        grp_fu_180_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_184_ce = 1'b1;
    end else begin
        grp_fu_184_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_188_ce = 1'b1;
    end else begin
        grp_fu_188_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_192_ce = 1'b1;
    end else begin
        grp_fu_192_ce = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter18 == 1'b1))) begin
        outputs_blk_n = outputs_full_n;
    end else begin
        outputs_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outputs_write = 1'b1;
    end else begin
        outputs_write = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond3_reg_442 == 1'd1) & (exitcond_flatten_reg_428 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_val_blk_n = tensor_val_empty_n;
    end else begin
        tensor_val_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op51_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tensor_val_read = 1'b1;
    end else begin
        tensor_val_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_224_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter17 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter17 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1)) | ((exitcond_flatten_fu_224_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tensor_val_empty_n == 1'b0) & (ap_predicate_op51_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (outputs_full_n == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tensor_val_empty_n == 1'b0) & (ap_predicate_op51_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (outputs_full_n == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tensor_val_empty_n == 1'b0) & (ap_predicate_op51_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (outputs_full_n == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage0_iter18 = ((exitcond_flatten_reg_428_pp0_iter17_reg == 1'd0) & (outputs_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((tensor_val_empty_n == 1'b0) & (ap_predicate_op51_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_127 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_buf_1_load_reg_130 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_64_reg_141 = 'bx;

always @ (*) begin
    ap_predicate_op51_read_state3 = ((or_cond3_reg_442 == 1'd1) & (exitcond_flatten_reg_428 == 1'd0));
end

assign buf_1_load_toint_fu_415_p1 = ap_phi_mux_buf_1_load_phi_fu_134_p4;

assign c_4_fu_334_p2 = (c_mid2_fu_242_p3 + 11'd1);

assign c_mid2_fu_242_p3 = ((exitcond7_fu_236_p2[0:0] === 1'b1) ? 11'd0 : c_reg_119);

assign exitcond7_fu_236_p2 = ((c_reg_119 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_224_p2 = ((indvar_flatten_reg_97 == 19'd446464) ? 1'b1 : 1'b0);

assign icmp8_fu_266_p2 = ((tmp_93_fu_256_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp9_fu_310_p2 = ((tmp_94_fu_300_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_206_p2 = ((tmp_fu_196_p4 != 8'd0) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_230_p2 = (indvar_flatten_reg_97 + 19'd1);

assign or_cond3_fu_328_p2 = (tmp2_fu_322_p2 & tmp1_mid2_fu_284_p3);

assign outputs_din = {{buf_1_load_toint_fu_415_p1}, {tmp_162_toint_fu_411_p1}};

assign r_mid2_fu_292_p3 = ((exitcond7_fu_236_p2[0:0] === 1'b1) ? r_s_fu_250_p2 : r_reg_108);

assign r_s_fu_250_p2 = (r_reg_108 + 9'd1);

assign tmp1_fu_218_p2 = (tmp_s_fu_212_p2 & icmp_fu_206_p2);

assign tmp1_mid1_fu_278_p2 = (tmp_mid1_fu_272_p2 & icmp8_fu_266_p2);

assign tmp1_mid2_fu_284_p3 = ((exitcond7_fu_236_p2[0:0] === 1'b1) ? tmp1_mid1_fu_278_p2 : tmp1_fu_218_p2);

assign tmp2_fu_322_p2 = (tmp_52_fu_316_p2 & icmp9_fu_310_p2);

assign tmp_162_toint_fu_411_p1 = ap_phi_mux_tmp_64_phi_fu_145_p4;

assign tmp_52_fu_316_p2 = ((c_mid2_fu_242_p3 < 11'd1022) ? 1'b1 : 1'b0);

assign tmp_82_fu_384_p1 = tmp_95_reg_451;

assign tmp_84_fu_389_p1 = tmp_83_reg_456;

assign tmp_86_fu_394_p1 = tmp_85_reg_461;

assign tmp_88_fu_401_p1 = tmp_87_reg_466;

assign tmp_90_fu_406_p1 = tmp_89_reg_471;

assign tmp_93_fu_256_p4 = {{r_s_fu_250_p2[8:1]}};

assign tmp_94_fu_300_p4 = {{c_mid2_fu_242_p3[10:1]}};

assign tmp_95_fu_340_p1 = tensor_val_dout[31:0];

assign tmp_fu_196_p4 = {{r_reg_108[8:1]}};

assign tmp_mid1_fu_272_p2 = ((r_s_fu_250_p2 < 9'd434) ? 1'b1 : 1'b0);

assign tmp_s_fu_212_p2 = ((r_reg_108 < 9'd434) ? 1'b1 : 1'b0);

endmodule //a0_flow_calc
