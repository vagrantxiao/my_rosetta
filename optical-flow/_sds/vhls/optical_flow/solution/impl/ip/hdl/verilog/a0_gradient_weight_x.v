// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_gradient_weight_x (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        y_filtered_x_dout,
        y_filtered_x_empty_n,
        y_filtered_x_read,
        y_filtered_y_dout,
        y_filtered_y_empty_n,
        y_filtered_y_read,
        y_filtered_z_dout,
        y_filtered_z_empty_n,
        y_filtered_z_read,
        filtered_gradient_x_din,
        filtered_gradient_x_full_n,
        filtered_gradient_x_write,
        filtered_gradient_y_din,
        filtered_gradient_y_full_n,
        filtered_gradient_y_write,
        filtered_gradient_z_din,
        filtered_gradient_z_full_n,
        filtered_gradient_z_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state35 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] y_filtered_x_dout;
input   y_filtered_x_empty_n;
output   y_filtered_x_read;
input  [31:0] y_filtered_y_dout;
input   y_filtered_y_empty_n;
output   y_filtered_y_read;
input  [31:0] y_filtered_z_dout;
input   y_filtered_z_empty_n;
output   y_filtered_z_read;
output  [31:0] filtered_gradient_x_din;
input   filtered_gradient_x_full_n;
output   filtered_gradient_x_write;
output  [31:0] filtered_gradient_y_din;
input   filtered_gradient_y_full_n;
output   filtered_gradient_y_write;
output  [31:0] filtered_gradient_z_din;
input   filtered_gradient_z_full_n;
output   filtered_gradient_z_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg y_filtered_x_read;
reg y_filtered_y_read;
reg y_filtered_z_read;
reg[31:0] filtered_gradient_x_din;
reg filtered_gradient_x_write;
reg[31:0] filtered_gradient_y_din;
reg filtered_gradient_y_write;
reg[31:0] filtered_gradient_z_din;
reg filtered_gradient_z_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    y_filtered_x_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_771;
reg   [0:0] tmp_reg_780;
reg    y_filtered_y_blk_n;
reg    y_filtered_z_blk_n;
reg    filtered_gradient_x_blk_n;
reg    ap_enable_reg_pp0_iter32;
reg   [0:0] or_cond_reg_784;
reg   [0:0] or_cond_reg_784_pp0_iter31_reg;
reg   [0:0] tmp_47_reg_788;
reg   [0:0] tmp_47_reg_788_pp0_iter31_reg;
reg    filtered_gradient_y_blk_n;
reg    filtered_gradient_z_blk_n;
reg   [18:0] indvar_flatten_reg_184;
reg   [10:0] c_reg_195;
reg   [31:0] buf_val_z_load_3_6_reg_206;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter2_reg;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op107_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
reg    ap_predicate_op271_write_state34;
reg    ap_block_state34_pp0_stage0_iter32;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter3_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter4_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter5_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter6_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter7_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter8_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter9_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter10_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter11_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter12_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter13_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter14_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter15_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter16_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter17_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter18_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter19_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter20_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter21_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter22_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter23_reg;
reg   [31:0] buf_val_z_load_3_6_reg_206_pp0_iter24_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter2_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter3_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter4_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter5_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter6_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter7_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter8_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter9_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter10_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter11_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter12_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter13_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter14_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter15_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter16_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter17_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter18_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter19_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter20_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter21_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter22_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter23_reg;
reg   [31:0] buf_val_y_load_3_6_reg_219_pp0_iter24_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter2_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter3_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter4_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter5_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter6_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter7_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter8_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter9_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter10_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter11_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter12_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter13_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter14_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter15_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter16_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter17_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter18_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter19_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter20_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter21_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter22_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter23_reg;
reg   [31:0] buf_val_x_load_3_6_reg_232_pp0_iter24_reg;
wire   [0:0] exitcond_flatten_fu_440_p2;
wire   [18:0] indvar_flatten_next_fu_446_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_fu_466_p3;
wire   [0:0] or_cond_fu_486_p2;
reg   [0:0] or_cond_reg_784_pp0_iter1_reg;
reg   [0:0] or_cond_reg_784_pp0_iter2_reg;
reg   [0:0] or_cond_reg_784_pp0_iter3_reg;
reg   [0:0] or_cond_reg_784_pp0_iter4_reg;
reg   [0:0] or_cond_reg_784_pp0_iter5_reg;
reg   [0:0] or_cond_reg_784_pp0_iter6_reg;
reg   [0:0] or_cond_reg_784_pp0_iter7_reg;
reg   [0:0] or_cond_reg_784_pp0_iter8_reg;
reg   [0:0] or_cond_reg_784_pp0_iter9_reg;
reg   [0:0] or_cond_reg_784_pp0_iter10_reg;
reg   [0:0] or_cond_reg_784_pp0_iter11_reg;
reg   [0:0] or_cond_reg_784_pp0_iter12_reg;
reg   [0:0] or_cond_reg_784_pp0_iter13_reg;
reg   [0:0] or_cond_reg_784_pp0_iter14_reg;
reg   [0:0] or_cond_reg_784_pp0_iter15_reg;
reg   [0:0] or_cond_reg_784_pp0_iter16_reg;
reg   [0:0] or_cond_reg_784_pp0_iter17_reg;
reg   [0:0] or_cond_reg_784_pp0_iter18_reg;
reg   [0:0] or_cond_reg_784_pp0_iter19_reg;
reg   [0:0] or_cond_reg_784_pp0_iter20_reg;
reg   [0:0] or_cond_reg_784_pp0_iter21_reg;
reg   [0:0] or_cond_reg_784_pp0_iter22_reg;
reg   [0:0] or_cond_reg_784_pp0_iter23_reg;
reg   [0:0] or_cond_reg_784_pp0_iter24_reg;
reg   [0:0] or_cond_reg_784_pp0_iter25_reg;
reg   [0:0] or_cond_reg_784_pp0_iter26_reg;
reg   [0:0] or_cond_reg_784_pp0_iter27_reg;
reg   [0:0] or_cond_reg_784_pp0_iter28_reg;
reg   [0:0] or_cond_reg_784_pp0_iter29_reg;
reg   [0:0] or_cond_reg_784_pp0_iter30_reg;
wire   [0:0] tmp_47_fu_492_p2;
reg   [0:0] tmp_47_reg_788_pp0_iter1_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter2_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter3_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter4_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter5_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter6_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter7_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter8_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter9_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter10_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter11_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter12_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter13_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter14_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter15_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter16_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter17_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter18_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter19_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter20_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter21_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter22_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter23_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter24_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter25_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter26_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter27_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter28_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter29_reg;
reg   [0:0] tmp_47_reg_788_pp0_iter30_reg;
wire   [10:0] c_3_fu_498_p2;
reg   [31:0] buf_val_x_load_1_reg_812;
reg   [31:0] buf_val_x_load_1_reg_812_pp0_iter2_reg;
reg   [31:0] buf_val_x_load_1_reg_812_pp0_iter3_reg;
reg   [31:0] buf_val_x_load_1_reg_812_pp0_iter4_reg;
reg   [31:0] buf_val_y_load_1_reg_817;
reg   [31:0] buf_val_y_load_1_reg_817_pp0_iter2_reg;
reg   [31:0] buf_val_y_load_1_reg_817_pp0_iter3_reg;
reg   [31:0] buf_val_y_load_1_reg_817_pp0_iter4_reg;
reg   [31:0] buf_val_z_load_1_reg_822;
reg   [31:0] buf_val_z_load_1_reg_822_pp0_iter2_reg;
reg   [31:0] buf_val_z_load_1_reg_822_pp0_iter3_reg;
reg   [31:0] buf_val_z_load_1_reg_822_pp0_iter4_reg;
reg   [31:0] buf_val_x_load_2_reg_827;
reg   [31:0] buf_val_x_load_2_reg_827_pp0_iter2_reg;
reg   [31:0] buf_val_x_load_2_reg_827_pp0_iter3_reg;
reg   [31:0] buf_val_x_load_2_reg_827_pp0_iter4_reg;
reg   [31:0] buf_val_x_load_2_reg_827_pp0_iter5_reg;
reg   [31:0] buf_val_x_load_2_reg_827_pp0_iter6_reg;
reg   [31:0] buf_val_x_load_2_reg_827_pp0_iter7_reg;
reg   [31:0] buf_val_x_load_2_reg_827_pp0_iter8_reg;
reg   [31:0] buf_val_y_load_2_reg_832;
reg   [31:0] buf_val_y_load_2_reg_832_pp0_iter2_reg;
reg   [31:0] buf_val_y_load_2_reg_832_pp0_iter3_reg;
reg   [31:0] buf_val_y_load_2_reg_832_pp0_iter4_reg;
reg   [31:0] buf_val_y_load_2_reg_832_pp0_iter5_reg;
reg   [31:0] buf_val_y_load_2_reg_832_pp0_iter6_reg;
reg   [31:0] buf_val_y_load_2_reg_832_pp0_iter7_reg;
reg   [31:0] buf_val_y_load_2_reg_832_pp0_iter8_reg;
reg   [31:0] buf_val_z_load_2_reg_837;
reg   [31:0] buf_val_z_load_2_reg_837_pp0_iter2_reg;
reg   [31:0] buf_val_z_load_2_reg_837_pp0_iter3_reg;
reg   [31:0] buf_val_z_load_2_reg_837_pp0_iter4_reg;
reg   [31:0] buf_val_z_load_2_reg_837_pp0_iter5_reg;
reg   [31:0] buf_val_z_load_2_reg_837_pp0_iter6_reg;
reg   [31:0] buf_val_z_load_2_reg_837_pp0_iter7_reg;
reg   [31:0] buf_val_z_load_2_reg_837_pp0_iter8_reg;
reg   [31:0] buf_val_x_load_3_reg_842;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter2_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter3_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter4_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter5_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter6_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter7_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter8_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter9_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter10_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter11_reg;
reg   [31:0] buf_val_x_load_3_reg_842_pp0_iter12_reg;
reg   [31:0] buf_val_y_load_3_reg_847;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter2_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter3_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter4_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter5_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter6_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter7_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter8_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter9_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter10_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter11_reg;
reg   [31:0] buf_val_y_load_3_reg_847_pp0_iter12_reg;
reg   [31:0] buf_val_z_load_3_reg_852;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter2_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter3_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter4_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter5_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter6_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter7_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter8_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter9_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter10_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter11_reg;
reg   [31:0] buf_val_z_load_3_reg_852_pp0_iter12_reg;
reg   [31:0] buf_val_x_load_4_reg_857;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter2_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter3_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter4_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter5_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter6_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter7_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter8_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter9_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter10_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter11_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter12_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter13_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter14_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter15_reg;
reg   [31:0] buf_val_x_load_4_reg_857_pp0_iter16_reg;
reg   [31:0] buf_val_y_load_4_reg_862;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter2_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter3_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter4_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter5_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter6_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter7_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter8_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter9_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter10_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter11_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter12_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter13_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter14_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter15_reg;
reg   [31:0] buf_val_y_load_4_reg_862_pp0_iter16_reg;
reg   [31:0] buf_val_z_load_4_reg_867;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter2_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter3_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter4_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter5_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter6_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter7_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter8_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter9_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter10_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter11_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter12_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter13_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter14_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter15_reg;
reg   [31:0] buf_val_z_load_4_reg_867_pp0_iter16_reg;
reg   [31:0] tmp_x_1_load_1_reg_872;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter2_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter3_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter4_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter5_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter6_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter7_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter8_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter9_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter10_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter11_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter12_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter13_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter14_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter15_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter16_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter17_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter18_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter19_reg;
reg   [31:0] tmp_x_1_load_1_reg_872_pp0_iter20_reg;
reg   [31:0] tmp_y_1_load_1_reg_877;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter2_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter3_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter4_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter5_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter6_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter7_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter8_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter9_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter10_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter11_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter12_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter13_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter14_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter15_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter16_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter17_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter18_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter19_reg;
reg   [31:0] tmp_y_1_load_1_reg_877_pp0_iter20_reg;
reg   [31:0] tmp_z_1_load_1_reg_882;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter2_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter3_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter4_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter5_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter6_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter7_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter8_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter9_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter10_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter11_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter12_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter13_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter14_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter15_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter16_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter17_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter18_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter19_reg;
reg   [31:0] tmp_z_1_load_1_reg_882_pp0_iter20_reg;
wire   [31:0] grp_fu_332_p2;
reg   [31:0] tmp_78_reg_887;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] tmp_79_reg_892;
wire   [31:0] grp_fu_342_p2;
reg   [31:0] tmp_80_reg_897;
wire   [31:0] grp_fu_245_p2;
reg   [31:0] acc_x_reg_902;
wire   [31:0] grp_fu_250_p2;
reg   [31:0] acc_y_reg_907;
wire   [31:0] grp_fu_255_p2;
reg   [31:0] acc_z_reg_912;
wire   [31:0] grp_fu_347_p2;
reg   [31:0] tmp_145_1_reg_917;
wire   [31:0] grp_fu_352_p2;
reg   [31:0] tmp_146_1_reg_922;
wire   [31:0] grp_fu_357_p2;
reg   [31:0] tmp_147_1_reg_927;
wire   [31:0] grp_fu_260_p2;
reg   [31:0] acc_x_1_reg_932;
wire   [31:0] grp_fu_264_p2;
reg   [31:0] acc_y_1_reg_937;
wire   [31:0] grp_fu_268_p2;
reg   [31:0] acc_z_1_reg_942;
wire   [31:0] grp_fu_362_p2;
reg   [31:0] tmp_145_2_reg_947;
wire   [31:0] grp_fu_367_p2;
reg   [31:0] tmp_146_2_reg_952;
wire   [31:0] grp_fu_372_p2;
reg   [31:0] tmp_147_2_reg_957;
wire   [31:0] grp_fu_272_p2;
reg   [31:0] acc_x_2_reg_962;
wire   [31:0] grp_fu_276_p2;
reg   [31:0] acc_y_2_reg_967;
wire   [31:0] grp_fu_280_p2;
reg   [31:0] acc_z_2_reg_972;
wire   [31:0] grp_fu_377_p2;
reg   [31:0] tmp_145_3_reg_977;
wire   [31:0] grp_fu_382_p2;
reg   [31:0] tmp_146_3_reg_982;
wire   [31:0] grp_fu_387_p2;
reg   [31:0] tmp_147_3_reg_987;
wire   [31:0] grp_fu_284_p2;
reg   [31:0] acc_x_3_reg_992;
wire   [31:0] grp_fu_288_p2;
reg   [31:0] acc_y_3_reg_997;
wire   [31:0] grp_fu_292_p2;
reg   [31:0] acc_z_3_reg_1002;
wire   [31:0] grp_fu_392_p2;
reg   [31:0] tmp_145_4_reg_1007;
wire   [31:0] grp_fu_397_p2;
reg   [31:0] tmp_146_4_reg_1012;
wire   [31:0] grp_fu_402_p2;
reg   [31:0] tmp_147_4_reg_1017;
wire   [31:0] grp_fu_296_p2;
reg   [31:0] acc_x_4_reg_1022;
wire   [31:0] grp_fu_300_p2;
reg   [31:0] acc_y_4_reg_1027;
wire   [31:0] grp_fu_304_p2;
reg   [31:0] acc_z_4_reg_1032;
wire   [31:0] grp_fu_407_p2;
reg   [31:0] tmp_145_5_reg_1037;
wire   [31:0] grp_fu_412_p2;
reg   [31:0] tmp_146_5_reg_1042;
wire   [31:0] grp_fu_417_p2;
reg   [31:0] tmp_147_5_reg_1047;
wire   [31:0] grp_fu_308_p2;
reg   [31:0] acc_x_5_reg_1052;
wire   [31:0] grp_fu_312_p2;
reg   [31:0] acc_y_5_reg_1057;
wire   [31:0] grp_fu_316_p2;
reg   [31:0] acc_z_5_reg_1062;
wire   [31:0] grp_fu_422_p2;
reg   [31:0] tmp_145_6_reg_1067;
wire   [31:0] grp_fu_428_p2;
reg   [31:0] tmp_146_6_reg_1072;
wire   [31:0] grp_fu_434_p2;
reg   [31:0] tmp_147_6_reg_1077;
wire   [31:0] grp_fu_320_p2;
reg   [31:0] acc_x_6_reg_1082;
wire   [31:0] grp_fu_324_p2;
reg   [31:0] acc_y_6_reg_1087;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] acc_z_6_reg_1092;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state3;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg   [31:0] ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_z_load_3_6_reg_206;
reg   [31:0] ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_y_load_3_6_reg_219;
reg   [31:0] ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232;
wire   [31:0] ap_phi_reg_pp0_iter0_buf_val_x_load_3_6_reg_232;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] buf_val_x_load_6_fu_70;
reg   [31:0] buf_val_y_load_6_fu_74;
reg   [31:0] buf_val_z_load_6_fu_78;
reg   [31:0] buf_val_x_load_3_1_fu_82;
reg   [31:0] buf_val_y_load_3_1_fu_86;
reg   [31:0] buf_val_z_load_3_1_fu_90;
reg   [31:0] buf_val_x_load_3_2_fu_94;
reg   [31:0] buf_val_y_load_3_2_fu_98;
reg   [31:0] buf_val_z_load_3_2_fu_102;
reg   [31:0] buf_val_x_load_3_3_fu_106;
reg   [31:0] buf_val_y_load_3_3_fu_110;
reg   [31:0] buf_val_z_load_3_3_fu_114;
reg   [31:0] buf_val_x_load_3_4_fu_118;
reg   [31:0] buf_val_y_load_3_4_fu_122;
reg   [31:0] buf_val_z_load_3_4_fu_126;
reg   [31:0] tmp_x_1_fu_130;
reg   [31:0] tmp_y_1_fu_134;
reg   [31:0] tmp_z_1_fu_138;
wire   [0:0] exitcond_fu_452_p2;
wire   [10:0] c_mid2_fu_458_p3;
wire   [0:0] tmp_44_fu_480_p2;
wire   [0:0] rev_fu_474_p2;
reg    grp_fu_245_ce;
reg    grp_fu_250_ce;
reg    grp_fu_255_ce;
reg    grp_fu_260_ce;
reg    grp_fu_264_ce;
reg    grp_fu_268_ce;
reg    grp_fu_272_ce;
reg    grp_fu_276_ce;
reg    grp_fu_280_ce;
reg    grp_fu_284_ce;
reg    grp_fu_288_ce;
reg    grp_fu_292_ce;
reg    grp_fu_296_ce;
reg    grp_fu_300_ce;
reg    grp_fu_304_ce;
reg    grp_fu_308_ce;
reg    grp_fu_312_ce;
reg    grp_fu_316_ce;
reg    grp_fu_320_ce;
reg    grp_fu_324_ce;
reg    grp_fu_328_ce;
reg    grp_fu_332_ce;
reg    grp_fu_337_ce;
reg    grp_fu_342_ce;
reg    grp_fu_347_ce;
reg    grp_fu_352_ce;
reg    grp_fu_357_ce;
reg    grp_fu_362_ce;
reg    grp_fu_367_ce;
reg    grp_fu_372_ce;
reg    grp_fu_377_ce;
reg    grp_fu_382_ce;
reg    grp_fu_387_ce;
reg    grp_fu_392_ce;
reg    grp_fu_397_ce;
reg    grp_fu_402_ce;
reg    grp_fu_407_ce;
reg    grp_fu_412_ce;
reg    grp_fu_417_ce;
reg    grp_fu_422_ce;
reg    grp_fu_428_ce;
reg    grp_fu_434_ce;
wire    ap_CS_fsm_state35;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_293;
reg    ap_condition_962;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
end

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_78_reg_887),
    .din1(32'd0),
    .ce(grp_fu_245_ce),
    .dout(grp_fu_245_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_79_reg_892),
    .din1(32'd0),
    .ce(grp_fu_250_ce),
    .dout(grp_fu_250_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_80_reg_897),
    .din1(32'd0),
    .ce(grp_fu_255_ce),
    .dout(grp_fu_255_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_x_reg_902),
    .din1(tmp_145_1_reg_917),
    .ce(grp_fu_260_ce),
    .dout(grp_fu_260_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_y_reg_907),
    .din1(tmp_146_1_reg_922),
    .ce(grp_fu_264_ce),
    .dout(grp_fu_264_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_z_reg_912),
    .din1(tmp_147_1_reg_927),
    .ce(grp_fu_268_ce),
    .dout(grp_fu_268_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_x_1_reg_932),
    .din1(tmp_145_2_reg_947),
    .ce(grp_fu_272_ce),
    .dout(grp_fu_272_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_y_1_reg_937),
    .din1(tmp_146_2_reg_952),
    .ce(grp_fu_276_ce),
    .dout(grp_fu_276_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_z_1_reg_942),
    .din1(tmp_147_2_reg_957),
    .ce(grp_fu_280_ce),
    .dout(grp_fu_280_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_x_2_reg_962),
    .din1(tmp_145_3_reg_977),
    .ce(grp_fu_284_ce),
    .dout(grp_fu_284_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_y_2_reg_967),
    .din1(tmp_146_3_reg_982),
    .ce(grp_fu_288_ce),
    .dout(grp_fu_288_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_z_2_reg_972),
    .din1(tmp_147_3_reg_987),
    .ce(grp_fu_292_ce),
    .dout(grp_fu_292_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_x_3_reg_992),
    .din1(tmp_145_4_reg_1007),
    .ce(grp_fu_296_ce),
    .dout(grp_fu_296_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_y_3_reg_997),
    .din1(tmp_146_4_reg_1012),
    .ce(grp_fu_300_ce),
    .dout(grp_fu_300_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_z_3_reg_1002),
    .din1(tmp_147_4_reg_1017),
    .ce(grp_fu_304_ce),
    .dout(grp_fu_304_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_x_4_reg_1022),
    .din1(tmp_145_5_reg_1037),
    .ce(grp_fu_308_ce),
    .dout(grp_fu_308_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_y_4_reg_1027),
    .din1(tmp_146_5_reg_1042),
    .ce(grp_fu_312_ce),
    .dout(grp_fu_312_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_z_4_reg_1032),
    .din1(tmp_147_5_reg_1047),
    .ce(grp_fu_316_ce),
    .dout(grp_fu_316_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_x_5_reg_1052),
    .din1(tmp_145_6_reg_1067),
    .ce(grp_fu_320_ce),
    .dout(grp_fu_320_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_y_5_reg_1057),
    .din1(tmp_146_6_reg_1072),
    .ce(grp_fu_324_ce),
    .dout(grp_fu_324_p2)
);

a0_optical_flow_faddhbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_faddhbi_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_z_5_reg_1062),
    .din1(tmp_147_6_reg_1077),
    .ce(grp_fu_328_ce),
    .dout(grp_fu_328_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_x_load_6_fu_70),
    .din1(32'd1033543614),
    .ce(grp_fu_332_ce),
    .dout(grp_fu_332_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_y_load_6_fu_74),
    .din1(32'd1033543614),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_z_load_6_fu_78),
    .din1(32'd1033543614),
    .ce(grp_fu_342_ce),
    .dout(grp_fu_342_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_x_load_1_reg_812_pp0_iter4_reg),
    .din1(32'd1040724263),
    .ce(grp_fu_347_ce),
    .dout(grp_fu_347_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_y_load_1_reg_817_pp0_iter4_reg),
    .din1(32'd1040724263),
    .ce(grp_fu_352_ce),
    .dout(grp_fu_352_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_z_load_1_reg_822_pp0_iter4_reg),
    .din1(32'd1040724263),
    .ce(grp_fu_357_ce),
    .dout(grp_fu_357_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_x_load_2_reg_827_pp0_iter8_reg),
    .din1(32'd1044341431),
    .ce(grp_fu_362_ce),
    .dout(grp_fu_362_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_y_load_2_reg_832_pp0_iter8_reg),
    .din1(32'd1044341431),
    .ce(grp_fu_367_ce),
    .dout(grp_fu_367_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_z_load_2_reg_837_pp0_iter8_reg),
    .din1(32'd1044341431),
    .ce(grp_fu_372_ce),
    .dout(grp_fu_372_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_x_load_3_reg_842_pp0_iter12_reg),
    .din1(32'd1049928244),
    .ce(grp_fu_377_ce),
    .dout(grp_fu_377_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U137(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_y_load_3_reg_847_pp0_iter12_reg),
    .din1(32'd1049928244),
    .ce(grp_fu_382_ce),
    .dout(grp_fu_382_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U138(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_z_load_3_reg_852_pp0_iter12_reg),
    .din1(32'd1049928244),
    .ce(grp_fu_387_ce),
    .dout(grp_fu_387_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U139(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_x_load_4_reg_857_pp0_iter16_reg),
    .din1(32'd1044341431),
    .ce(grp_fu_392_ce),
    .dout(grp_fu_392_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_y_load_4_reg_862_pp0_iter16_reg),
    .din1(32'd1044341431),
    .ce(grp_fu_397_ce),
    .dout(grp_fu_397_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_z_load_4_reg_867_pp0_iter16_reg),
    .din1(32'd1044341431),
    .ce(grp_fu_402_ce),
    .dout(grp_fu_402_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_x_1_load_1_reg_872_pp0_iter20_reg),
    .din1(32'd1040724263),
    .ce(grp_fu_407_ce),
    .dout(grp_fu_407_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_y_1_load_1_reg_877_pp0_iter20_reg),
    .din1(32'd1040724263),
    .ce(grp_fu_412_ce),
    .dout(grp_fu_412_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_z_1_load_1_reg_882_pp0_iter20_reg),
    .din1(32'd1040724263),
    .ce(grp_fu_417_ce),
    .dout(grp_fu_417_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_x_load_3_6_reg_232_pp0_iter24_reg),
    .din1(32'd1033543614),
    .ce(grp_fu_422_ce),
    .dout(grp_fu_422_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_y_load_3_6_reg_219_pp0_iter24_reg),
    .din1(32'd1033543614),
    .ce(grp_fu_428_ce),
    .dout(grp_fu_428_p2)
);

a0_optical_flow_fmulibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
optical_flow_fmulibs_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(buf_val_z_load_3_6_reg_206_pp0_iter24_reg),
    .din1(32'd1033543614),
    .ce(grp_fu_434_ce),
    .dout(grp_fu_434_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten_fu_440_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state3)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter32 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_293)) begin
        if (((tmp_fu_466_p3 == 1'd1) & (exitcond_flatten_fu_440_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232 <= ap_phi_reg_pp0_iter0_buf_val_x_load_3_6_reg_232;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_293)) begin
        if (((tmp_fu_466_p3 == 1'd1) & (exitcond_flatten_fu_440_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219 <= ap_phi_reg_pp0_iter0_buf_val_y_load_3_6_reg_219;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_293)) begin
        if (((tmp_fu_466_p3 == 1'd1) & (exitcond_flatten_fu_440_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206 <= ap_phi_reg_pp0_iter0_buf_val_z_load_3_6_reg_206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_962)) begin
        if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0))) begin
            buf_val_x_load_3_6_reg_232 <= y_filtered_x_dout;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_x_load_3_6_reg_232 <= ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_962)) begin
        if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0))) begin
            buf_val_y_load_3_6_reg_219 <= y_filtered_y_dout;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_y_load_3_6_reg_219 <= ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_962)) begin
        if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0))) begin
            buf_val_z_load_3_6_reg_206 <= y_filtered_z_dout;
        end else if ((1'b1 == 1'b1)) begin
            buf_val_z_load_3_6_reg_206 <= ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_reg_195 <= c_3_fu_498_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_reg_195 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_184 <= indvar_flatten_next_fu_446_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_184 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_1_reg_932 <= grp_fu_260_p2;
        acc_y_1_reg_937 <= grp_fu_264_p2;
        acc_z_1_reg_942 <= grp_fu_268_p2;
        tmp_145_2_reg_947 <= grp_fu_362_p2;
        tmp_146_2_reg_952 <= grp_fu_367_p2;
        tmp_147_2_reg_957 <= grp_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter14_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_2_reg_962 <= grp_fu_272_p2;
        acc_y_2_reg_967 <= grp_fu_276_p2;
        acc_z_2_reg_972 <= grp_fu_280_p2;
        tmp_145_3_reg_977 <= grp_fu_377_p2;
        tmp_146_3_reg_982 <= grp_fu_382_p2;
        tmp_147_3_reg_987 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter18_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_3_reg_992 <= grp_fu_284_p2;
        acc_y_3_reg_997 <= grp_fu_288_p2;
        acc_z_3_reg_1002 <= grp_fu_292_p2;
        tmp_145_4_reg_1007 <= grp_fu_392_p2;
        tmp_146_4_reg_1012 <= grp_fu_397_p2;
        tmp_147_4_reg_1017 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter22_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_4_reg_1022 <= grp_fu_296_p2;
        acc_y_4_reg_1027 <= grp_fu_300_p2;
        acc_z_4_reg_1032 <= grp_fu_304_p2;
        tmp_145_5_reg_1037 <= grp_fu_407_p2;
        tmp_146_5_reg_1042 <= grp_fu_412_p2;
        tmp_147_5_reg_1047 <= grp_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter26_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_5_reg_1052 <= grp_fu_308_p2;
        acc_y_5_reg_1057 <= grp_fu_312_p2;
        acc_z_5_reg_1062 <= grp_fu_316_p2;
        tmp_145_6_reg_1067 <= grp_fu_422_p2;
        tmp_146_6_reg_1072 <= grp_fu_428_p2;
        tmp_147_6_reg_1077 <= grp_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter30_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_6_reg_1082 <= grp_fu_320_p2;
        acc_y_6_reg_1087 <= grp_fu_324_p2;
        acc_z_6_reg_1092 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_reg_902 <= grp_fu_245_p2;
        acc_y_reg_907 <= grp_fu_250_p2;
        acc_z_reg_912 <= grp_fu_255_p2;
        tmp_145_1_reg_917 <= grp_fu_347_p2;
        tmp_146_1_reg_922 <= grp_fu_352_p2;
        tmp_147_1_reg_927 <= grp_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_load_1_reg_812 <= buf_val_x_load_3_1_fu_82;
        buf_val_x_load_2_reg_827 <= buf_val_x_load_3_2_fu_94;
        buf_val_x_load_3_reg_842 <= buf_val_x_load_3_3_fu_106;
        buf_val_x_load_4_reg_857 <= buf_val_x_load_3_4_fu_118;
        buf_val_y_load_1_reg_817 <= buf_val_y_load_3_1_fu_86;
        buf_val_y_load_2_reg_832 <= buf_val_y_load_3_2_fu_98;
        buf_val_y_load_3_reg_847 <= buf_val_y_load_3_3_fu_110;
        buf_val_y_load_4_reg_862 <= buf_val_y_load_3_4_fu_122;
        buf_val_z_load_1_reg_822 <= buf_val_z_load_3_1_fu_90;
        buf_val_z_load_2_reg_837 <= buf_val_z_load_3_2_fu_102;
        buf_val_z_load_3_reg_852 <= buf_val_z_load_3_3_fu_114;
        buf_val_z_load_4_reg_867 <= buf_val_z_load_3_4_fu_126;
        exitcond_flatten_reg_771 <= exitcond_flatten_fu_440_p2;
        or_cond_reg_784_pp0_iter1_reg <= or_cond_reg_784;
        tmp_47_reg_788_pp0_iter1_reg <= tmp_47_reg_788;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        buf_val_x_load_1_reg_812_pp0_iter2_reg <= buf_val_x_load_1_reg_812;
        buf_val_x_load_1_reg_812_pp0_iter3_reg <= buf_val_x_load_1_reg_812_pp0_iter2_reg;
        buf_val_x_load_1_reg_812_pp0_iter4_reg <= buf_val_x_load_1_reg_812_pp0_iter3_reg;
        buf_val_x_load_2_reg_827_pp0_iter2_reg <= buf_val_x_load_2_reg_827;
        buf_val_x_load_2_reg_827_pp0_iter3_reg <= buf_val_x_load_2_reg_827_pp0_iter2_reg;
        buf_val_x_load_2_reg_827_pp0_iter4_reg <= buf_val_x_load_2_reg_827_pp0_iter3_reg;
        buf_val_x_load_2_reg_827_pp0_iter5_reg <= buf_val_x_load_2_reg_827_pp0_iter4_reg;
        buf_val_x_load_2_reg_827_pp0_iter6_reg <= buf_val_x_load_2_reg_827_pp0_iter5_reg;
        buf_val_x_load_2_reg_827_pp0_iter7_reg <= buf_val_x_load_2_reg_827_pp0_iter6_reg;
        buf_val_x_load_2_reg_827_pp0_iter8_reg <= buf_val_x_load_2_reg_827_pp0_iter7_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter10_reg <= buf_val_x_load_3_6_reg_232_pp0_iter9_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter11_reg <= buf_val_x_load_3_6_reg_232_pp0_iter10_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter12_reg <= buf_val_x_load_3_6_reg_232_pp0_iter11_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter13_reg <= buf_val_x_load_3_6_reg_232_pp0_iter12_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter14_reg <= buf_val_x_load_3_6_reg_232_pp0_iter13_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter15_reg <= buf_val_x_load_3_6_reg_232_pp0_iter14_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter16_reg <= buf_val_x_load_3_6_reg_232_pp0_iter15_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter17_reg <= buf_val_x_load_3_6_reg_232_pp0_iter16_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter18_reg <= buf_val_x_load_3_6_reg_232_pp0_iter17_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter19_reg <= buf_val_x_load_3_6_reg_232_pp0_iter18_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter20_reg <= buf_val_x_load_3_6_reg_232_pp0_iter19_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter21_reg <= buf_val_x_load_3_6_reg_232_pp0_iter20_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter22_reg <= buf_val_x_load_3_6_reg_232_pp0_iter21_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter23_reg <= buf_val_x_load_3_6_reg_232_pp0_iter22_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter24_reg <= buf_val_x_load_3_6_reg_232_pp0_iter23_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter2_reg <= buf_val_x_load_3_6_reg_232;
        buf_val_x_load_3_6_reg_232_pp0_iter3_reg <= buf_val_x_load_3_6_reg_232_pp0_iter2_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter4_reg <= buf_val_x_load_3_6_reg_232_pp0_iter3_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter5_reg <= buf_val_x_load_3_6_reg_232_pp0_iter4_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter6_reg <= buf_val_x_load_3_6_reg_232_pp0_iter5_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter7_reg <= buf_val_x_load_3_6_reg_232_pp0_iter6_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter8_reg <= buf_val_x_load_3_6_reg_232_pp0_iter7_reg;
        buf_val_x_load_3_6_reg_232_pp0_iter9_reg <= buf_val_x_load_3_6_reg_232_pp0_iter8_reg;
        buf_val_x_load_3_reg_842_pp0_iter10_reg <= buf_val_x_load_3_reg_842_pp0_iter9_reg;
        buf_val_x_load_3_reg_842_pp0_iter11_reg <= buf_val_x_load_3_reg_842_pp0_iter10_reg;
        buf_val_x_load_3_reg_842_pp0_iter12_reg <= buf_val_x_load_3_reg_842_pp0_iter11_reg;
        buf_val_x_load_3_reg_842_pp0_iter2_reg <= buf_val_x_load_3_reg_842;
        buf_val_x_load_3_reg_842_pp0_iter3_reg <= buf_val_x_load_3_reg_842_pp0_iter2_reg;
        buf_val_x_load_3_reg_842_pp0_iter4_reg <= buf_val_x_load_3_reg_842_pp0_iter3_reg;
        buf_val_x_load_3_reg_842_pp0_iter5_reg <= buf_val_x_load_3_reg_842_pp0_iter4_reg;
        buf_val_x_load_3_reg_842_pp0_iter6_reg <= buf_val_x_load_3_reg_842_pp0_iter5_reg;
        buf_val_x_load_3_reg_842_pp0_iter7_reg <= buf_val_x_load_3_reg_842_pp0_iter6_reg;
        buf_val_x_load_3_reg_842_pp0_iter8_reg <= buf_val_x_load_3_reg_842_pp0_iter7_reg;
        buf_val_x_load_3_reg_842_pp0_iter9_reg <= buf_val_x_load_3_reg_842_pp0_iter8_reg;
        buf_val_x_load_4_reg_857_pp0_iter10_reg <= buf_val_x_load_4_reg_857_pp0_iter9_reg;
        buf_val_x_load_4_reg_857_pp0_iter11_reg <= buf_val_x_load_4_reg_857_pp0_iter10_reg;
        buf_val_x_load_4_reg_857_pp0_iter12_reg <= buf_val_x_load_4_reg_857_pp0_iter11_reg;
        buf_val_x_load_4_reg_857_pp0_iter13_reg <= buf_val_x_load_4_reg_857_pp0_iter12_reg;
        buf_val_x_load_4_reg_857_pp0_iter14_reg <= buf_val_x_load_4_reg_857_pp0_iter13_reg;
        buf_val_x_load_4_reg_857_pp0_iter15_reg <= buf_val_x_load_4_reg_857_pp0_iter14_reg;
        buf_val_x_load_4_reg_857_pp0_iter16_reg <= buf_val_x_load_4_reg_857_pp0_iter15_reg;
        buf_val_x_load_4_reg_857_pp0_iter2_reg <= buf_val_x_load_4_reg_857;
        buf_val_x_load_4_reg_857_pp0_iter3_reg <= buf_val_x_load_4_reg_857_pp0_iter2_reg;
        buf_val_x_load_4_reg_857_pp0_iter4_reg <= buf_val_x_load_4_reg_857_pp0_iter3_reg;
        buf_val_x_load_4_reg_857_pp0_iter5_reg <= buf_val_x_load_4_reg_857_pp0_iter4_reg;
        buf_val_x_load_4_reg_857_pp0_iter6_reg <= buf_val_x_load_4_reg_857_pp0_iter5_reg;
        buf_val_x_load_4_reg_857_pp0_iter7_reg <= buf_val_x_load_4_reg_857_pp0_iter6_reg;
        buf_val_x_load_4_reg_857_pp0_iter8_reg <= buf_val_x_load_4_reg_857_pp0_iter7_reg;
        buf_val_x_load_4_reg_857_pp0_iter9_reg <= buf_val_x_load_4_reg_857_pp0_iter8_reg;
        buf_val_y_load_1_reg_817_pp0_iter2_reg <= buf_val_y_load_1_reg_817;
        buf_val_y_load_1_reg_817_pp0_iter3_reg <= buf_val_y_load_1_reg_817_pp0_iter2_reg;
        buf_val_y_load_1_reg_817_pp0_iter4_reg <= buf_val_y_load_1_reg_817_pp0_iter3_reg;
        buf_val_y_load_2_reg_832_pp0_iter2_reg <= buf_val_y_load_2_reg_832;
        buf_val_y_load_2_reg_832_pp0_iter3_reg <= buf_val_y_load_2_reg_832_pp0_iter2_reg;
        buf_val_y_load_2_reg_832_pp0_iter4_reg <= buf_val_y_load_2_reg_832_pp0_iter3_reg;
        buf_val_y_load_2_reg_832_pp0_iter5_reg <= buf_val_y_load_2_reg_832_pp0_iter4_reg;
        buf_val_y_load_2_reg_832_pp0_iter6_reg <= buf_val_y_load_2_reg_832_pp0_iter5_reg;
        buf_val_y_load_2_reg_832_pp0_iter7_reg <= buf_val_y_load_2_reg_832_pp0_iter6_reg;
        buf_val_y_load_2_reg_832_pp0_iter8_reg <= buf_val_y_load_2_reg_832_pp0_iter7_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter10_reg <= buf_val_y_load_3_6_reg_219_pp0_iter9_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter11_reg <= buf_val_y_load_3_6_reg_219_pp0_iter10_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter12_reg <= buf_val_y_load_3_6_reg_219_pp0_iter11_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter13_reg <= buf_val_y_load_3_6_reg_219_pp0_iter12_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter14_reg <= buf_val_y_load_3_6_reg_219_pp0_iter13_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter15_reg <= buf_val_y_load_3_6_reg_219_pp0_iter14_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter16_reg <= buf_val_y_load_3_6_reg_219_pp0_iter15_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter17_reg <= buf_val_y_load_3_6_reg_219_pp0_iter16_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter18_reg <= buf_val_y_load_3_6_reg_219_pp0_iter17_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter19_reg <= buf_val_y_load_3_6_reg_219_pp0_iter18_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter20_reg <= buf_val_y_load_3_6_reg_219_pp0_iter19_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter21_reg <= buf_val_y_load_3_6_reg_219_pp0_iter20_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter22_reg <= buf_val_y_load_3_6_reg_219_pp0_iter21_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter23_reg <= buf_val_y_load_3_6_reg_219_pp0_iter22_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter24_reg <= buf_val_y_load_3_6_reg_219_pp0_iter23_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter2_reg <= buf_val_y_load_3_6_reg_219;
        buf_val_y_load_3_6_reg_219_pp0_iter3_reg <= buf_val_y_load_3_6_reg_219_pp0_iter2_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter4_reg <= buf_val_y_load_3_6_reg_219_pp0_iter3_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter5_reg <= buf_val_y_load_3_6_reg_219_pp0_iter4_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter6_reg <= buf_val_y_load_3_6_reg_219_pp0_iter5_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter7_reg <= buf_val_y_load_3_6_reg_219_pp0_iter6_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter8_reg <= buf_val_y_load_3_6_reg_219_pp0_iter7_reg;
        buf_val_y_load_3_6_reg_219_pp0_iter9_reg <= buf_val_y_load_3_6_reg_219_pp0_iter8_reg;
        buf_val_y_load_3_reg_847_pp0_iter10_reg <= buf_val_y_load_3_reg_847_pp0_iter9_reg;
        buf_val_y_load_3_reg_847_pp0_iter11_reg <= buf_val_y_load_3_reg_847_pp0_iter10_reg;
        buf_val_y_load_3_reg_847_pp0_iter12_reg <= buf_val_y_load_3_reg_847_pp0_iter11_reg;
        buf_val_y_load_3_reg_847_pp0_iter2_reg <= buf_val_y_load_3_reg_847;
        buf_val_y_load_3_reg_847_pp0_iter3_reg <= buf_val_y_load_3_reg_847_pp0_iter2_reg;
        buf_val_y_load_3_reg_847_pp0_iter4_reg <= buf_val_y_load_3_reg_847_pp0_iter3_reg;
        buf_val_y_load_3_reg_847_pp0_iter5_reg <= buf_val_y_load_3_reg_847_pp0_iter4_reg;
        buf_val_y_load_3_reg_847_pp0_iter6_reg <= buf_val_y_load_3_reg_847_pp0_iter5_reg;
        buf_val_y_load_3_reg_847_pp0_iter7_reg <= buf_val_y_load_3_reg_847_pp0_iter6_reg;
        buf_val_y_load_3_reg_847_pp0_iter8_reg <= buf_val_y_load_3_reg_847_pp0_iter7_reg;
        buf_val_y_load_3_reg_847_pp0_iter9_reg <= buf_val_y_load_3_reg_847_pp0_iter8_reg;
        buf_val_y_load_4_reg_862_pp0_iter10_reg <= buf_val_y_load_4_reg_862_pp0_iter9_reg;
        buf_val_y_load_4_reg_862_pp0_iter11_reg <= buf_val_y_load_4_reg_862_pp0_iter10_reg;
        buf_val_y_load_4_reg_862_pp0_iter12_reg <= buf_val_y_load_4_reg_862_pp0_iter11_reg;
        buf_val_y_load_4_reg_862_pp0_iter13_reg <= buf_val_y_load_4_reg_862_pp0_iter12_reg;
        buf_val_y_load_4_reg_862_pp0_iter14_reg <= buf_val_y_load_4_reg_862_pp0_iter13_reg;
        buf_val_y_load_4_reg_862_pp0_iter15_reg <= buf_val_y_load_4_reg_862_pp0_iter14_reg;
        buf_val_y_load_4_reg_862_pp0_iter16_reg <= buf_val_y_load_4_reg_862_pp0_iter15_reg;
        buf_val_y_load_4_reg_862_pp0_iter2_reg <= buf_val_y_load_4_reg_862;
        buf_val_y_load_4_reg_862_pp0_iter3_reg <= buf_val_y_load_4_reg_862_pp0_iter2_reg;
        buf_val_y_load_4_reg_862_pp0_iter4_reg <= buf_val_y_load_4_reg_862_pp0_iter3_reg;
        buf_val_y_load_4_reg_862_pp0_iter5_reg <= buf_val_y_load_4_reg_862_pp0_iter4_reg;
        buf_val_y_load_4_reg_862_pp0_iter6_reg <= buf_val_y_load_4_reg_862_pp0_iter5_reg;
        buf_val_y_load_4_reg_862_pp0_iter7_reg <= buf_val_y_load_4_reg_862_pp0_iter6_reg;
        buf_val_y_load_4_reg_862_pp0_iter8_reg <= buf_val_y_load_4_reg_862_pp0_iter7_reg;
        buf_val_y_load_4_reg_862_pp0_iter9_reg <= buf_val_y_load_4_reg_862_pp0_iter8_reg;
        buf_val_z_load_1_reg_822_pp0_iter2_reg <= buf_val_z_load_1_reg_822;
        buf_val_z_load_1_reg_822_pp0_iter3_reg <= buf_val_z_load_1_reg_822_pp0_iter2_reg;
        buf_val_z_load_1_reg_822_pp0_iter4_reg <= buf_val_z_load_1_reg_822_pp0_iter3_reg;
        buf_val_z_load_2_reg_837_pp0_iter2_reg <= buf_val_z_load_2_reg_837;
        buf_val_z_load_2_reg_837_pp0_iter3_reg <= buf_val_z_load_2_reg_837_pp0_iter2_reg;
        buf_val_z_load_2_reg_837_pp0_iter4_reg <= buf_val_z_load_2_reg_837_pp0_iter3_reg;
        buf_val_z_load_2_reg_837_pp0_iter5_reg <= buf_val_z_load_2_reg_837_pp0_iter4_reg;
        buf_val_z_load_2_reg_837_pp0_iter6_reg <= buf_val_z_load_2_reg_837_pp0_iter5_reg;
        buf_val_z_load_2_reg_837_pp0_iter7_reg <= buf_val_z_load_2_reg_837_pp0_iter6_reg;
        buf_val_z_load_2_reg_837_pp0_iter8_reg <= buf_val_z_load_2_reg_837_pp0_iter7_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter10_reg <= buf_val_z_load_3_6_reg_206_pp0_iter9_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter11_reg <= buf_val_z_load_3_6_reg_206_pp0_iter10_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter12_reg <= buf_val_z_load_3_6_reg_206_pp0_iter11_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter13_reg <= buf_val_z_load_3_6_reg_206_pp0_iter12_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter14_reg <= buf_val_z_load_3_6_reg_206_pp0_iter13_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter15_reg <= buf_val_z_load_3_6_reg_206_pp0_iter14_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter16_reg <= buf_val_z_load_3_6_reg_206_pp0_iter15_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter17_reg <= buf_val_z_load_3_6_reg_206_pp0_iter16_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter18_reg <= buf_val_z_load_3_6_reg_206_pp0_iter17_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter19_reg <= buf_val_z_load_3_6_reg_206_pp0_iter18_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter20_reg <= buf_val_z_load_3_6_reg_206_pp0_iter19_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter21_reg <= buf_val_z_load_3_6_reg_206_pp0_iter20_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter22_reg <= buf_val_z_load_3_6_reg_206_pp0_iter21_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter23_reg <= buf_val_z_load_3_6_reg_206_pp0_iter22_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter24_reg <= buf_val_z_load_3_6_reg_206_pp0_iter23_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter2_reg <= buf_val_z_load_3_6_reg_206;
        buf_val_z_load_3_6_reg_206_pp0_iter3_reg <= buf_val_z_load_3_6_reg_206_pp0_iter2_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter4_reg <= buf_val_z_load_3_6_reg_206_pp0_iter3_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter5_reg <= buf_val_z_load_3_6_reg_206_pp0_iter4_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter6_reg <= buf_val_z_load_3_6_reg_206_pp0_iter5_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter7_reg <= buf_val_z_load_3_6_reg_206_pp0_iter6_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter8_reg <= buf_val_z_load_3_6_reg_206_pp0_iter7_reg;
        buf_val_z_load_3_6_reg_206_pp0_iter9_reg <= buf_val_z_load_3_6_reg_206_pp0_iter8_reg;
        buf_val_z_load_3_reg_852_pp0_iter10_reg <= buf_val_z_load_3_reg_852_pp0_iter9_reg;
        buf_val_z_load_3_reg_852_pp0_iter11_reg <= buf_val_z_load_3_reg_852_pp0_iter10_reg;
        buf_val_z_load_3_reg_852_pp0_iter12_reg <= buf_val_z_load_3_reg_852_pp0_iter11_reg;
        buf_val_z_load_3_reg_852_pp0_iter2_reg <= buf_val_z_load_3_reg_852;
        buf_val_z_load_3_reg_852_pp0_iter3_reg <= buf_val_z_load_3_reg_852_pp0_iter2_reg;
        buf_val_z_load_3_reg_852_pp0_iter4_reg <= buf_val_z_load_3_reg_852_pp0_iter3_reg;
        buf_val_z_load_3_reg_852_pp0_iter5_reg <= buf_val_z_load_3_reg_852_pp0_iter4_reg;
        buf_val_z_load_3_reg_852_pp0_iter6_reg <= buf_val_z_load_3_reg_852_pp0_iter5_reg;
        buf_val_z_load_3_reg_852_pp0_iter7_reg <= buf_val_z_load_3_reg_852_pp0_iter6_reg;
        buf_val_z_load_3_reg_852_pp0_iter8_reg <= buf_val_z_load_3_reg_852_pp0_iter7_reg;
        buf_val_z_load_3_reg_852_pp0_iter9_reg <= buf_val_z_load_3_reg_852_pp0_iter8_reg;
        buf_val_z_load_4_reg_867_pp0_iter10_reg <= buf_val_z_load_4_reg_867_pp0_iter9_reg;
        buf_val_z_load_4_reg_867_pp0_iter11_reg <= buf_val_z_load_4_reg_867_pp0_iter10_reg;
        buf_val_z_load_4_reg_867_pp0_iter12_reg <= buf_val_z_load_4_reg_867_pp0_iter11_reg;
        buf_val_z_load_4_reg_867_pp0_iter13_reg <= buf_val_z_load_4_reg_867_pp0_iter12_reg;
        buf_val_z_load_4_reg_867_pp0_iter14_reg <= buf_val_z_load_4_reg_867_pp0_iter13_reg;
        buf_val_z_load_4_reg_867_pp0_iter15_reg <= buf_val_z_load_4_reg_867_pp0_iter14_reg;
        buf_val_z_load_4_reg_867_pp0_iter16_reg <= buf_val_z_load_4_reg_867_pp0_iter15_reg;
        buf_val_z_load_4_reg_867_pp0_iter2_reg <= buf_val_z_load_4_reg_867;
        buf_val_z_load_4_reg_867_pp0_iter3_reg <= buf_val_z_load_4_reg_867_pp0_iter2_reg;
        buf_val_z_load_4_reg_867_pp0_iter4_reg <= buf_val_z_load_4_reg_867_pp0_iter3_reg;
        buf_val_z_load_4_reg_867_pp0_iter5_reg <= buf_val_z_load_4_reg_867_pp0_iter4_reg;
        buf_val_z_load_4_reg_867_pp0_iter6_reg <= buf_val_z_load_4_reg_867_pp0_iter5_reg;
        buf_val_z_load_4_reg_867_pp0_iter7_reg <= buf_val_z_load_4_reg_867_pp0_iter6_reg;
        buf_val_z_load_4_reg_867_pp0_iter8_reg <= buf_val_z_load_4_reg_867_pp0_iter7_reg;
        buf_val_z_load_4_reg_867_pp0_iter9_reg <= buf_val_z_load_4_reg_867_pp0_iter8_reg;
        or_cond_reg_784_pp0_iter10_reg <= or_cond_reg_784_pp0_iter9_reg;
        or_cond_reg_784_pp0_iter11_reg <= or_cond_reg_784_pp0_iter10_reg;
        or_cond_reg_784_pp0_iter12_reg <= or_cond_reg_784_pp0_iter11_reg;
        or_cond_reg_784_pp0_iter13_reg <= or_cond_reg_784_pp0_iter12_reg;
        or_cond_reg_784_pp0_iter14_reg <= or_cond_reg_784_pp0_iter13_reg;
        or_cond_reg_784_pp0_iter15_reg <= or_cond_reg_784_pp0_iter14_reg;
        or_cond_reg_784_pp0_iter16_reg <= or_cond_reg_784_pp0_iter15_reg;
        or_cond_reg_784_pp0_iter17_reg <= or_cond_reg_784_pp0_iter16_reg;
        or_cond_reg_784_pp0_iter18_reg <= or_cond_reg_784_pp0_iter17_reg;
        or_cond_reg_784_pp0_iter19_reg <= or_cond_reg_784_pp0_iter18_reg;
        or_cond_reg_784_pp0_iter20_reg <= or_cond_reg_784_pp0_iter19_reg;
        or_cond_reg_784_pp0_iter21_reg <= or_cond_reg_784_pp0_iter20_reg;
        or_cond_reg_784_pp0_iter22_reg <= or_cond_reg_784_pp0_iter21_reg;
        or_cond_reg_784_pp0_iter23_reg <= or_cond_reg_784_pp0_iter22_reg;
        or_cond_reg_784_pp0_iter24_reg <= or_cond_reg_784_pp0_iter23_reg;
        or_cond_reg_784_pp0_iter25_reg <= or_cond_reg_784_pp0_iter24_reg;
        or_cond_reg_784_pp0_iter26_reg <= or_cond_reg_784_pp0_iter25_reg;
        or_cond_reg_784_pp0_iter27_reg <= or_cond_reg_784_pp0_iter26_reg;
        or_cond_reg_784_pp0_iter28_reg <= or_cond_reg_784_pp0_iter27_reg;
        or_cond_reg_784_pp0_iter29_reg <= or_cond_reg_784_pp0_iter28_reg;
        or_cond_reg_784_pp0_iter2_reg <= or_cond_reg_784_pp0_iter1_reg;
        or_cond_reg_784_pp0_iter30_reg <= or_cond_reg_784_pp0_iter29_reg;
        or_cond_reg_784_pp0_iter31_reg <= or_cond_reg_784_pp0_iter30_reg;
        or_cond_reg_784_pp0_iter3_reg <= or_cond_reg_784_pp0_iter2_reg;
        or_cond_reg_784_pp0_iter4_reg <= or_cond_reg_784_pp0_iter3_reg;
        or_cond_reg_784_pp0_iter5_reg <= or_cond_reg_784_pp0_iter4_reg;
        or_cond_reg_784_pp0_iter6_reg <= or_cond_reg_784_pp0_iter5_reg;
        or_cond_reg_784_pp0_iter7_reg <= or_cond_reg_784_pp0_iter6_reg;
        or_cond_reg_784_pp0_iter8_reg <= or_cond_reg_784_pp0_iter7_reg;
        or_cond_reg_784_pp0_iter9_reg <= or_cond_reg_784_pp0_iter8_reg;
        tmp_47_reg_788_pp0_iter10_reg <= tmp_47_reg_788_pp0_iter9_reg;
        tmp_47_reg_788_pp0_iter11_reg <= tmp_47_reg_788_pp0_iter10_reg;
        tmp_47_reg_788_pp0_iter12_reg <= tmp_47_reg_788_pp0_iter11_reg;
        tmp_47_reg_788_pp0_iter13_reg <= tmp_47_reg_788_pp0_iter12_reg;
        tmp_47_reg_788_pp0_iter14_reg <= tmp_47_reg_788_pp0_iter13_reg;
        tmp_47_reg_788_pp0_iter15_reg <= tmp_47_reg_788_pp0_iter14_reg;
        tmp_47_reg_788_pp0_iter16_reg <= tmp_47_reg_788_pp0_iter15_reg;
        tmp_47_reg_788_pp0_iter17_reg <= tmp_47_reg_788_pp0_iter16_reg;
        tmp_47_reg_788_pp0_iter18_reg <= tmp_47_reg_788_pp0_iter17_reg;
        tmp_47_reg_788_pp0_iter19_reg <= tmp_47_reg_788_pp0_iter18_reg;
        tmp_47_reg_788_pp0_iter20_reg <= tmp_47_reg_788_pp0_iter19_reg;
        tmp_47_reg_788_pp0_iter21_reg <= tmp_47_reg_788_pp0_iter20_reg;
        tmp_47_reg_788_pp0_iter22_reg <= tmp_47_reg_788_pp0_iter21_reg;
        tmp_47_reg_788_pp0_iter23_reg <= tmp_47_reg_788_pp0_iter22_reg;
        tmp_47_reg_788_pp0_iter24_reg <= tmp_47_reg_788_pp0_iter23_reg;
        tmp_47_reg_788_pp0_iter25_reg <= tmp_47_reg_788_pp0_iter24_reg;
        tmp_47_reg_788_pp0_iter26_reg <= tmp_47_reg_788_pp0_iter25_reg;
        tmp_47_reg_788_pp0_iter27_reg <= tmp_47_reg_788_pp0_iter26_reg;
        tmp_47_reg_788_pp0_iter28_reg <= tmp_47_reg_788_pp0_iter27_reg;
        tmp_47_reg_788_pp0_iter29_reg <= tmp_47_reg_788_pp0_iter28_reg;
        tmp_47_reg_788_pp0_iter2_reg <= tmp_47_reg_788_pp0_iter1_reg;
        tmp_47_reg_788_pp0_iter30_reg <= tmp_47_reg_788_pp0_iter29_reg;
        tmp_47_reg_788_pp0_iter31_reg <= tmp_47_reg_788_pp0_iter30_reg;
        tmp_47_reg_788_pp0_iter3_reg <= tmp_47_reg_788_pp0_iter2_reg;
        tmp_47_reg_788_pp0_iter4_reg <= tmp_47_reg_788_pp0_iter3_reg;
        tmp_47_reg_788_pp0_iter5_reg <= tmp_47_reg_788_pp0_iter4_reg;
        tmp_47_reg_788_pp0_iter6_reg <= tmp_47_reg_788_pp0_iter5_reg;
        tmp_47_reg_788_pp0_iter7_reg <= tmp_47_reg_788_pp0_iter6_reg;
        tmp_47_reg_788_pp0_iter8_reg <= tmp_47_reg_788_pp0_iter7_reg;
        tmp_47_reg_788_pp0_iter9_reg <= tmp_47_reg_788_pp0_iter8_reg;
        tmp_x_1_load_1_reg_872_pp0_iter10_reg <= tmp_x_1_load_1_reg_872_pp0_iter9_reg;
        tmp_x_1_load_1_reg_872_pp0_iter11_reg <= tmp_x_1_load_1_reg_872_pp0_iter10_reg;
        tmp_x_1_load_1_reg_872_pp0_iter12_reg <= tmp_x_1_load_1_reg_872_pp0_iter11_reg;
        tmp_x_1_load_1_reg_872_pp0_iter13_reg <= tmp_x_1_load_1_reg_872_pp0_iter12_reg;
        tmp_x_1_load_1_reg_872_pp0_iter14_reg <= tmp_x_1_load_1_reg_872_pp0_iter13_reg;
        tmp_x_1_load_1_reg_872_pp0_iter15_reg <= tmp_x_1_load_1_reg_872_pp0_iter14_reg;
        tmp_x_1_load_1_reg_872_pp0_iter16_reg <= tmp_x_1_load_1_reg_872_pp0_iter15_reg;
        tmp_x_1_load_1_reg_872_pp0_iter17_reg <= tmp_x_1_load_1_reg_872_pp0_iter16_reg;
        tmp_x_1_load_1_reg_872_pp0_iter18_reg <= tmp_x_1_load_1_reg_872_pp0_iter17_reg;
        tmp_x_1_load_1_reg_872_pp0_iter19_reg <= tmp_x_1_load_1_reg_872_pp0_iter18_reg;
        tmp_x_1_load_1_reg_872_pp0_iter20_reg <= tmp_x_1_load_1_reg_872_pp0_iter19_reg;
        tmp_x_1_load_1_reg_872_pp0_iter2_reg <= tmp_x_1_load_1_reg_872;
        tmp_x_1_load_1_reg_872_pp0_iter3_reg <= tmp_x_1_load_1_reg_872_pp0_iter2_reg;
        tmp_x_1_load_1_reg_872_pp0_iter4_reg <= tmp_x_1_load_1_reg_872_pp0_iter3_reg;
        tmp_x_1_load_1_reg_872_pp0_iter5_reg <= tmp_x_1_load_1_reg_872_pp0_iter4_reg;
        tmp_x_1_load_1_reg_872_pp0_iter6_reg <= tmp_x_1_load_1_reg_872_pp0_iter5_reg;
        tmp_x_1_load_1_reg_872_pp0_iter7_reg <= tmp_x_1_load_1_reg_872_pp0_iter6_reg;
        tmp_x_1_load_1_reg_872_pp0_iter8_reg <= tmp_x_1_load_1_reg_872_pp0_iter7_reg;
        tmp_x_1_load_1_reg_872_pp0_iter9_reg <= tmp_x_1_load_1_reg_872_pp0_iter8_reg;
        tmp_y_1_load_1_reg_877_pp0_iter10_reg <= tmp_y_1_load_1_reg_877_pp0_iter9_reg;
        tmp_y_1_load_1_reg_877_pp0_iter11_reg <= tmp_y_1_load_1_reg_877_pp0_iter10_reg;
        tmp_y_1_load_1_reg_877_pp0_iter12_reg <= tmp_y_1_load_1_reg_877_pp0_iter11_reg;
        tmp_y_1_load_1_reg_877_pp0_iter13_reg <= tmp_y_1_load_1_reg_877_pp0_iter12_reg;
        tmp_y_1_load_1_reg_877_pp0_iter14_reg <= tmp_y_1_load_1_reg_877_pp0_iter13_reg;
        tmp_y_1_load_1_reg_877_pp0_iter15_reg <= tmp_y_1_load_1_reg_877_pp0_iter14_reg;
        tmp_y_1_load_1_reg_877_pp0_iter16_reg <= tmp_y_1_load_1_reg_877_pp0_iter15_reg;
        tmp_y_1_load_1_reg_877_pp0_iter17_reg <= tmp_y_1_load_1_reg_877_pp0_iter16_reg;
        tmp_y_1_load_1_reg_877_pp0_iter18_reg <= tmp_y_1_load_1_reg_877_pp0_iter17_reg;
        tmp_y_1_load_1_reg_877_pp0_iter19_reg <= tmp_y_1_load_1_reg_877_pp0_iter18_reg;
        tmp_y_1_load_1_reg_877_pp0_iter20_reg <= tmp_y_1_load_1_reg_877_pp0_iter19_reg;
        tmp_y_1_load_1_reg_877_pp0_iter2_reg <= tmp_y_1_load_1_reg_877;
        tmp_y_1_load_1_reg_877_pp0_iter3_reg <= tmp_y_1_load_1_reg_877_pp0_iter2_reg;
        tmp_y_1_load_1_reg_877_pp0_iter4_reg <= tmp_y_1_load_1_reg_877_pp0_iter3_reg;
        tmp_y_1_load_1_reg_877_pp0_iter5_reg <= tmp_y_1_load_1_reg_877_pp0_iter4_reg;
        tmp_y_1_load_1_reg_877_pp0_iter6_reg <= tmp_y_1_load_1_reg_877_pp0_iter5_reg;
        tmp_y_1_load_1_reg_877_pp0_iter7_reg <= tmp_y_1_load_1_reg_877_pp0_iter6_reg;
        tmp_y_1_load_1_reg_877_pp0_iter8_reg <= tmp_y_1_load_1_reg_877_pp0_iter7_reg;
        tmp_y_1_load_1_reg_877_pp0_iter9_reg <= tmp_y_1_load_1_reg_877_pp0_iter8_reg;
        tmp_z_1_load_1_reg_882_pp0_iter10_reg <= tmp_z_1_load_1_reg_882_pp0_iter9_reg;
        tmp_z_1_load_1_reg_882_pp0_iter11_reg <= tmp_z_1_load_1_reg_882_pp0_iter10_reg;
        tmp_z_1_load_1_reg_882_pp0_iter12_reg <= tmp_z_1_load_1_reg_882_pp0_iter11_reg;
        tmp_z_1_load_1_reg_882_pp0_iter13_reg <= tmp_z_1_load_1_reg_882_pp0_iter12_reg;
        tmp_z_1_load_1_reg_882_pp0_iter14_reg <= tmp_z_1_load_1_reg_882_pp0_iter13_reg;
        tmp_z_1_load_1_reg_882_pp0_iter15_reg <= tmp_z_1_load_1_reg_882_pp0_iter14_reg;
        tmp_z_1_load_1_reg_882_pp0_iter16_reg <= tmp_z_1_load_1_reg_882_pp0_iter15_reg;
        tmp_z_1_load_1_reg_882_pp0_iter17_reg <= tmp_z_1_load_1_reg_882_pp0_iter16_reg;
        tmp_z_1_load_1_reg_882_pp0_iter18_reg <= tmp_z_1_load_1_reg_882_pp0_iter17_reg;
        tmp_z_1_load_1_reg_882_pp0_iter19_reg <= tmp_z_1_load_1_reg_882_pp0_iter18_reg;
        tmp_z_1_load_1_reg_882_pp0_iter20_reg <= tmp_z_1_load_1_reg_882_pp0_iter19_reg;
        tmp_z_1_load_1_reg_882_pp0_iter2_reg <= tmp_z_1_load_1_reg_882;
        tmp_z_1_load_1_reg_882_pp0_iter3_reg <= tmp_z_1_load_1_reg_882_pp0_iter2_reg;
        tmp_z_1_load_1_reg_882_pp0_iter4_reg <= tmp_z_1_load_1_reg_882_pp0_iter3_reg;
        tmp_z_1_load_1_reg_882_pp0_iter5_reg <= tmp_z_1_load_1_reg_882_pp0_iter4_reg;
        tmp_z_1_load_1_reg_882_pp0_iter6_reg <= tmp_z_1_load_1_reg_882_pp0_iter5_reg;
        tmp_z_1_load_1_reg_882_pp0_iter7_reg <= tmp_z_1_load_1_reg_882_pp0_iter6_reg;
        tmp_z_1_load_1_reg_882_pp0_iter8_reg <= tmp_z_1_load_1_reg_882_pp0_iter7_reg;
        tmp_z_1_load_1_reg_882_pp0_iter9_reg <= tmp_z_1_load_1_reg_882_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_load_3_1_fu_82 <= buf_val_x_load_3_2_fu_94;
        buf_val_x_load_3_2_fu_94 <= buf_val_x_load_3_3_fu_106;
        buf_val_x_load_3_3_fu_106 <= buf_val_x_load_3_4_fu_118;
        buf_val_x_load_3_4_fu_118 <= tmp_x_1_fu_130;
        buf_val_x_load_6_fu_70 <= buf_val_x_load_3_1_fu_82;
        buf_val_y_load_3_1_fu_86 <= buf_val_y_load_3_2_fu_98;
        buf_val_y_load_3_2_fu_98 <= buf_val_y_load_3_3_fu_110;
        buf_val_y_load_3_3_fu_110 <= buf_val_y_load_3_4_fu_122;
        buf_val_y_load_3_4_fu_122 <= tmp_y_1_fu_134;
        buf_val_y_load_6_fu_74 <= buf_val_y_load_3_1_fu_86;
        buf_val_z_load_3_1_fu_90 <= buf_val_z_load_3_2_fu_102;
        buf_val_z_load_3_2_fu_102 <= buf_val_z_load_3_3_fu_114;
        buf_val_z_load_3_3_fu_114 <= buf_val_z_load_3_4_fu_126;
        buf_val_z_load_3_4_fu_126 <= tmp_z_1_fu_138;
        buf_val_z_load_6_fu_78 <= buf_val_z_load_3_1_fu_90;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_cond_reg_784 <= or_cond_fu_486_p2;
        tmp_reg_780 <= c_mid2_fu_458_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_486_p2 == 1'd0) & (exitcond_flatten_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_47_reg_788 <= tmp_47_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_784_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_78_reg_887 <= grp_fu_332_p2;
        tmp_79_reg_892 <= grp_fu_337_p2;
        tmp_80_reg_897 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_771 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_x_1_fu_130 <= ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4;
        tmp_y_1_fu_134 <= ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4;
        tmp_z_1_fu_138 <= ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_771 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_x_1_load_1_reg_872 <= tmp_x_1_fu_130;
        tmp_y_1_load_1_reg_877 <= tmp_y_1_fu_134;
        tmp_z_1_load_1_reg_882 <= tmp_z_1_fu_138;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4 = y_filtered_x_dout;
    end else begin
        ap_phi_mux_buf_val_x_load_3_6_phi_fu_236_p4 = ap_phi_reg_pp0_iter1_buf_val_x_load_3_6_reg_232;
    end
end

always @ (*) begin
    if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4 = y_filtered_y_dout;
    end else begin
        ap_phi_mux_buf_val_y_load_3_6_phi_fu_223_p4 = ap_phi_reg_pp0_iter1_buf_val_y_load_3_6_reg_219;
    end
end

always @ (*) begin
    if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4 = y_filtered_z_dout;
    end else begin
        ap_phi_mux_buf_val_z_load_3_6_phi_fu_210_p4 = ap_phi_reg_pp0_iter1_buf_val_z_load_3_6_reg_206;
    end
end

always @ (*) begin
    if ((((tmp_47_reg_788_pp0_iter31_reg == 1'd1) & (or_cond_reg_784_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1)))) begin
        filtered_gradient_x_blk_n = filtered_gradient_x_full_n;
    end else begin
        filtered_gradient_x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        if ((or_cond_reg_784_pp0_iter31_reg == 1'd1)) begin
            filtered_gradient_x_din = acc_x_6_reg_1082;
        end else if ((ap_predicate_op271_write_state34 == 1'b1)) begin
            filtered_gradient_x_din = 32'd0;
        end else begin
            filtered_gradient_x_din = 'bx;
        end
    end else begin
        filtered_gradient_x_din = 'bx;
    end
end

always @ (*) begin
    if ((((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op271_write_state34 == 1'b1)))) begin
        filtered_gradient_x_write = 1'b1;
    end else begin
        filtered_gradient_x_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_47_reg_788_pp0_iter31_reg == 1'd1) & (or_cond_reg_784_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1)))) begin
        filtered_gradient_y_blk_n = filtered_gradient_y_full_n;
    end else begin
        filtered_gradient_y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        if ((or_cond_reg_784_pp0_iter31_reg == 1'd1)) begin
            filtered_gradient_y_din = acc_y_6_reg_1087;
        end else if ((ap_predicate_op271_write_state34 == 1'b1)) begin
            filtered_gradient_y_din = 32'd0;
        end else begin
            filtered_gradient_y_din = 'bx;
        end
    end else begin
        filtered_gradient_y_din = 'bx;
    end
end

always @ (*) begin
    if ((((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op271_write_state34 == 1'b1)))) begin
        filtered_gradient_y_write = 1'b1;
    end else begin
        filtered_gradient_y_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_47_reg_788_pp0_iter31_reg == 1'd1) & (or_cond_reg_784_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1)))) begin
        filtered_gradient_z_blk_n = filtered_gradient_z_full_n;
    end else begin
        filtered_gradient_z_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        if ((or_cond_reg_784_pp0_iter31_reg == 1'd1)) begin
            filtered_gradient_z_din = acc_z_6_reg_1092;
        end else if ((ap_predicate_op271_write_state34 == 1'b1)) begin
            filtered_gradient_z_din = 32'd0;
        end else begin
            filtered_gradient_z_din = 'bx;
        end
    end else begin
        filtered_gradient_z_din = 'bx;
    end
end

always @ (*) begin
    if ((((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter32 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op271_write_state34 == 1'b1)))) begin
        filtered_gradient_z_write = 1'b1;
    end else begin
        filtered_gradient_z_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_245_ce = 1'b1;
    end else begin
        grp_fu_245_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_250_ce = 1'b1;
    end else begin
        grp_fu_250_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_255_ce = 1'b1;
    end else begin
        grp_fu_255_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_260_ce = 1'b1;
    end else begin
        grp_fu_260_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_264_ce = 1'b1;
    end else begin
        grp_fu_264_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_268_ce = 1'b1;
    end else begin
        grp_fu_268_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_272_ce = 1'b1;
    end else begin
        grp_fu_272_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_276_ce = 1'b1;
    end else begin
        grp_fu_276_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_280_ce = 1'b1;
    end else begin
        grp_fu_280_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_284_ce = 1'b1;
    end else begin
        grp_fu_284_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_288_ce = 1'b1;
    end else begin
        grp_fu_288_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_292_ce = 1'b1;
    end else begin
        grp_fu_292_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_296_ce = 1'b1;
    end else begin
        grp_fu_296_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_300_ce = 1'b1;
    end else begin
        grp_fu_300_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_304_ce = 1'b1;
    end else begin
        grp_fu_304_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_308_ce = 1'b1;
    end else begin
        grp_fu_308_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_312_ce = 1'b1;
    end else begin
        grp_fu_312_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_316_ce = 1'b1;
    end else begin
        grp_fu_316_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_320_ce = 1'b1;
    end else begin
        grp_fu_320_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_324_ce = 1'b1;
    end else begin
        grp_fu_324_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_328_ce = 1'b1;
    end else begin
        grp_fu_328_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_332_ce = 1'b1;
    end else begin
        grp_fu_332_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_342_ce = 1'b1;
    end else begin
        grp_fu_342_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_347_ce = 1'b1;
    end else begin
        grp_fu_347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_352_ce = 1'b1;
    end else begin
        grp_fu_352_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_357_ce = 1'b1;
    end else begin
        grp_fu_357_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_362_ce = 1'b1;
    end else begin
        grp_fu_362_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_367_ce = 1'b1;
    end else begin
        grp_fu_367_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_372_ce = 1'b1;
    end else begin
        grp_fu_372_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_377_ce = 1'b1;
    end else begin
        grp_fu_377_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_382_ce = 1'b1;
    end else begin
        grp_fu_382_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_387_ce = 1'b1;
    end else begin
        grp_fu_387_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_392_ce = 1'b1;
    end else begin
        grp_fu_392_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_397_ce = 1'b1;
    end else begin
        grp_fu_397_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_402_ce = 1'b1;
    end else begin
        grp_fu_402_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_407_ce = 1'b1;
    end else begin
        grp_fu_407_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_412_ce = 1'b1;
    end else begin
        grp_fu_412_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_417_ce = 1'b1;
    end else begin
        grp_fu_417_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_422_ce = 1'b1;
    end else begin
        grp_fu_422_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_428_ce = 1'b1;
    end else begin
        grp_fu_428_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_434_ce = 1'b1;
    end else begin
        grp_fu_434_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_x_blk_n = y_filtered_x_empty_n;
    end else begin
        y_filtered_x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op107_read_state3 == 1'b1))) begin
        y_filtered_x_read = 1'b1;
    end else begin
        y_filtered_x_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_y_blk_n = y_filtered_y_empty_n;
    end else begin
        y_filtered_y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op107_read_state3 == 1'b1))) begin
        y_filtered_y_read = 1'b1;
    end else begin
        y_filtered_y_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_z_blk_n = y_filtered_z_empty_n;
    end else begin
        y_filtered_z_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op107_read_state3 == 1'b1))) begin
        y_filtered_z_read = 1'b1;
    end else begin
        y_filtered_z_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & ~((ap_enable_reg_pp0_iter31 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter32 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter31 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter32 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter32 == 1'b1) & (((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_z_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_y_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_x_full_n == 1'b0)) | ((filtered_gradient_z_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_y_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_x_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((y_filtered_z_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_y_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_x_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter32 == 1'b1) & (((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_z_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_y_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_x_full_n == 1'b0)) | ((filtered_gradient_z_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_y_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_x_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((y_filtered_z_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_y_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_x_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter32 == 1'b1) & (((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_z_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_y_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_x_full_n == 1'b0)) | ((filtered_gradient_z_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_y_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_x_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((y_filtered_z_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_y_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_x_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_pp0_stage0_iter32 = (((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_z_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_y_full_n == 1'b0)) | ((or_cond_reg_784_pp0_iter31_reg == 1'd1) & (filtered_gradient_x_full_n == 1'b0)) | ((filtered_gradient_z_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_y_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)) | ((filtered_gradient_x_full_n == 1'b0) & (ap_predicate_op271_write_state34 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((y_filtered_z_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_y_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)) | ((y_filtered_x_empty_n == 1'b0) & (ap_predicate_op107_read_state3 == 1'b1)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_293 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_962 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_buf_val_x_load_3_6_reg_232 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_y_load_3_6_reg_219 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_z_load_3_6_reg_206 = 'bx;

always @ (*) begin
    ap_predicate_op107_read_state3 = ((tmp_reg_780 == 1'd0) & (exitcond_flatten_reg_771 == 1'd0));
end

always @ (*) begin
    ap_predicate_op271_write_state34 = ((tmp_47_reg_788_pp0_iter31_reg == 1'd1) & (or_cond_reg_784_pp0_iter31_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign c_3_fu_498_p2 = (c_mid2_fu_458_p3 + 11'd1);

assign c_mid2_fu_458_p3 = ((exitcond_fu_452_p2[0:0] === 1'b1) ? 11'd0 : c_reg_195);

assign exitcond_flatten_fu_440_p2 = ((indvar_flatten_reg_184 == 19'd447772) ? 1'b1 : 1'b0);

assign exitcond_fu_452_p2 = ((c_reg_195 == 11'd1027) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_446_p2 = (indvar_flatten_reg_184 + 19'd1);

assign or_cond_fu_486_p2 = (tmp_44_fu_480_p2 & rev_fu_474_p2);

assign rev_fu_474_p2 = (tmp_fu_466_p3 ^ 1'd1);

assign start_out = real_start;

assign tmp_44_fu_480_p2 = ((c_mid2_fu_458_p3 > 11'd5) ? 1'b1 : 1'b0);

assign tmp_47_fu_492_p2 = ((c_mid2_fu_458_p3 > 11'd2) ? 1'b1 : 1'b0);

assign tmp_fu_466_p3 = c_mid2_fu_458_p3[32'd10];

endmodule //a0_gradient_weight_x
